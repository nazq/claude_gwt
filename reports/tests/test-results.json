{"numTotalTestSuites":359,"numPassedTestSuites":359,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":800,"numPassedTests":800,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751925092688,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["cgwt command integration tests","cgwt list functionality"],"fullName":"cgwt command integration tests cgwt list functionality should show \"Not in a Claude GWT managed repository\" for non-git directories","status":"passed","title":"should show \"Not in a Claude GWT managed repository\" for non-git directories","duration":408.278756,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt list functionality"],"fullName":"cgwt command integration tests cgwt list functionality should list sessions with proper formatting","status":"passed","title":"should list sessions with proper formatting","duration":377.60734100000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt switch functionality"],"fullName":"cgwt command integration tests cgwt switch functionality should handle index 0 when no supervisor exists","status":"passed","title":"should handle index 0 when no supervisor exists","duration":642.9175790000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt switch functionality"],"fullName":"cgwt command integration tests cgwt switch functionality should show correct range for invalid indices","status":"passed","title":"should show correct range for invalid indices","duration":645.6892890000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt switch functionality"],"fullName":"cgwt command integration tests cgwt switch functionality should switch by branch name without refs/heads prefix","status":"passed","title":"should switch by branch name without refs/heads prefix","duration":555.210924,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt switch functionality"],"fullName":"cgwt command integration tests cgwt switch functionality should handle branch names correctly","status":"passed","title":"should handle branch names correctly","duration":630.7121910000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt error handling"],"fullName":"cgwt command integration tests cgwt error handling should handle missing arguments gracefully","status":"passed","title":"should handle missing arguments gracefully","duration":147.52076899999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt error handling"],"fullName":"cgwt command integration tests cgwt error handling should handle invalid branch names","status":"passed","title":"should handle invalid branch names","duration":657.6810760000003,"failureMessages":[],"meta":{}}],"startTime":1751925093909,"endTime":1751925097975.6812,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/cgwt-command-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["CLI Debug Tests"],"fullName":"CLI Debug Tests should run cgwt app and capture all output","status":"passed","title":"should run cgwt app and capture all output","duration":231.86656799999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Debug Tests"],"fullName":"CLI Debug Tests should run cgwt app without help and see guided experience","status":"passed","title":"should run cgwt app without help and see guided experience","duration":1013.5386589999999,"failureMessages":[],"meta":{}}],"startTime":1751925094341,"endTime":1751925095586.5386,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/cli-debug.test.ts"},{"assertionResults":[{"ancestorTitles":["CLI Integration Workflow","CLI basic operations"],"fullName":"CLI Integration Workflow CLI basic operations should show help for cgwt","status":"passed","title":"should show help for cgwt","duration":168.10631200000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","CLI basic operations"],"fullName":"CLI Integration Workflow CLI basic operations should show help for cgwt app","status":"passed","title":"should show help for cgwt app","duration":208.85720100000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","CLI basic operations"],"fullName":"CLI Integration Workflow CLI basic operations should show version","status":"passed","title":"should show version","duration":227.20187099999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Guided experience workflow"],"fullName":"CLI Integration Workflow Guided experience workflow should start guided experience in empty directory","status":"passed","title":"should start guided experience in empty directory","duration":1014.2392129999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Guided experience workflow"],"fullName":"CLI Integration Workflow Guided experience workflow should handle guided experience exit","status":"passed","title":"should handle guided experience exit","duration":208.46434399999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","App command workflows"],"fullName":"CLI Integration Workflow App command workflows should initialize with app init command","status":"passed","title":"should initialize with app init command","duration":517.209018,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","App command workflows"],"fullName":"CLI Integration Workflow App command workflows should show logs location","status":"passed","title":"should show logs location","duration":120.236492,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","App command workflows"],"fullName":"CLI Integration Workflow App command workflows should handle app commands help","status":"passed","title":"should handle app commands help","duration":425.0085160000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Multi-project support"],"fullName":"CLI Integration Workflow Multi-project support should list projects when no sessions exist","status":"passed","title":"should list projects when no sessions exist","duration":110.51576999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Multi-project support"],"fullName":"CLI Integration Workflow Multi-project support should handle list active sessions","status":"passed","title":"should handle list active sessions","duration":116.20833300000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Multi-project support"],"fullName":"CLI Integration Workflow Multi-project support should handle invalid attach index","status":"passed","title":"should handle invalid attach index","duration":122.28541900000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Legacy command support"],"fullName":"CLI Integration Workflow Legacy command support should support legacy list command","status":"passed","title":"should support legacy list command","duration":131.86906399999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Legacy command support"],"fullName":"CLI Integration Workflow Legacy command support should handle legacy switch command format","status":"passed","title":"should handle legacy switch command format","duration":119.60289699999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Error handling"],"fullName":"CLI Integration Workflow Error handling should handle invalid arguments gracefully","status":"passed","title":"should handle invalid arguments gracefully","duration":113.80883399999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Error handling"],"fullName":"CLI Integration Workflow Error handling should show helpful error for missing arguments","status":"passed","title":"should show helpful error for missing arguments","duration":110.5181690000004,"failureMessages":[],"meta":{}}],"startTime":1751925093375,"endTime":1751925097090.518,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/cli-workflow-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Existing Branch Worktree Integration","getBranchesWithoutWorktrees with par-run repo"],"fullName":"Existing Branch Worktree Integration getBranchesWithoutWorktrees with par-run repo should correctly identify branches without worktrees in par-run repository","status":"passed","title":"should correctly identify branches without worktrees in par-run repository","duration":588.31464,"failureMessages":[],"meta":{}},{"ancestorTitles":["Existing Branch Worktree Integration","getBranchesWithoutWorktrees with par-run repo"],"fullName":"Existing Branch Worktree Integration getBranchesWithoutWorktrees with par-run repo should handle all existing branches in par-run repo","status":"passed","title":"should handle all existing branches in par-run repo","duration":606.3509960000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Existing Branch Worktree Integration","addWorktree for existing par-run branches"],"fullName":"Existing Branch Worktree Integration addWorktree for existing par-run branches should successfully create worktrees for par-run branches","status":"passed","title":"should successfully create worktrees for par-run branches","duration":483.70116900000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["Existing Branch Worktree Integration","addWorktree for existing par-run branches"],"fullName":"Existing Branch Worktree Integration addWorktree for existing par-run branches should create new branch when branch does not exist","status":"passed","title":"should create new branch when branch does not exist","duration":493.81692399999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["Existing Branch Worktree Integration","Complete workflow simulation with par-run"],"fullName":"Existing Branch Worktree Integration Complete workflow simulation with par-run should handle a complete workflow of managing par-run branches","status":"passed","title":"should handle a complete workflow of managing par-run branches","duration":539.2826129999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Existing Branch Worktree Integration","Complete workflow simulation with par-run"],"fullName":"Existing Branch Worktree Integration Complete workflow simulation with par-run should handle rapid worktree creation and removal","status":"passed","title":"should handle rapid worktree creation and removal","duration":571.1571049999998,"failureMessages":[],"meta":{}}],"startTime":1751925093438,"endTime":1751925096721.1572,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/existing-branch-workflow.test.ts"},{"assertionResults":[{"ancestorTitles":["Git Operations Integration","GitDetector"],"fullName":"Git Operations Integration GitDetector should detect empty directory","status":"passed","title":"should detect empty directory","duration":36.79918799999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","GitDetector"],"fullName":"Git Operations Integration GitDetector should detect non-git directory with files","status":"passed","title":"should detect non-git directory with files","duration":45.27693599999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","GitDetector"],"fullName":"Git Operations Integration GitDetector should detect regular git repository","status":"passed","title":"should detect regular git repository","duration":225.41021,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","GitRepository"],"fullName":"Git Operations Integration GitRepository should initialize bare repository","status":"passed","title":"should initialize bare repository","duration":91.02391399999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","GitRepository"],"fullName":"Git Operations Integration GitRepository should get default branch","status":"passed","title":"should get default branch","duration":133.90293400000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","WorktreeManager"],"fullName":"Git Operations Integration WorktreeManager should list worktrees","status":"passed","title":"should list worktrees","duration":75.63481300000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","WorktreeManager"],"fullName":"Git Operations Integration WorktreeManager should add new worktree","status":"passed","title":"should add new worktree","duration":79.16411199999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","WorktreeManager"],"fullName":"Git Operations Integration WorktreeManager should remove worktree","status":"passed","title":"should remove worktree","duration":136.89590699999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","Full workflow"],"fullName":"Git Operations Integration Full workflow should handle complete worktree setup","status":"passed","title":"should handle complete worktree setup","duration":95.73130700000002,"failureMessages":[],"meta":{}}],"startTime":1751925094154,"endTime":1751925095074.7312,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/git-operations.test.ts"},{"assertionResults":[{"ancestorTitles":["Guided Experience Interactive Tests"],"fullName":"Guided Experience Interactive Tests should start guided experience and show directory detection","status":"passed","title":"should start guided experience and show directory detection","duration":1521.719966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Guided Experience Interactive Tests"],"fullName":"Guided Experience Interactive Tests should show help output correctly","status":"passed","title":"should show help output correctly","duration":118.66105700000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Guided Experience Interactive Tests"],"fullName":"Guided Experience Interactive Tests should handle quiet flag correctly","status":"passed","title":"should handle quiet flag correctly","duration":1010.665137,"failureMessages":[],"meta":{}},{"ancestorTitles":["Guided Experience Interactive Tests"],"fullName":"Guided Experience Interactive Tests should handle process interruption gracefully","status":"passed","title":"should handle process interruption gracefully","duration":509.589191,"failureMessages":[],"meta":{}},{"ancestorTitles":["Guided Experience Interactive Tests"],"fullName":"Guided Experience Interactive Tests should demonstrate the guided experience flows","status":"passed","title":"should demonstrate the guided experience flows","duration":0.7866879999996854,"failureMessages":[],"meta":{}}],"startTime":1751925093901,"endTime":1751925097062.7866,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/guided-experience.test.ts"},{"assertionResults":[{"ancestorTitles":["Real-World Workflow Integration","Complete workflow with multiple branches"],"fullName":"Real-World Workflow Integration Complete workflow with multiple branches should handle a complete development workflow","status":"passed","title":"should handle a complete development workflow","duration":361.34166500000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Complete workflow with multiple branches"],"fullName":"Real-World Workflow Integration Complete workflow with multiple branches should support concurrent operations on different branches","status":"passed","title":"should support concurrent operations on different branches","duration":103.76420400000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Task assignment and tracking"],"fullName":"Real-World Workflow Integration Task assignment and tracking should handle task files in each branch","status":"passed","title":"should handle task files in each branch","duration":81.95046400000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Phoenix/Tmux integration"],"fullName":"Real-World Workflow Integration Phoenix/Tmux integration should generate correct session names","status":"passed","title":"should generate correct session names","duration":1.363770999999815,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Phoenix/Tmux integration"],"fullName":"Real-World Workflow Integration Phoenix/Tmux integration should detect tmux availability","status":"passed","title":"should detect tmux availability","duration":4.848404999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Phoenix/Tmux integration"],"fullName":"Real-World Workflow Integration Phoenix/Tmux integration should have proper session configuration","status":"passed","title":"should have proper session configuration","duration":1.3147640000001957,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Repository cloning workflow"],"fullName":"Real-World Workflow Integration Repository cloning workflow should handle cloning from a URL","status":"passed","title":"should handle cloning from a URL","duration":71.0821249999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Branch removal workflow"],"fullName":"Real-World Workflow Integration Branch removal workflow should safely remove worktrees","status":"passed","title":"should safely remove worktrees","duration":132.31161500000007,"failureMessages":[],"meta":{}}],"startTime":1751925094166,"endTime":1751925094924.3115,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/real-world-workflow.test.ts"},{"assertionResults":[{"ancestorTitles":["Session Management Integration","Real Tmux Session Operations"],"fullName":"Session Management Integration Real Tmux Session Operations should detect tmux availability correctly","status":"passed","title":"should detect tmux availability correctly","duration":259.69293600000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Real Tmux Session Operations"],"fullName":"Session Management Integration Real Tmux Session Operations should create real tmux sessions","status":"passed","title":"should create real tmux sessions","duration":815.585351,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Real Tmux Session Operations"],"fullName":"Session Management Integration Real Tmux Session Operations should handle session restart when Claude is not running","status":"passed","title":"should handle session restart when Claude is not running","duration":181.11110699999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Multi-Session Management"],"fullName":"Session Management Integration Multi-Session Management should manage multiple concurrent sessions","status":"passed","title":"should manage multiple concurrent sessions","duration":1059.9900619999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Multi-Session Management"],"fullName":"Session Management Integration Multi-Session Management should handle session groups","status":"passed","title":"should handle session groups","duration":168.78971199999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Session Features"],"fullName":"Session Management Integration Session Features should get correct session names","status":"passed","title":"should get correct session names","duration":92.42400100000032,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Session Features"],"fullName":"Session Management Integration Session Features should handle tmux inside tmux detection","status":"passed","title":"should handle tmux inside tmux detection","duration":103.00247600000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Session Features"],"fullName":"Session Management Integration Session Features should provide predefined layouts","status":"passed","title":"should provide predefined layouts","duration":89.59555300000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Error Handling"],"fullName":"Session Management Integration Error Handling should handle session creation errors gracefully","status":"passed","title":"should handle session creation errors gracefully","duration":91.99697500000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Error Handling"],"fullName":"Session Management Integration Error Handling should handle non-existent session queries","status":"passed","title":"should handle non-existent session queries","duration":96.81156499999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Error Handling"],"fullName":"Session Management Integration Error Handling should handle killing non-existent sessions","status":"passed","title":"should handle killing non-existent sessions","duration":97.17820699999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Performance Tests"],"fullName":"Session Management Integration Performance Tests should handle rapid session creation and deletion","status":"passed","title":"should handle rapid session creation and deletion","duration":1004.4448970000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Performance Tests"],"fullName":"Session Management Integration Performance Tests should list many sessions efficiently","status":"passed","title":"should list many sessions efficiently","duration":419.41674500000045,"failureMessages":[],"meta":{}}],"startTime":1751925093506,"endTime":1751925097987.4167,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/session-management-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle regular git mode with switch branch action","status":"passed","title":"should handle regular git mode with switch branch action","duration":7.875745000000052,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle regular git mode with create branch action","status":"passed","title":"should handle regular git mode with create branch action","duration":2.5077909999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle regular git mode with supervisor action","status":"passed","title":"should handle regular git mode with supervisor action","duration":4.015401999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle regular git mode with convert action","status":"passed","title":"should handle regular git mode with convert action","duration":3.309872999999925,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle branch switch error","status":"passed","title":"should handle branch switch error","duration":3.951202999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle create branch error","status":"passed","title":"should handle create branch error","duration":4.431646000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle empty branch name in create action","status":"passed","title":"should handle empty branch name in create action","duration":4.0851129999999785,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle cancel in branch switch","status":"passed","title":"should handle cancel in branch switch","duration":2.777015000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","error handling"],"fullName":"ClaudeGWTApp - Regular Git Mode error handling should handle launchTmuxSession error","status":"passed","title":"should handle launchTmuxSession error","duration":4.053988000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","shutdownAllSessions error handling"],"fullName":"ClaudeGWTApp - Regular Git Mode shutdownAllSessions error handling should handle shutdown error gracefully","status":"passed","title":"should handle shutdown error gracefully","duration":3.7648599999999988,"failureMessages":[],"meta":{}}],"startTime":1751925093670,"endTime":1751925093711.765,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ClaudeGWTApp-regular-mode.test.ts"},{"assertionResults":[{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle empty directory and prompt for URL","status":"passed","title":"should handle empty directory and prompt for URL","duration":48.915862999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle empty directory with local init","status":"passed","title":"should handle empty directory with local init","duration":2.7840300000000298,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle existing git worktree","status":"passed","title":"should handle existing git worktree","duration":4.831989000000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle non-empty non-git directory with subdirectory creation","status":"passed","title":"should handle non-empty non-git directory with subdirectory creation","duration":6.872201000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle non-empty non-git directory without subdirectory","status":"passed","title":"should handle non-empty non-git directory without subdirectory","duration":5.632333000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle regular git repository","status":"passed","title":"should handle regular git repository","duration":4.9501410000000305,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should respect quiet mode","status":"passed","title":"should respect quiet mode","duration":2.595872999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle errors gracefully","status":"passed","title":"should handle errors gracefully","duration":7.460152000000107,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","main branch auto-creation"],"fullName":"ClaudeGWTApp main branch auto-creation should automatically create main branch worktree after cloning","status":"passed","title":"should automatically create main branch worktree after cloning","duration":3.607413999999835,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","URL validation"],"fullName":"ClaudeGWTApp URL validation should accept various Git URL formats","status":"passed","title":"should accept various Git URL formats","duration":15.680299000000105,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","error handling scenarios"],"fullName":"ClaudeGWTApp error handling scenarios should handle worktree creation failure in empty directory","status":"passed","title":"should handle worktree creation failure in empty directory","duration":4.729123000000072,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","error handling scenarios"],"fullName":"ClaudeGWTApp error handling scenarios should handle fetch failure during initialization","status":"passed","title":"should handle fetch failure during initialization","duration":5.879519999999957,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle git repository that cannot be converted","status":"passed","title":"should handle git repository that cannot be converted","duration":3.777556000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle git repository conversion with user proceeding in limited mode","status":"passed","title":"should handle git repository conversion with user proceeding in limited mode","duration":4.04126999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle successful git repository conversion","status":"passed","title":"should handle successful git repository conversion","duration":4.2164050000001225,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle git repository conversion failure","status":"passed","title":"should handle git repository conversion failure","duration":4.0546549999999115,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle user declining conversion and entering limited mode","status":"passed","title":"should handle user declining conversion and entering limited mode","duration":13.959785999999895,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","non-git directory handling"],"fullName":"ClaudeGWTApp non-git directory handling should handle subdirectory creation flow","status":"passed","title":"should handle subdirectory creation flow","duration":15.707308999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","non-git directory handling"],"fullName":"ClaudeGWTApp non-git directory handling should handle subdirectory already exists error","status":"passed","title":"should handle subdirectory already exists error","duration":2.943747999999914,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","non-git directory handling"],"fullName":"ClaudeGWTApp non-git directory handling should handle empty repo URL in subdirectory flow","status":"passed","title":"should handle empty repo URL in subdirectory flow","duration":3.1776029999998627,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","worktree scenarios"],"fullName":"ClaudeGWTApp worktree scenarios should handle empty worktree list and create first branch","status":"passed","title":"should handle empty worktree list and create first branch","duration":7.895107000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","worktree scenarios"],"fullName":"ClaudeGWTApp worktree scenarios should handle worktree creation failure for first branch","status":"passed","title":"should handle worktree creation failure for first branch","duration":9.717613000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","claude-gwt-parent directory type"],"fullName":"ClaudeGWTApp claude-gwt-parent directory type should handle claude-gwt-parent same as git-worktree","status":"passed","title":"should handle claude-gwt-parent same as git-worktree","duration":3.8005309999998644,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","extractRepoNameFromUrl"],"fullName":"ClaudeGWTApp extractRepoNameFromUrl should extract repo names from various URL formats","status":"passed","title":"should extract repo names from various URL formats","duration":4.930981999999858,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle listBranches action","status":"passed","title":"should handle listBranches action","duration":3.8253179999999247,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle createNewWorktree action","status":"passed","title":"should handle createNewWorktree action","duration":3.729186000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle createNewWorktree action with failure","status":"passed","title":"should handle createNewWorktree action with failure","duration":3.6692219999999907,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle removeWorktree action","status":"passed","title":"should handle removeWorktree action","duration":1.8897240000001148,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle removeWorktree action with user declining","status":"passed","title":"should handle removeWorktree action with user declining","duration":1.5692810000000463,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle removeWorktree action with failure","status":"passed","title":"should handle removeWorktree action with failure","duration":1.3745249999999487,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle supervisor mode action","status":"passed","title":"should handle supervisor mode action","duration":6.525381000000152,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle shutdown action","status":"passed","title":"should handle shutdown action","duration":4.987688999999818,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","listBranches with empty worktrees"],"fullName":"ClaudeGWTApp listBranches with empty worktrees should handle empty worktree list in listBranches","status":"passed","title":"should handle empty worktree list in listBranches","duration":2.5636759999999867,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","createWorktreeFromExistingBranch"],"fullName":"ClaudeGWTApp createWorktreeFromExistingBranch should handle existing branch worktree creation successfully","status":"passed","title":"should handle existing branch worktree creation successfully","duration":3.197777999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","createWorktreeFromExistingBranch"],"fullName":"ClaudeGWTApp createWorktreeFromExistingBranch should handle existing branch worktree creation when user cancels","status":"passed","title":"should handle existing branch worktree creation when user cancels","duration":4.549310999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","createWorktreeFromExistingBranch"],"fullName":"ClaudeGWTApp createWorktreeFromExistingBranch should handle existing branch worktree creation failure","status":"passed","title":"should handle existing branch worktree creation failure","duration":3.078149000000167,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","createWorktreeFromExistingBranch"],"fullName":"ClaudeGWTApp createWorktreeFromExistingBranch should handle getBranchesWithoutWorktrees failure","status":"passed","title":"should handle getBranchesWithoutWorktrees failure","duration":3.2436260000001766,"failureMessages":[],"meta":{}}],"startTime":1751925093660,"endTime":1751925093899.2437,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ClaudeGWTApp.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt utility functions","parseWorktreeOutput"],"fullName":"cgwt utility functions parseWorktreeOutput should parse worktree output correctly","status":"passed","title":"should parse worktree output correctly","duration":8.447925999999939,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","parseWorktreeOutput"],"fullName":"cgwt utility functions parseWorktreeOutput should handle worktrees without branches","status":"passed","title":"should handle worktrees without branches","duration":0.471683999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","parseWorktreeOutput"],"fullName":"cgwt utility functions parseWorktreeOutput should handle empty output","status":"passed","title":"should handle empty output","duration":0.26136300000007395,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","parseWorktreeOutput"],"fullName":"cgwt utility functions parseWorktreeOutput should handle output with trailing entries","status":"passed","title":"should handle output with trailing entries","duration":0.23489299999994273,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","isSessionActive"],"fullName":"cgwt utility functions isSessionActive should return true for current directory","status":"passed","title":"should return true for current directory","duration":0.2672669999999471,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","isSessionActive"],"fullName":"cgwt utility functions isSessionActive should return false for different directory","status":"passed","title":"should return false for different directory","duration":0.1328280000000177,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","isSessionActive"],"fullName":"cgwt utility functions isSessionActive should handle errors gracefully","status":"passed","title":"should handle errors gracefully","duration":0.19461499999999887,"failureMessages":[],"meta":{}}],"startTime":1751925094457,"endTime":1751925094468.1946,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-functions.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt multi-project support","listAllProjects"],"fullName":"cgwt multi-project support listAllProjects should list all projects with branch counts","status":"passed","title":"should list all projects with branch counts","duration":12.428660000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","listAllProjects"],"fullName":"cgwt multi-project support listAllProjects should show active marker for projects with active sessions","status":"passed","title":"should show active marker for projects with active sessions","duration":2.2992080000000215,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","listAllProjects"],"fullName":"cgwt multi-project support listAllProjects should handle no projects found","status":"passed","title":"should handle no projects found","duration":0.8192290000000639,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","listProjectBranches"],"fullName":"cgwt multi-project support listProjectBranches should list branches for a specific project","status":"passed","title":"should list branches for a specific project","duration":0.9223700000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","listProjectBranches"],"fullName":"cgwt multi-project support listProjectBranches should handle invalid project index","status":"passed","title":"should handle invalid project index","duration":0.45935100000008333,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","listActiveSessions"],"fullName":"cgwt multi-project support listActiveSessions should list only active sessions","status":"passed","title":"should list only active sessions","duration":0.7097190000000637,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","listActiveSessions"],"fullName":"cgwt multi-project support listActiveSessions should handle no active sessions","status":"passed","title":"should handle no active sessions","duration":0.4932770000000346,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","attachToSession"],"fullName":"cgwt multi-project support attachToSession should attach to session by x.y index","status":"passed","title":"should attach to session by x.y index","duration":4.0348690000000715,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","attachToSession"],"fullName":"cgwt multi-project support attachToSession should attach to supervisor with x format","status":"passed","title":"should attach to supervisor with x format","duration":1.9590499999999338,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","attachToSession"],"fullName":"cgwt multi-project support attachToSession should handle invalid project index","status":"passed","title":"should handle invalid project index","duration":0.5932299999999486,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt multi-project support","attachToSession"],"fullName":"cgwt multi-project support attachToSession should handle legacy session name format","status":"passed","title":"should handle legacy session name format","duration":0.9108439999999973,"failureMessages":[],"meta":{}}],"startTime":1751925093506,"endTime":1751925093531.911,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-multi-project.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt-program enhanced features","parseWorktreeOutput with supervisor support"],"fullName":"cgwt-program enhanced features parseWorktreeOutput with supervisor support should parse supervisor (bare) session correctly","status":"passed","title":"should parse supervisor (bare) session correctly","duration":16.387337000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","parseWorktreeOutput with supervisor support"],"fullName":"cgwt-program enhanced features parseWorktreeOutput with supervisor support should sort sessions with supervisor first","status":"passed","title":"should sort sessions with supervisor first","duration":2.1584760000000642,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","listSessions with enhanced display"],"fullName":"cgwt-program enhanced features listSessions with enhanced display should parse worktree output with supervisor correctly","status":"passed","title":"should parse worktree output with supervisor correctly","duration":1.2197320000000218,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","listSessions with enhanced display"],"fullName":"cgwt-program enhanced features listSessions with enhanced display should parse sessions with multiple branches correctly","status":"passed","title":"should parse sessions with multiple branches correctly","duration":0.6586240000000316,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","listSessions with enhanced display"],"fullName":"cgwt-program enhanced features listSessions with enhanced display should identify active session based on current directory","status":"passed","title":"should identify active session based on current directory","duration":3.005043999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","switchSession with supervisor support"],"fullName":"cgwt-program enhanced features switchSession with supervisor support should switch to supervisor when index is 0","status":"passed","title":"should switch to supervisor when index is 0","duration":3.4536849999999504,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","switchSession with supervisor support"],"fullName":"cgwt-program enhanced features switchSession with supervisor support should switch to first branch when index is 1","status":"passed","title":"should switch to first branch when index is 1","duration":1.1834360000000288,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","switchSession with supervisor support"],"fullName":"cgwt-program enhanced features switchSession with supervisor support should switch to supervisor by name","status":"passed","title":"should switch to supervisor by name","duration":1.7711829999999509,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","switchSession with supervisor support"],"fullName":"cgwt-program enhanced features switchSession with supervisor support should switch to supervisor by short name","status":"passed","title":"should switch to supervisor by short name","duration":0.7400629999999637,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","switchSession with supervisor support"],"fullName":"cgwt-program enhanced features switchSession with supervisor support should handle tmux session switching when in tmux","status":"passed","title":"should handle tmux session switching when in tmux","duration":0.9949589999999944,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","switchSession with supervisor support"],"fullName":"cgwt-program enhanced features switchSession with supervisor support should fall back to chdir when tmux session does not exist","status":"passed","title":"should fall back to chdir when tmux session does not exist","duration":0.4912130000000161,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","index numbering"],"fullName":"cgwt-program enhanced features index numbering should correctly sort supervisor first then branches alphabetically","status":"passed","title":"should correctly sort supervisor first then branches alphabetically","duration":0.8035619999999426,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","killAllSessions"],"fullName":"cgwt-program enhanced features killAllSessions should kill all cgwt sessions for the current repo","status":"passed","title":"should kill all cgwt sessions for the current repo","duration":2.818450999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","killAllSessions"],"fullName":"cgwt-program enhanced features killAllSessions should handle no tmux sessions gracefully","status":"passed","title":"should handle no tmux sessions gracefully","duration":0.9998130000000174,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program enhanced features","killAllSessions"],"fullName":"cgwt-program enhanced features killAllSessions should handle no cgwt sessions for repo","status":"passed","title":"should handle no cgwt sessions for repo","duration":3.8863420000000133,"failureMessages":[],"meta":{}}],"startTime":1751925093506,"endTime":1751925093547.8862,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-program-enhanced.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt-program guided experience helpers","guideEmptyDirectory via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideEmptyDirectory via runGuidedExperience should handle clone action","status":"passed","title":"should handle clone action","duration":177.45665299999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideEmptyDirectory via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideEmptyDirectory via runGuidedExperience should handle init action","status":"passed","title":"should handle init action","duration":8.202745999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideClaudeGWTParent via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideClaudeGWTParent via runGuidedExperience should handle new worktree action","status":"passed","title":"should handle new worktree action","duration":20.379737999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideClaudeGWTParent via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideClaudeGWTParent via runGuidedExperience should handle supervisor action","status":"passed","title":"should handle supervisor action","duration":6.622415000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideClaudeGWTParent via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideClaudeGWTParent via runGuidedExperience should handle switch action","status":"passed","title":"should handle switch action","duration":1.6125540000000456,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideClaudeGWTParent via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideClaudeGWTParent via runGuidedExperience should handle list action","status":"passed","title":"should handle list action","duration":1.4099509999999782,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideGitWorktree via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideGitWorktree via runGuidedExperience should handle git-worktree state","status":"passed","title":"should handle git-worktree state","duration":28.43289699999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideGitWorktree via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideGitWorktree via runGuidedExperience should handle launch action in git-worktree","status":"passed","title":"should handle launch action in git-worktree","duration":6.0057729999999765,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideGitRepository via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideGitRepository via runGuidedExperience should handle git-repo state","status":"passed","title":"should handle git-repo state","duration":6.076078999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideGitRepository via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideGitRepository via runGuidedExperience should handle convert action in git-repo","status":"passed","title":"should handle convert action in git-repo","duration":1.330650999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideNonGitDirectory via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideNonGitDirectory via runGuidedExperience should handle non-git state","status":"passed","title":"should handle non-git state","duration":4.6850239999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","guideNonGitDirectory via runGuidedExperience"],"fullName":"cgwt-program guided experience helpers guideNonGitDirectory via runGuidedExperience should handle init action in non-git directory","status":"passed","title":"should handle init action in non-git directory","duration":5.543778999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program guided experience helpers","branch name validation"],"fullName":"cgwt-program guided experience helpers branch name validation should validate empty branch names","status":"passed","title":"should validate empty branch names","duration":1.5257860000000392,"failureMessages":[],"meta":{}}],"startTime":1751925093331,"endTime":1751925093601.526,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-program-guided-experience.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt-program new functions","getSessionsQuietly"],"fullName":"cgwt-program new functions getSessionsQuietly should return sessions on successful git worktree list","status":"passed","title":"should return sessions on successful git worktree list","duration":10.216062999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","getSessionsQuietly"],"fullName":"cgwt-program new functions getSessionsQuietly should return empty array on git command failure","status":"passed","title":"should return empty array on git command failure","duration":2.5040409999999156,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","getSessionsQuietly"],"fullName":"cgwt-program new functions getSessionsQuietly should return empty array on exception","status":"passed","title":"should return empty array on exception","duration":2.36816500000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","isSessionActive"],"fullName":"cgwt-program new functions isSessionActive should return true when current directory matches session path","status":"passed","title":"should return true when current directory matches session path","duration":5.149276999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","isSessionActive"],"fullName":"cgwt-program new functions isSessionActive should return false when directories do not match","status":"passed","title":"should return false when directories do not match","duration":1.5309520000000703,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","isSessionActive"],"fullName":"cgwt-program new functions isSessionActive should handle exceptions gracefully","status":"passed","title":"should handle exceptions gracefully","duration":4.5267089999999826,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listTmuxSessions"],"fullName":"cgwt-program new functions listTmuxSessions should list cgwt tmux sessions","status":"passed","title":"should list cgwt tmux sessions","duration":4.59514200000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listTmuxSessions"],"fullName":"cgwt-program new functions listTmuxSessions should handle tmux command failure silently","status":"passed","title":"should handle tmux command failure silently","duration":1.9411069999999881,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listTmuxSessions"],"fullName":"cgwt-program new functions listTmuxSessions should handle empty tmux sessions","status":"passed","title":"should handle empty tmux sessions","duration":1.2880689999999504,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listAllProjects"],"fullName":"cgwt-program new functions listAllProjects should show no projects message when no sessions exist","status":"passed","title":"should show no projects message when no sessions exist","duration":1.8489090000000488,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listAllProjects"],"fullName":"cgwt-program new functions listAllProjects should list projects with session counts","status":"passed","title":"should list projects with session counts","duration":2.0268689999999197,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listProjectBranches"],"fullName":"cgwt-program new functions listProjectBranches should show invalid index error for non-numeric input","status":"passed","title":"should show invalid index error for non-numeric input","duration":1.5003570000000082,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listProjectBranches"],"fullName":"cgwt-program new functions listProjectBranches should show invalid index error for out of range index","status":"passed","title":"should show invalid index error for out of range index","duration":1.224890000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listProjectBranches"],"fullName":"cgwt-program new functions listProjectBranches should list branches for valid project index","status":"passed","title":"should list branches for valid project index","duration":1.37179900000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listActiveSessions"],"fullName":"cgwt-program new functions listActiveSessions should show no active sessions message","status":"passed","title":"should show no active sessions message","duration":1.0700100000000248,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","listActiveSessions"],"fullName":"cgwt-program new functions listActiveSessions should list active sessions","status":"passed","title":"should list active sessions","duration":0.9642280000000483,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","attachToSession"],"fullName":"cgwt-program new functions attachToSession should handle invalid project index","status":"passed","title":"should handle invalid project index","duration":0.726756000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","attachToSession"],"fullName":"cgwt-program new functions attachToSession should handle invalid branch index","status":"passed","title":"should handle invalid branch index","duration":0.620200000000068,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","attachToSession"],"fullName":"cgwt-program new functions attachToSession should switch client when in tmux","status":"passed","title":"should switch client when in tmux","duration":0.7487720000000309,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","attachToSession"],"fullName":"cgwt-program new functions attachToSession should handle tmux switch failure","status":"passed","title":"should handle tmux switch failure","duration":0.5877779999999575,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","attachToSession"],"fullName":"cgwt-program new functions attachToSession should spawn attach process when not in tmux","status":"passed","title":"should spawn attach process when not in tmux","duration":1.2075059999999667,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","createNewWorktree"],"fullName":"cgwt-program new functions createNewWorktree should exit with error when not in worktree repository","status":"passed","title":"should exit with error when not in worktree repository","duration":12.417557999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","createNewWorktree"],"fullName":"cgwt-program new functions createNewWorktree should create worktree in claude-gwt-parent","status":"passed","title":"should create worktree in claude-gwt-parent","duration":7.54071399999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","createNewWorktree"],"fullName":"cgwt-program new functions createNewWorktree should handle worktree creation failure","status":"passed","title":"should handle worktree creation failure","duration":6.399464999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","launchClaude"],"fullName":"cgwt-program new functions launchClaude should exit with error when not in git repository","status":"passed","title":"should exit with error when not in git repository","duration":4.452575000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","launchClaude"],"fullName":"cgwt-program new functions launchClaude should launch as supervisor when requested","status":"passed","title":"should launch as supervisor when requested","duration":5.869728000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","launchClaude"],"fullName":"cgwt-program new functions launchClaude should launch in current branch for git-worktree","status":"passed","title":"should launch in current branch for git-worktree","duration":30.609834999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","launchClaude"],"fullName":"cgwt-program new functions launchClaude should handle launch failure","status":"passed","title":"should handle launch failure","duration":9.180425000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","setupWorktreeStructure"],"fullName":"cgwt-program new functions setupWorktreeStructure should exit with error when not in regular git repository","status":"passed","title":"should exit with error when not in regular git repository","duration":16.771828000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","setupWorktreeStructure"],"fullName":"cgwt-program new functions setupWorktreeStructure should convert repository successfully","status":"passed","title":"should convert repository successfully","duration":1.9484169999999494,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","setupWorktreeStructure"],"fullName":"cgwt-program new functions setupWorktreeStructure should handle conversion failure","status":"passed","title":"should handle conversion failure","duration":16.09310000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","runGuidedExperience"],"fullName":"cgwt-program new functions runGuidedExperience should handle empty directory state","status":"passed","title":"should handle empty directory state","duration":13.551184000000035,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","runGuidedExperience"],"fullName":"cgwt-program new functions runGuidedExperience should handle claude-gwt-parent state","status":"passed","title":"should handle claude-gwt-parent state","duration":6.470149000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","runGuidedExperience"],"fullName":"cgwt-program new functions runGuidedExperience should suppress banner with quiet option","status":"passed","title":"should suppress banner with quiet option","duration":6.0654839999999695,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program new functions","runGuidedExperience"],"fullName":"cgwt-program new functions runGuidedExperience should handle guided experience failure","status":"passed","title":"should handle guided experience failure","duration":12.410500999999954,"failureMessages":[],"meta":{}}],"startTime":1751925093512,"endTime":1751925093713.4104,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-program-new-functions.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt-program","createProgram"],"fullName":"cgwt-program createProgram should create a command program with correct configuration","status":"passed","title":"should create a command program with correct configuration","duration":3.047223000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","createProgram"],"fullName":"cgwt-program createProgram should have list command","status":"passed","title":"should have list command","duration":0.6389450000000352,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","createProgram"],"fullName":"cgwt-program createProgram should have switch command","status":"passed","title":"should have switch command","duration":0.4216109999999844,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput"],"fullName":"cgwt-program parseWorktreeOutput should parse worktree output correctly","status":"passed","title":"should parse worktree output correctly","duration":15.355630999999903,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput"],"fullName":"cgwt-program parseWorktreeOutput should handle empty output","status":"passed","title":"should handle empty output","duration":1.155450999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput"],"fullName":"cgwt-program parseWorktreeOutput should keep sessions without branches","status":"passed","title":"should keep sessions without branches","duration":0.832322999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","isSessionActive"],"fullName":"cgwt-program isSessionActive should return true for current directory","status":"passed","title":"should return true for current directory","duration":0.8281479999999419,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","isSessionActive"],"fullName":"cgwt-program isSessionActive should return false for different directory","status":"passed","title":"should return false for different directory","duration":0.29842199999995955,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","isSessionActive"],"fullName":"cgwt-program isSessionActive should handle errors gracefully","status":"passed","title":"should handle errors gracefully","duration":0.5105840000001081,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listSessions"],"fullName":"cgwt-program listSessions should handle empty worktree list","status":"passed","title":"should handle empty worktree list","duration":4.545484999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listSessions"],"fullName":"cgwt-program listSessions should handle git errors","status":"passed","title":"should handle git errors","duration":2.2736110000000735,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should switch to session by index","status":"passed","title":"should switch to session by index","duration":1.9763020000000324,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should switch to session by branch name","status":"passed","title":"should switch to session by branch name","duration":1.4053789999999253,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should handle index out of range","status":"passed","title":"should handle index out of range","duration":1.3727539999999863,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should handle branch not found","status":"passed","title":"should handle branch not found","duration":1.064029000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should handle no sessions","status":"passed","title":"should handle no sessions","duration":0.8805719999999155,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should switch to first branch by index 1","status":"passed","title":"should switch to first branch by index 1","duration":0.6095299999999497,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","getSessionsQuietly"],"fullName":"cgwt-program getSessionsQuietly should return sessions without logging","status":"passed","title":"should return sessions without logging","duration":0.790393999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","getSessionsQuietly"],"fullName":"cgwt-program getSessionsQuietly should return empty array on error","status":"passed","title":"should return empty array on error","duration":0.5225450000000365,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listTmuxSessions"],"fullName":"cgwt-program listTmuxSessions should handle no tmux sessions","status":"passed","title":"should handle no tmux sessions","duration":0.8139009999999871,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listTmuxSessions"],"fullName":"cgwt-program listTmuxSessions should handle empty tmux output","status":"passed","title":"should handle empty tmux output","duration":0.4871729999999843,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listTmuxSessions"],"fullName":"cgwt-program listTmuxSessions should filter only cgwt sessions","status":"passed","title":"should filter only cgwt sessions","duration":0.4064489999999523,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle not a git repository error","status":"passed","title":"should handle not a git repository error","duration":0.649014999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle worktree error","status":"passed","title":"should handle worktree error","duration":0.5350349999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle generic git error","status":"passed","title":"should handle generic git error","duration":0.6340390000000298,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle non-Error objects","status":"passed","title":"should handle non-Error objects","duration":0.5691459999999324,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle null error","status":"passed","title":"should handle null error","duration":0.5802619999999479,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command integration"],"fullName":"cgwt-program command integration should handle invalid command gracefully","status":"passed","title":"should handle invalid command gracefully","duration":2.4324119999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should execute listSessions when l command is called","status":"passed","title":"should execute listSessions when l command is called","duration":1.5734260000000404,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should execute switchSession when s command is called","status":"passed","title":"should execute switchSession when s command is called","duration":1.1579179999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should show help when no arguments provided","status":"passed","title":"should show help when no arguments provided","duration":0.8542340000000195,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should handle numeric index in default action","status":"passed","title":"should handle numeric index in default action","duration":0.9848100000000386,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should handle invalid argument in default action","status":"passed","title":"should handle invalid argument in default action","duration":1.3433250000000498,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput edge cases"],"fullName":"cgwt-program parseWorktreeOutput edge cases should handle multiple worktrees with partial data","status":"passed","title":"should handle multiple worktrees with partial data","duration":0.7543509999999287,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput edge cases"],"fullName":"cgwt-program parseWorktreeOutput edge cases should handle parsing with existing current session","status":"passed","title":"should handle parsing with existing current session","duration":2.3037689999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession additional coverage"],"fullName":"cgwt-program switchSession additional coverage should handle index at range boundary (index 1)","status":"passed","title":"should handle index at range boundary (index 1)","duration":1.8995519999999715,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession additional coverage"],"fullName":"cgwt-program switchSession additional coverage should handle branch search by exact branch match","status":"passed","title":"should handle branch search by exact branch match","duration":1.5323630000000321,"failureMessages":[],"meta":{}}],"startTime":1751925093517,"endTime":1751925093577.5325,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-program.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt CLI script"],"fullName":"cgwt CLI script should be a valid CLI script","status":"passed","title":"should be a valid CLI script","duration":5.389865000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt CLI script"],"fullName":"cgwt CLI script should be a minimal entry point","status":"passed","title":"should be a minimal entry point","duration":0.8097099999999955,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt CLI script"],"fullName":"cgwt CLI script should have corresponding program module","status":"passed","title":"should have corresponding program module","duration":0.9719579999999723,"failureMessages":[],"meta":{}}],"startTime":1751925094452,"endTime":1751925094458.972,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-simple.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt split and tips commands","split command"],"fullName":"cgwt split and tips commands split command should have split command with correct options","status":"passed","title":"should have split command with correct options","duration":6.124120000000062,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt split and tips commands","split command"],"fullName":"cgwt split and tips commands split command should be properly configured as a command","status":"passed","title":"should be properly configured as a command","duration":1.5631369999999833,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt split and tips commands","tips command"],"fullName":"cgwt split and tips commands tips command should have tips command","status":"passed","title":"should have tips command","duration":1.076206999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt split and tips commands","tips command"],"fullName":"cgwt split and tips commands tips command should have no required arguments or options","status":"passed","title":"should have no required arguments or options","duration":0.7039020000000846,"failureMessages":[],"meta":{}}],"startTime":1751925094433,"endTime":1751925094442.7039,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-split-tips.test.ts"},{"assertionResults":[{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should extract repo name from GitHub HTTPS URLs","status":"passed","title":"should extract repo name from GitHub HTTPS URLs","duration":1.6633770000000823,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should extract repo name from GitHub SSH URLs","status":"passed","title":"should extract repo name from GitHub SSH URLs","duration":0.21917599999994763,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should extract repo name from GitLab URLs","status":"passed","title":"should extract repo name from GitLab URLs","duration":0.15002499999991414,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should extract repo name from custom Git servers","status":"passed","title":"should extract repo name from custom Git servers","duration":0.19720700000004854,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.21474100000000362,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should clean special characters","status":"passed","title":"should clean special characters","duration":0.11059000000000196,"failureMessages":[],"meta":{}}],"startTime":1751925094506,"endTime":1751925094509.2148,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/extractRepoName.test.ts"},{"assertionResults":[{"ancestorTitles":["CLI Version"],"fullName":"CLI Version should match package.json version","status":"passed","title":"should match package.json version","duration":173.89502100000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Version"],"fullName":"CLI Version should display version with --version flag","status":"passed","title":"should display version with --version flag","duration":134.12916799999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Version"],"fullName":"CLI Version should display version with -V flag","status":"passed","title":"should display version with -V flag","duration":110.27847800000006,"failureMessages":[],"meta":{}}],"startTime":1751925094431,"endTime":1751925094850.2786,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/version.test.ts"},{"assertionResults":[{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should create config directory if it does not exist","status":"passed","title":"should create config directory if it does not exist","duration":5.9831890000000385,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should use XDG_CONFIG_HOME when available","status":"passed","title":"should use XDG_CONFIG_HOME when available","duration":1.5627509999999347,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should use home directory when XDG_CONFIG_HOME is not set","status":"passed","title":"should use home directory when XDG_CONFIG_HOME is not set","duration":0.8471610000000283,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should create default config if file does not exist","status":"passed","title":"should create default config if file does not exist","duration":0.8391259999999647,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should load existing config file","status":"passed","title":"should load existing config file","duration":0.4590480000000525,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should handle invalid JSON in config file","status":"passed","title":"should handle invalid JSON in config file","duration":0.38358900000002905,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should return global context","status":"passed","title":"should return global context","duration":0.4920640000000276,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should return role-specific context","status":"passed","title":"should return role-specific context","duration":0.30483699999990677,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should return project-specific context","status":"passed","title":"should return project-specific context","duration":0.38037100000008195,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should return branch-specific context","status":"passed","title":"should return branch-specific context","duration":0.33406800000000203,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should merge contexts from multiple sources","status":"passed","title":"should merge contexts from multiple sources","duration":0.30761200000006284,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should load project context from file if exists","status":"passed","title":"should load project context from file if exists","duration":0.26462500000002365,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should load branch context from file for child role","status":"passed","title":"should load branch context from file for child role","duration":0.36784000000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getTemplate"],"fullName":"ConfigManager getTemplate should return template by name","status":"passed","title":"should return template by name","duration":0.3598050000000512,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getTemplate"],"fullName":"ConfigManager getTemplate should return null for non-existent template","status":"passed","title":"should return null for non-existent template","duration":5.228682999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","listTemplates"],"fullName":"ConfigManager listTemplates should return all templates","status":"passed","title":"should return all templates","duration":2.20770600000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","listTemplates"],"fullName":"ConfigManager listTemplates should return empty array when no templates exist","status":"passed","title":"should return empty array when no templates exist","duration":0.7730159999999842,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","get/set"],"fullName":"ConfigManager get/set should get configuration values","status":"passed","title":"should get configuration values","duration":0.3067800000000034,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","get/set"],"fullName":"ConfigManager get/set should set configuration values","status":"passed","title":"should set configuration values","duration":0.5358210000000554,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getConfigDir/getContextDir"],"fullName":"ConfigManager getConfigDir/getContextDir should return config directory path","status":"passed","title":"should return config directory path","duration":0.2802199999999857,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getConfigDir/getContextDir"],"fullName":"ConfigManager getConfigDir/getContextDir should return context directory path","status":"passed","title":"should return context directory path","duration":0.2278640000000678,"failureMessages":[],"meta":{}}],"startTime":1751925093416,"endTime":1751925093439.2803,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/ConfigManager.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxCommandParser","parse set commands"],"fullName":"TmuxCommandParser parse set commands should parse basic set command","status":"passed","title":"should parse basic set command","duration":2.4596410000000333,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse set commands"],"fullName":"TmuxCommandParser parse set commands should parse global set command","status":"passed","title":"should parse global set command","duration":0.22560500000003003,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse set commands"],"fullName":"TmuxCommandParser parse set commands should parse set command with multi-word value","status":"passed","title":"should parse set command with multi-word value","duration":0.2075179999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse set commands"],"fullName":"TmuxCommandParser parse set commands should parse set command with complex value","status":"passed","title":"should parse set command with complex value","duration":0.16365400000000818,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse setw commands"],"fullName":"TmuxCommandParser parse setw commands should parse basic setw command","status":"passed","title":"should parse basic setw command","duration":0.16721899999998868,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse setw commands"],"fullName":"TmuxCommandParser parse setw commands should parse setw with complex value","status":"passed","title":"should parse setw with complex value","duration":0.194862999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse basic bind-key","status":"passed","title":"should parse basic bind-key","duration":0.19314900000000534,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with table","status":"passed","title":"should parse bind-key with table","duration":0.10315300000002026,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with -n flag","status":"passed","title":"should parse bind-key with -n flag","duration":0.1730349999999703,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with -r flag","status":"passed","title":"should parse bind-key with -r flag","duration":0.13327299999997422,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with multiple flags","status":"passed","title":"should parse bind-key with multiple flags","duration":0.11663600000002816,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with complex command","status":"passed","title":"should parse bind-key with complex command","duration":0.10547100000002274,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse unbind-key commands"],"fullName":"TmuxCommandParser parse unbind-key commands should parse basic unbind-key","status":"passed","title":"should parse basic unbind-key","duration":0.24889400000000705,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse unbind-key commands"],"fullName":"TmuxCommandParser parse unbind-key commands should parse unbind-key with table","status":"passed","title":"should parse unbind-key with table","duration":0.1470040000000381,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse unbind-key commands"],"fullName":"TmuxCommandParser parse unbind-key commands should parse unbind-key with -n flag","status":"passed","title":"should parse unbind-key with -n flag","duration":0.10467699999998104,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle empty string","status":"passed","title":"should handle empty string","duration":0.24839200000002393,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle whitespace only","status":"passed","title":"should handle whitespace only","duration":0.10778299999998353,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle unknown command","status":"passed","title":"should handle unknown command","duration":0.09002800000001798,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle malformed set command","status":"passed","title":"should handle malformed set command","duration":0.08195000000000618,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle malformed bind-key","status":"passed","title":"should handle malformed bind-key","duration":0.07885899999996582,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","real-world examples"],"fullName":"TmuxCommandParser real-world examples should parse vi-mode copy binding","status":"passed","title":"should parse vi-mode copy binding","duration":0.10379899999998088,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","real-world examples"],"fullName":"TmuxCommandParser real-world examples should parse mouse wheel binding","status":"passed","title":"should parse mouse wheel binding","duration":0.08657099999999218,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","real-world examples"],"fullName":"TmuxCommandParser real-world examples should parse status bar with variables","status":"passed","title":"should parse status bar with variables","duration":0.09453200000001516,"failureMessages":[],"meta":{}}],"startTime":1751925093902,"endTime":1751925093908.1038,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxCommandParser.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxDriver","isAvailable"],"fullName":"TmuxDriver isAvailable should return true when tmux is available","status":"passed","title":"should return true when tmux is available","duration":3.022555000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isAvailable"],"fullName":"TmuxDriver isAvailable should return false when tmux is not available","status":"passed","title":"should return false when tmux is not available","duration":0.4439869999999928,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isInsideTmux"],"fullName":"TmuxDriver isInsideTmux should return true when TMUX env var is set","status":"passed","title":"should return true when TMUX env var is set","duration":0.5636890000000676,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isInsideTmux"],"fullName":"TmuxDriver isInsideTmux should return false when TMUX env var is not set","status":"passed","title":"should return false when TMUX env var is not set","duration":0.29909999999995307,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","listSessions"],"fullName":"TmuxDriver listSessions should parse session list correctly","status":"passed","title":"should parse session list correctly","duration":1.2301189999999451,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","listSessions"],"fullName":"TmuxDriver listSessions should return empty array on error","status":"passed","title":"should return empty array on error","duration":0.28003000000001066,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","getSession"],"fullName":"TmuxDriver getSession should return session info when found","status":"passed","title":"should return session info when found","duration":0.5215670000000046,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","getSession"],"fullName":"TmuxDriver getSession should return null when not found","status":"passed","title":"should return null when not found","duration":0.32289799999989555,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","createSession"],"fullName":"TmuxDriver createSession should create detached session with all options","status":"passed","title":"should create detached session with all options","duration":0.620834000000059,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","createSession"],"fullName":"TmuxDriver createSession should create attached session when detached is false","status":"passed","title":"should create attached session when detached is false","duration":0.5139769999999544,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","killSession"],"fullName":"TmuxDriver killSession should kill session with sanitized name","status":"passed","title":"should kill session with sanitized name","duration":0.3954919999999902,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","createWindow"],"fullName":"TmuxDriver createWindow should create window with all options","status":"passed","title":"should create window with all options","duration":0.4332610000000159,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","listWindows"],"fullName":"TmuxDriver listWindows should parse window list correctly","status":"passed","title":"should parse window list correctly","duration":0.6634970000000067,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","listPanes"],"fullName":"TmuxDriver listPanes should parse pane list correctly","status":"passed","title":"should parse pane list correctly","duration":0.5021860000000515,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","sendKeys"],"fullName":"TmuxDriver sendKeys should send keys with Enter","status":"passed","title":"should send keys with Enter","duration":0.3780189999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","sendKeys"],"fullName":"TmuxDriver sendKeys should send keys without Enter when specified","status":"passed","title":"should send keys without Enter when specified","duration":0.2426510000000235,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","setOption"],"fullName":"TmuxDriver setOption should set global option","status":"passed","title":"should set global option","duration":0.24207400000000234,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","setOption"],"fullName":"TmuxDriver setOption should set session option","status":"passed","title":"should set session option","duration":0.19639300000005733,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isPaneRunningCommand"],"fullName":"TmuxDriver isPaneRunningCommand should return true when command is found","status":"passed","title":"should return true when command is found","duration":0.2711590000000115,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isPaneRunningCommand"],"fullName":"TmuxDriver isPaneRunningCommand should return false when command is not found","status":"passed","title":"should return false when command is not found","duration":0.15521799999999075,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","bindKey"],"fullName":"TmuxDriver bindKey should bind key with all options","status":"passed","title":"should bind key with all options","duration":0.341617000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane horizontally with percentage","status":"passed","title":"should split pane horizontally with percentage","duration":0.3024599999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane vertically without horizontal flag","status":"passed","title":"should split pane vertically without horizontal flag","duration":0.18425700000000234,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane without percentage","status":"passed","title":"should split pane without percentage","duration":0.15827200000001085,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane without working directory","status":"passed","title":"should split pane without working directory","duration":0.16869000000008327,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane without command","status":"passed","title":"should split pane without command","duration":0.16371600000002218,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listSessions error","status":"passed","title":"should handle listSessions error","duration":2.7688379999999597,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listSessions non-zero exit code","status":"passed","title":"should handle listSessions non-zero exit code","duration":0.28875000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listWindows error","status":"passed","title":"should handle listWindows error","duration":0.22539199999994253,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listWindows non-zero exit code","status":"passed","title":"should handle listWindows non-zero exit code","duration":0.15136299999994662,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listPanes error","status":"passed","title":"should handle listPanes error","duration":0.1606939999999213,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listPanes non-zero exit code","status":"passed","title":"should handle listPanes non-zero exit code","duration":0.11599499999999807,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","setPaneBorderStatus"],"fullName":"TmuxDriver utility methods setPaneBorderStatus should set pane border status to top","status":"passed","title":"should set pane border status to top","duration":0.2289580000000342,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","setPaneBorderStatus"],"fullName":"TmuxDriver utility methods setPaneBorderStatus should set pane border status to bottom","status":"passed","title":"should set pane border status to bottom","duration":0.17052799999999024,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","setPaneBorderStatus"],"fullName":"TmuxDriver utility methods setPaneBorderStatus should set pane border status to off","status":"passed","title":"should set pane border status to off","duration":0.2924830000000611,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","refreshClient"],"fullName":"TmuxDriver utility methods refreshClient should refresh client without target","status":"passed","title":"should refresh client without target","duration":0.2818449999999757,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","refreshClient"],"fullName":"TmuxDriver utility methods refreshClient should refresh client with target","status":"passed","title":"should refresh client with target","duration":0.18867099999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle attachSession","status":"passed","title":"should handle attachSession","duration":0.20573100000001432,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle switchClient","status":"passed","title":"should handle switchClient","duration":0.18784600000003593,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle unbindKey","status":"passed","title":"should handle unbindKey","duration":0.17521800000008625,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle unbindKey with table","status":"passed","title":"should handle unbindKey with table","duration":0.15218700000002627,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle setWindowOption","status":"passed","title":"should handle setWindowOption","duration":0.2952890000000252,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle getOption","status":"passed","title":"should handle getOption","duration":0.24728800000002593,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle getOption error","status":"passed","title":"should handle getOption error","duration":0.14853900000002795,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle killPane","status":"passed","title":"should handle killPane","duration":0.23081999999999425,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle killPane with killAll flag","status":"passed","title":"should handle killPane with killAll flag","duration":0.15592100000003484,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle setPaneTitle","status":"passed","title":"should handle setPaneTitle","duration":0.20965799999999035,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle setHook","status":"passed","title":"should handle setHook","duration":0.19567300000005616,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle displayMessage without target","status":"passed","title":"should handle displayMessage without target","duration":0.18826100000001134,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle displayMessage with target","status":"passed","title":"should handle displayMessage with target","duration":0.20137899999997444,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle synchronizePanes enabled","status":"passed","title":"should handle synchronizePanes enabled","duration":0.22057600000005095,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle synchronizePanes disabled","status":"passed","title":"should handle synchronizePanes disabled","duration":0.22029199999997218,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle setPaneBorderStatus","status":"passed","title":"should handle setPaneBorderStatus","duration":0.19906700000001365,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle refreshClient without target","status":"passed","title":"should handle refreshClient without target","duration":0.19273199999997814,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle refreshClient with target","status":"passed","title":"should handle refreshClient with target","duration":0.19264899999996032,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure status bar","status":"passed","title":"should configure status bar","duration":3.311969999999974,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure status bar with partial config","status":"passed","title":"should configure status bar with partial config","duration":0.5856079999999793,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure key bindings","status":"passed","title":"should configure key bindings","duration":0.48380599999995866,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure pane borders","status":"passed","title":"should configure pane borders","duration":0.8592119999999568,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should enable vi copy mode","status":"passed","title":"should enable vi copy mode","duration":0.49229400000001533,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure monitoring","status":"passed","title":"should configure monitoring","duration":0.35491400000000795,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should apply layout","status":"passed","title":"should apply layout","duration":0.24930499999993572,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should create multi-pane window","status":"passed","title":"should create multi-pane window","duration":0.6080009999999447,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should create layout builder","status":"passed","title":"should create layout builder","duration":0.40508600000009665,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should create colors from numbers","status":"passed","title":"should create colors from numbers","duration":0.22339800000008836,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should throw error for invalid color numbers","status":"passed","title":"should throw error for invalid color numbers","duration":2.1681919999999764,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should work with decimal numbers by truncating","status":"passed","title":"should work with decimal numbers by truncating","duration":0.19330300000001444,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should have standard color constants","status":"passed","title":"should have standard color constants","duration":0.27783799999997427,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should create colors from strings","status":"passed","title":"should create colors from strings","duration":0.18458099999998012,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxLayoutBuilder"],"fullName":"TmuxDriver utility methods TmuxLayoutBuilder should build layout with multiple panes","status":"passed","title":"should build layout with multiple panes","duration":0.7453100000000177,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxLayoutBuilder"],"fullName":"TmuxDriver utility methods TmuxLayoutBuilder should handle empty builder","status":"passed","title":"should handle empty builder","duration":0.25517899999999827,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxLayoutBuilder"],"fullName":"TmuxDriver utility methods TmuxLayoutBuilder should handle single pane","status":"passed","title":"should handle single pane","duration":0.2796979999999394,"failureMessages":[],"meta":{}}],"startTime":1751925093449,"endTime":1751925093484.2798,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxDriver.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxEnhancer","configureSession"],"fullName":"TmuxEnhancer configureSession should return success when all operations succeed","status":"passed","title":"should return success when all operations succeed","duration":21.862520000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSession"],"fullName":"TmuxEnhancer configureSession should return partial success when some operations fail","status":"passed","title":"should return partial success when some operations fail","duration":18.75858500000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSession"],"fullName":"TmuxEnhancer configureSession should handle complete failure gracefully","status":"passed","title":"should handle complete failure gracefully","duration":0.6645020000000841,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureCopyMode"],"fullName":"TmuxEnhancer configureCopyMode should configure all copy mode settings","status":"passed","title":"should configure all copy mode settings","duration":1.6876989999999523,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureCopyMode"],"fullName":"TmuxEnhancer configureCopyMode should handle partial failures","status":"passed","title":"should handle partial failures","duration":0.7292229999999336,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureCopyMode"],"fullName":"TmuxEnhancer configureCopyMode should handle non-Error objects","status":"passed","title":"should handle non-Error objects","duration":0.3545370000000503,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureStatusBar"],"fullName":"TmuxEnhancer configureStatusBar should configure status bar for child role","status":"passed","title":"should configure status bar for child role","duration":5.001174999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureStatusBar"],"fullName":"TmuxEnhancer configureStatusBar should configure status bar for supervisor role","status":"passed","title":"should configure status bar for supervisor role","duration":1.001671999999985,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureStatusBar"],"fullName":"TmuxEnhancer configureStatusBar should handle session names with different formats","status":"passed","title":"should handle session names with different formats","duration":0.9194149999999581,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureStatusBar"],"fullName":"TmuxEnhancer configureStatusBar should include monitoring result","status":"passed","title":"should include monitoring result","duration":0.5833620000000792,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","setupAdvancedStatusMonitoring"],"fullName":"TmuxEnhancer setupAdvancedStatusMonitoring should set up basic hooks for child role","status":"passed","title":"should set up basic hooks for child role","duration":0.5366460000000188,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","setupAdvancedStatusMonitoring"],"fullName":"TmuxEnhancer setupAdvancedStatusMonitoring should set up additional hooks for supervisor role","status":"passed","title":"should set up additional hooks for supervisor role","duration":0.5084090000000288,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","setupAdvancedStatusMonitoring"],"fullName":"TmuxEnhancer setupAdvancedStatusMonitoring should handle hook failures","status":"passed","title":"should handle hook failures","duration":0.5692819999999301,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureKeyBindings"],"fullName":"TmuxEnhancer configureKeyBindings should configure all key bindings","status":"passed","title":"should configure all key bindings","duration":24.582400000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureKeyBindings"],"fullName":"TmuxEnhancer configureKeyBindings should handle binding failures","status":"passed","title":"should handle binding failures","duration":0.6879750000000513,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSessionGroups"],"fullName":"TmuxEnhancer configureSessionGroups should configure session group for properly named session","status":"passed","title":"should configure session group for properly named session","duration":0.7643070000000307,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSessionGroups"],"fullName":"TmuxEnhancer configureSessionGroups should skip grouping for simple session names","status":"passed","title":"should skip grouping for simple session names","duration":0.48500400000000354,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSessionGroups"],"fullName":"TmuxEnhancer configureSessionGroups should handle grouping failures gracefully","status":"passed","title":"should handle grouping failures gracefully","duration":0.34413899999992736,"failureMessages":[],"meta":{}}],"startTime":1751925093451,"endTime":1751925093532.485,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxEnhancer.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxHookParser","parse valid hooks"],"fullName":"TmuxHookParser parse valid hooks should parse hook with target","status":"passed","title":"should parse hook with target","duration":11.976317999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse valid hooks"],"fullName":"TmuxHookParser parse valid hooks should parse hook without target","status":"passed","title":"should parse hook without target","duration":0.686222999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse valid hooks"],"fullName":"TmuxHookParser parse valid hooks should parse hook with complex command","status":"passed","title":"should parse hook with complex command","duration":0.43699400000002697,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse valid hooks"],"fullName":"TmuxHookParser parse valid hooks should parse hook with special characters in command","status":"passed","title":"should parse hook with special characters in command","duration":0.2591340000000173,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle empty string","status":"passed","title":"should handle empty string","duration":1.8702519999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle whitespace only","status":"passed","title":"should handle whitespace only","duration":0.45797499999997626,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle malformed hook without quotes","status":"passed","title":"should handle malformed hook without quotes","duration":0.24309599999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle hook missing -g flag","status":"passed","title":"should handle hook missing -g flag","duration":0.18204500000001644,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle hook without command","status":"passed","title":"should handle hook without command","duration":0.23801400000002104,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle non-hook commands","status":"passed","title":"should handle non-hook commands","duration":0.21132299999999304,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","edge cases"],"fullName":"TmuxHookParser edge cases should handle hook with empty command","status":"passed","title":"should handle hook with empty command","duration":0.17431300000004057,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","edge cases"],"fullName":"TmuxHookParser edge cases should handle hook with spaces in target","status":"passed","title":"should handle hook with spaces in target","duration":0.14496900000000323,"failureMessages":[],"meta":{}}],"startTime":1751925094164,"endTime":1751925094181.2114,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxHookParser.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxManager","getSessionName"],"fullName":"TmuxManager getSessionName should generate valid tmux session names","status":"passed","title":"should generate valid tmux session names","duration":2.5675520000000915,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionName"],"fullName":"TmuxManager getSessionName should handle special characters correctly","status":"passed","title":"should handle special characters correctly","duration":0.7344749999999749,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","isTmuxAvailable"],"fullName":"TmuxManager isTmuxAvailable should return true when tmux is available","status":"passed","title":"should return true when tmux is available","duration":0.8061779999999317,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","isTmuxAvailable"],"fullName":"TmuxManager isTmuxAvailable should return false when tmux is not available","status":"passed","title":"should return false when tmux is not available","duration":0.37639999999998963,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","isInsideTmux"],"fullName":"TmuxManager isInsideTmux should return true when inside tmux","status":"passed","title":"should return true when inside tmux","duration":0.21191399999997884,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","isInsideTmux"],"fullName":"TmuxManager isInsideTmux should return false when not inside tmux","status":"passed","title":"should return false when not inside tmux","duration":0.17096800000001622,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionInfo"],"fullName":"TmuxManager getSessionInfo should return session info when session exists","status":"passed","title":"should return session info when session exists","duration":2.9279789999999366,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionInfo"],"fullName":"TmuxManager getSessionInfo should return null when session does not exist","status":"passed","title":"should return null when session does not exist","duration":0.6039150000000291,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionInfo"],"fullName":"TmuxManager getSessionInfo should handle sessions without Claude running","status":"passed","title":"should handle sessions without Claude running","duration":0.38572499999997945,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionInfo"],"fullName":"TmuxManager getSessionInfo should handle errors when checking for Claude","status":"passed","title":"should handle errors when checking for Claude","duration":0.46901600000001054,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should check tmux availability","status":"passed","title":"should check tmux availability","duration":1.2808699999999362,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should create context file","status":"passed","title":"should create context file","duration":2.4703870000000734,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should create new session when it does not exist","status":"passed","title":"should create new session when it does not exist","duration":0.7688960000000407,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should restart Claude in existing session without Claude","status":"passed","title":"should restart Claude in existing session without Claude","duration":0.955331000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should attach to existing session with Claude running","status":"passed","title":"should attach to existing session with Claude running","duration":1.075870000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should handle being inside tmux differently","status":"passed","title":"should handle being inside tmux differently","duration":0.5669920000000275,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","createDetachedSession"],"fullName":"TmuxManager createDetachedSession should create a detached session","status":"passed","title":"should create a detached session","duration":0.785933,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","attachToSession"],"fullName":"TmuxManager attachToSession should use switch-client when inside tmux","status":"passed","title":"should use switch-client when inside tmux","duration":0.37064299999997274,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","attachToSession"],"fullName":"TmuxManager attachToSession should use attach-session when outside tmux","status":"passed","title":"should use attach-session when outside tmux","duration":0.5352309999999534,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","killSession"],"fullName":"TmuxManager killSession should kill the specified session","status":"passed","title":"should kill the specified session","duration":0.3874759999999924,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","listSessions"],"fullName":"TmuxManager listSessions should return list of cgwt sessions","status":"passed","title":"should return list of cgwt sessions","duration":0.7829130000000077,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","listSessions"],"fullName":"TmuxManager listSessions should return empty array when no sessions exist","status":"passed","title":"should return empty array when no sessions exist","duration":0.37537399999996524,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","shutdownAll"],"fullName":"TmuxManager shutdownAll should kill all cgwt sessions","status":"passed","title":"should kill all cgwt sessions","duration":0.6698549999999841,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","createComparisonLayout"],"fullName":"TmuxManager createComparisonLayout should create comparison layout for two branches","status":"passed","title":"should create comparison layout for two branches","duration":0.46209799999996903,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","toggleSynchronizedPanes"],"fullName":"TmuxManager toggleSynchronizedPanes should toggle pane synchronization","status":"passed","title":"should toggle pane synchronization","duration":0.34867099999996753,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getPredefinedLayouts"],"fullName":"TmuxManager getPredefinedLayouts should return predefined layouts from TmuxEnhancer","status":"passed","title":"should return predefined layouts from TmuxEnhancer","duration":0.26578299999994215,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionGroup"],"fullName":"TmuxManager getSessionGroup should return session group name","status":"passed","title":"should return session group name","duration":1.0124349999999822,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionGroup"],"fullName":"TmuxManager getSessionGroup should return null when session has no group","status":"passed","title":"should return null when session has no group","duration":0.6953589999999394,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionsInGroup"],"fullName":"TmuxManager getSessionsInGroup should return sessions in the specified group","status":"passed","title":"should return sessions in the specified group","duration":0.7429610000000366,"failureMessages":[],"meta":{}}],"startTime":1751925093453,"endTime":1751925093482.743,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxManager.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should parse valid session output","status":"passed","title":"should parse valid session output","duration":9.972023000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should handle empty output","status":"passed","title":"should handle empty output","duration":0.49150800000001027,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should handle malformed lines","status":"passed","title":"should handle malformed lines","duration":0.9014520000000061,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should handle missing fields gracefully","status":"passed","title":"should handle missing fields gracefully","duration":0.4891349999999761,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should trim group names","status":"passed","title":"should trim group names","duration":0.21289200000001074,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseWindows"],"fullName":"TmuxParser parseWindows should parse valid window output","status":"passed","title":"should parse valid window output","duration":0.618220000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseWindows"],"fullName":"TmuxParser parseWindows should handle empty window output","status":"passed","title":"should handle empty window output","duration":0.17211900000000924,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseWindows"],"fullName":"TmuxParser parseWindows should handle malformed window data","status":"passed","title":"should handle malformed window data","duration":0.18108999999998332,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parsePanes"],"fullName":"TmuxParser parsePanes should parse valid pane output","status":"passed","title":"should parse valid pane output","duration":0.5746920000000273,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parsePanes"],"fullName":"TmuxParser parsePanes should handle panes without titles","status":"passed","title":"should handle panes without titles","duration":0.22986900000000787,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parsePanes"],"fullName":"TmuxParser parsePanes should trim pane titles","status":"passed","title":"should trim pane titles","duration":0.14717999999999165,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parsePanes"],"fullName":"TmuxParser parsePanes should handle empty pane output","status":"passed","title":"should handle empty pane output","duration":0.14282600000001366,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","isValidSessionName"],"fullName":"TmuxParser isValidSessionName should accept valid session names","status":"passed","title":"should accept valid session names","duration":0.5314630000000307,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","isValidSessionName"],"fullName":"TmuxParser isValidSessionName should reject invalid session names","status":"passed","title":"should reject invalid session names","duration":0.2965300000000184,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","isValidSessionName"],"fullName":"TmuxParser isValidSessionName should handle null and undefined","status":"passed","title":"should handle null and undefined","duration":0.17048099999999522,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","sanitizeSessionName"],"fullName":"TmuxParser sanitizeSessionName should clean invalid characters","status":"passed","title":"should clean invalid characters","duration":0.4236760000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","sanitizeSessionName"],"fullName":"TmuxParser sanitizeSessionName should handle empty input","status":"passed","title":"should handle empty input","duration":0.1937599999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","sanitizeSessionName"],"fullName":"TmuxParser sanitizeSessionName should convert to lowercase","status":"passed","title":"should convert to lowercase","duration":0.1296750000000202,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","sanitizeSessionName"],"fullName":"TmuxParser sanitizeSessionName should collapse multiple spaces","status":"passed","title":"should collapse multiple spaces","duration":0.12686000000002196,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseBoolean"],"fullName":"TmuxParser parseBoolean should parse boolean values correctly","status":"passed","title":"should parse boolean values correctly","duration":0.17763000000002194,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseBoolean"],"fullName":"TmuxParser parseBoolean should use custom true value","status":"passed","title":"should use custom true value","duration":0.1554610000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseBoolean"],"fullName":"TmuxParser parseBoolean should handle empty and invalid input","status":"passed","title":"should handle empty and invalid input","duration":0.12915900000001557,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseNumber"],"fullName":"TmuxParser parseNumber should parse valid numbers","status":"passed","title":"should parse valid numbers","duration":0.24105599999995775,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseNumber"],"fullName":"TmuxParser parseNumber should use default value for invalid input","status":"passed","title":"should use default value for invalid input","duration":0.3619850000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseNumber"],"fullName":"TmuxParser parseNumber should handle floating point input","status":"passed","title":"should handle floating point input","duration":0.13363799999996218,"failureMessages":[],"meta":{}}],"startTime":1751925093896,"endTime":1751925093914.362,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxParser.test.ts"},{"assertionResults":[{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should not generate empty bind-key commands","status":"passed","title":"should not generate empty bind-key commands","duration":4.0216579999998885,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should validate all bind-key commands have proper arguments","status":"passed","title":"should validate all bind-key commands have proper arguments","duration":0.6833800000000565,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should count total bind-key commands","status":"passed","title":"should count total bind-key commands","duration":1.8712600000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should check for exactly 4 bind-key errors pattern","status":"passed","title":"should check for exactly 4 bind-key errors pattern","duration":0.7162619999999151,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should validate complex bind-key commands with shell pipes","status":"passed","title":"should validate complex bind-key commands with shell pipes","duration":0.3412779999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should properly escape special characters in bind-key commands","status":"passed","title":"should properly escape special characters in bind-key commands","duration":0.2602269999999862,"failureMessages":[],"meta":{}}],"startTime":1751925093440,"endTime":1751925093449.2603,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/tmux-bind-key.test.ts"},{"assertionResults":[{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should show error when not in tmux","status":"passed","title":"should show error when not in tmux","duration":12.349243000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should split pane with bash when no target specified","status":"passed","title":"should split pane with bash when no target specified","duration":1.6867349999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should split horizontally when horizontal option is true","status":"passed","title":"should split horizontally when horizontal option is true","duration":1.2542360000000485,"failureMessages":[],"meta":{}},{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should use custom percentage when provided","status":"passed","title":"should use custom percentage when provided","duration":0.7425779999999804,"failureMessages":[],"meta":{}},{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should launch cgwt with index when numeric target provided","status":"passed","title":"should launch cgwt with index when numeric target provided","duration":0.596574999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should launch cgwt with multi-project index","status":"passed","title":"should launch cgwt with multi-project index","duration":0.4862850000000094,"failureMessages":[],"meta":{}},{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should find branch by name and use its index","status":"passed","title":"should find branch by name and use its index","duration":0.4098329999999919,"failureMessages":[],"meta":{}},{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should show error when branch not found","status":"passed","title":"should show error when branch not found","duration":31.397533000000067,"failureMessages":[],"meta":{}},{"ancestorTitles":["SplitCommand","execute"],"fullName":"SplitCommand execute should handle tmux command failure","status":"passed","title":"should handle tmux command failure","duration":1.9910899999999856,"failureMessages":[],"meta":{}}],"startTime":1751925094088,"endTime":1751925094139.9912,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/commands/SplitCommand.test.ts"},{"assertionResults":[{"ancestorTitles":["TipsCommand","execute"],"fullName":"TipsCommand execute should display all tips sections","status":"passed","title":"should display all tips sections","duration":12.851636999999982,"failureMessages":[],"meta":{}},{"ancestorTitles":["TipsCommand","execute"],"fullName":"TipsCommand execute should output exactly the same format as original","status":"passed","title":"should output exactly the same format as original","duration":0.5489919999999984,"failureMessages":[],"meta":{}}],"startTime":1751925094064,"endTime":1751925094077.549,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/commands/TipsCommand.test.ts"},{"assertionResults":[{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should display a formatted banner with figlet text and boxen styling","status":"passed","title":"should display a formatted banner with figlet text and boxen styling","duration":16.02904799999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should handle different figlet outputs","status":"passed","title":"should handle different figlet outputs","duration":1.445009999999911,"failureMessages":[],"meta":{}},{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should use correct subtitle and version","status":"passed","title":"should use correct subtitle and version","duration":1.0454910000000837,"failureMessages":[],"meta":{}},{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should apply correct boxen styling options","status":"passed","title":"should apply correct boxen styling options","duration":0.7691969999999628,"failureMessages":[],"meta":{}},{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should call console.log exactly once","status":"passed","title":"should call console.log exactly once","duration":0.6536800000000085,"failureMessages":[],"meta":{}}],"startTime":1751925094164,"endTime":1751925094183.7693,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ui/banner.test.ts"},{"assertionResults":[{"ancestorTitles":["prompts","promptForRepoUrl"],"fullName":"prompts promptForRepoUrl should prompt for repository URL and return it","status":"passed","title":"should prompt for repository URL and return it","duration":7.279930000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForRepoUrl"],"fullName":"prompts promptForRepoUrl should validate URL format","status":"passed","title":"should validate URL format","duration":1.6252980000000434,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForFolderName"],"fullName":"prompts promptForFolderName should prompt for folder name with default value","status":"passed","title":"should prompt for folder name with default value","duration":0.5384440000000268,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForFolderName"],"fullName":"prompts promptForFolderName should validate folder name","status":"passed","title":"should validate folder name","duration":0.2925639999999703,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectWorktree"],"fullName":"prompts selectWorktree should show worktree selection prompt","status":"passed","title":"should show worktree selection prompt","duration":0.7410810000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectWorktree"],"fullName":"prompts selectWorktree should mark current worktree in the list","status":"passed","title":"should mark current worktree in the list","duration":0.25600199999996676,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName"],"fullName":"prompts promptForBranchName should prompt for branch name","status":"passed","title":"should prompt for branch name","duration":0.44598100000007435,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName"],"fullName":"prompts promptForBranchName should validate branch name","status":"passed","title":"should validate branch name","duration":0.27945999999997184,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","confirmAction"],"fullName":"prompts confirmAction should prompt for confirmation with default true","status":"passed","title":"should prompt for confirmation with default true","duration":0.36772900000005393,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","confirmAction"],"fullName":"prompts confirmAction should use custom default value","status":"passed","title":"should use custom default value","duration":0.2898280000000568,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","showMainMenu"],"fullName":"prompts showMainMenu should show main menu and return selected action","status":"passed","title":"should show main menu and return selected action","duration":0.5361599999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","showEmptyDirectoryMenu"],"fullName":"prompts showEmptyDirectoryMenu should show empty directory menu","status":"passed","title":"should show empty directory menu","duration":0.37925799999993615,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","showNonEmptyDirectoryMenu"],"fullName":"prompts showNonEmptyDirectoryMenu should show non-empty directory menu","status":"passed","title":"should show non-empty directory menu","duration":0.39376000000004296,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","showRegularRepoMenu"],"fullName":"prompts showRegularRepoMenu should show regular repo menu","status":"passed","title":"should show regular repo menu","duration":0.3418100000000095,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForWorktreeAction"],"fullName":"prompts promptForWorktreeAction should show all options when multiple worktrees exist and has sessions","status":"passed","title":"should show all options when multiple worktrees exist and has sessions","duration":0.5292230000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForWorktreeAction"],"fullName":"prompts promptForWorktreeAction should hide remove option with single worktree","status":"passed","title":"should hide remove option with single worktree","duration":0.26202999999998156,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForWorktreeAction"],"fullName":"prompts promptForWorktreeAction should return supervisor action","status":"passed","title":"should return supervisor action","duration":0.1054070000000138,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForWorktreeAction"],"fullName":"prompts promptForWorktreeAction should return shutdown action when sessions exist","status":"passed","title":"should return shutdown action when sessions exist","duration":0.0874100000000908,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForSubdirectoryName"],"fullName":"prompts promptForSubdirectoryName should prompt for subdirectory name with default","status":"passed","title":"should prompt for subdirectory name with default","duration":1.3292850000000271,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForSubdirectoryName"],"fullName":"prompts promptForSubdirectoryName should validate subdirectory name","status":"passed","title":"should validate subdirectory name","duration":0.2890630000000556,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectAction"],"fullName":"prompts selectAction should show action selection prompt","status":"passed","title":"should show action selection prompt","duration":0.3685360000000628,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectAction"],"fullName":"prompts selectAction should handle empty choices array","status":"passed","title":"should handle empty choices array","duration":0.17208700000003319,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectBranch"],"fullName":"prompts selectBranch should show branch selection with cancel option","status":"passed","title":"should show branch selection with cancel option","duration":0.2789099999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectBranch"],"fullName":"prompts selectBranch should handle cancel selection","status":"passed","title":"should handle cancel selection","duration":0.09050799999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectBranch"],"fullName":"prompts selectBranch should handle empty branches array","status":"passed","title":"should handle empty branches array","duration":0.10577299999999923,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForRepoUrl edge cases"],"fullName":"prompts promptForRepoUrl edge cases should allow empty input","status":"passed","title":"should allow empty input","duration":0.07745499999998628,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForRepoUrl edge cases"],"fullName":"prompts promptForRepoUrl edge cases should validate various Git URL formats","status":"passed","title":"should validate various Git URL formats","duration":0.3468070000000125,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName edge cases"],"fullName":"prompts promptForBranchName edge cases should use default branch name","status":"passed","title":"should use default branch name","duration":0.2741009999999733,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName edge cases"],"fullName":"prompts promptForBranchName edge cases should reject empty branch name","status":"passed","title":"should reject empty branch name","duration":0.12097499999993033,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName edge cases"],"fullName":"prompts promptForBranchName edge cases should allow various valid branch name formats","status":"passed","title":"should allow various valid branch name formats","duration":0.1467890000000125,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForFolderName edge cases"],"fullName":"prompts promptForFolderName edge cases should reject empty folder name","status":"passed","title":"should reject empty folder name","duration":0.08577000000002499,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectWorktree edge cases"],"fullName":"prompts selectWorktree edge cases should use custom message","status":"passed","title":"should use custom message","duration":0.22740199999998367,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectWorktree edge cases"],"fullName":"prompts selectWorktree edge cases should handle main branch that is not current","status":"passed","title":"should handle main branch that is not current","duration":0.14436799999998584,"failureMessages":[],"meta":{}}],"startTime":1751925093363,"endTime":1751925093383.1443,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ui/prompts.test.ts"},{"assertionResults":[{"ancestorTitles":["Spinner","constructor"],"fullName":"Spinner constructor should create spinner with initial text","status":"passed","title":"should create spinner with initial text","duration":3.8507749999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","start"],"fullName":"Spinner start should start the spinner","status":"passed","title":"should start the spinner","duration":0.3766579999999635,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","start"],"fullName":"Spinner start should start the spinner with new text","status":"passed","title":"should start the spinner with new text","duration":0.3673909999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","start"],"fullName":"Spinner start should start without changing text when no text provided","status":"passed","title":"should start without changing text when no text provided","duration":0.159595999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","succeed"],"fullName":"Spinner succeed should call succeed without text","status":"passed","title":"should call succeed without text","duration":0.3032890000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","succeed"],"fullName":"Spinner succeed should call succeed with themed text","status":"passed","title":"should call succeed with themed text","duration":0.9455849999999941,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","fail"],"fullName":"Spinner fail should call fail without text","status":"passed","title":"should call fail without text","duration":0.2587199999999825,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","fail"],"fullName":"Spinner fail should call fail with themed text","status":"passed","title":"should call fail with themed text","duration":0.987972999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","warn"],"fullName":"Spinner warn should call warn without text","status":"passed","title":"should call warn without text","duration":0.2787969999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","warn"],"fullName":"Spinner warn should call warn with themed text","status":"passed","title":"should call warn with themed text","duration":0.2871409999999628,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","info"],"fullName":"Spinner info should call info without text","status":"passed","title":"should call info without text","duration":0.16563099999996211,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","info"],"fullName":"Spinner info should call info with themed text","status":"passed","title":"should call info with themed text","duration":0.2103670000000193,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","stop"],"fullName":"Spinner stop should stop the spinner","status":"passed","title":"should stop the spinner","duration":0.2605699999999729,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","setText"],"fullName":"Spinner setText should set the spinner text","status":"passed","title":"should set the spinner text","duration":0.14567399999998543,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","integration"],"fullName":"Spinner integration should handle complete lifecycle","status":"passed","title":"should handle complete lifecycle","duration":0.4247579999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","integration"],"fullName":"Spinner integration should handle failure lifecycle","status":"passed","title":"should handle failure lifecycle","duration":0.30392499999999245,"failureMessages":[],"meta":{}}],"startTime":1751925094043,"endTime":1751925094053.304,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ui/spinner.test.ts"},{"assertionResults":[{"ancestorTitles":["Container","service registration"],"fullName":"Container service registration should register and resolve a simple service","status":"passed","title":"should register and resolve a simple service","duration":3.6748019999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service registration"],"fullName":"Container service registration should register transient services","status":"passed","title":"should register transient services","duration":0.8696959999999763,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service registration"],"fullName":"Container service registration should register singleton services","status":"passed","title":"should register singleton services","duration":0.34506400000003623,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service registration"],"fullName":"Container service registration should register class constructors","status":"passed","title":"should register class constructors","duration":0.24199600000002874,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","dependency injection"],"fullName":"Container dependency injection should inject dependencies","status":"passed","title":"should inject dependencies","duration":0.16771499999998696,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","dependency injection"],"fullName":"Container dependency injection should inject nested dependencies","status":"passed","title":"should inject nested dependencies","duration":0.25100600000001805,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","dependency injection"],"fullName":"Container dependency injection should detect circular dependencies","status":"passed","title":"should detect circular dependencies","duration":0.6370420000000081,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","error handling"],"fullName":"Container error handling should throw error for unregistered service","status":"passed","title":"should throw error for unregistered service","duration":0.23143900000002304,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","error handling"],"fullName":"Container error handling should handle factory errors","status":"passed","title":"should handle factory errors","duration":0.2521550000000161,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","container management"],"fullName":"Container container management should check if service is registered","status":"passed","title":"should check if service is registered","duration":0.2583200000000261,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","container management"],"fullName":"Container container management should clear all registrations","status":"passed","title":"should clear all registrations","duration":0.17960900000002766,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","container management"],"fullName":"Container container management should create child containers","status":"passed","title":"should create child containers","duration":0.19085799999999153,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","container management"],"fullName":"Container container management should get registered service identifiers","status":"passed","title":"should get registered service identifiers","duration":0.954872000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service symbols"],"fullName":"Container service symbols should provide predefined service symbols","status":"passed","title":"should provide predefined service symbols","duration":0.1607089999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service symbols"],"fullName":"Container service symbols should use symbols as service identifiers","status":"passed","title":"should use symbols as service identifiers","duration":0.10707700000000386,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","complex scenarios"],"fullName":"Container complex scenarios should handle multiple service types","status":"passed","title":"should handle multiple service types","duration":0.24431800000002113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","complex scenarios"],"fullName":"Container complex scenarios should handle optional dependencies gracefully","status":"passed","title":"should handle optional dependencies gracefully","duration":0.11978099999998904,"failureMessages":[],"meta":{}}],"startTime":1751925093913,"endTime":1751925093922.2444,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/di/Container.test.ts"},{"assertionResults":[{"ancestorTitles":["CustomErrors","ClaudeGWTError"],"fullName":"CustomErrors ClaudeGWTError should create error with message and code","status":"passed","title":"should create error with message and code","duration":1.0648749999999154,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","ClaudeGWTError"],"fullName":"CustomErrors ClaudeGWTError should capture stack trace","status":"passed","title":"should capture stack trace","duration":3.0831080000000384,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","ClaudeGWTError"],"fullName":"CustomErrors ClaudeGWTError should be throwable and catchable","status":"passed","title":"should be throwable and catchable","duration":0.742843999999991,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitOperationError"],"fullName":"CustomErrors GitOperationError should create git operation error with operation details","status":"passed","title":"should create git operation error with operation details","duration":0.23122200000000248,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitOperationError"],"fullName":"CustomErrors GitOperationError should inherit from ClaudeGWTError","status":"passed","title":"should inherit from ClaudeGWTError","duration":0.12389200000006895,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","ClaudeInstanceError"],"fullName":"CustomErrors ClaudeInstanceError should create Claude instance error with instance ID","status":"passed","title":"should create Claude instance error with instance ID","duration":0.310359999999946,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","ClaudeInstanceError"],"fullName":"CustomErrors ClaudeInstanceError should handle empty instance ID","status":"passed","title":"should handle empty instance ID","duration":0.13170099999990725,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","DirectoryStateError"],"fullName":"CustomErrors DirectoryStateError should create directory state error with directory type","status":"passed","title":"should create directory state error with directory type","duration":0.20910000000003492,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","DirectoryStateError"],"fullName":"CustomErrors DirectoryStateError should handle various directory types","status":"passed","title":"should handle various directory types","duration":0.30563200000005963,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","MessageRoutingError"],"fullName":"CustomErrors MessageRoutingError should create message routing error with message ID","status":"passed","title":"should create message routing error with message ID","duration":0.22728700000004665,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","MessageRoutingError"],"fullName":"CustomErrors MessageRoutingError should handle UUID-style message IDs","status":"passed","title":"should handle UUID-style message IDs","duration":0.10274600000002465,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitCloneError"],"fullName":"CustomErrors GitCloneError should create git clone error","status":"passed","title":"should create git clone error","duration":0.17217200000004595,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitCloneError"],"fullName":"CustomErrors GitCloneError should inherit git operation error properties","status":"passed","title":"should inherit git operation error properties","duration":0.21535799999992378,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitInitError"],"fullName":"CustomErrors GitInitError should create git init error","status":"passed","title":"should create git init error","duration":0.20111000000008517,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitFetchError"],"fullName":"CustomErrors GitFetchError should create git fetch error","status":"passed","title":"should create git fetch error","duration":0.2056440000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitFetchError"],"fullName":"CustomErrors GitFetchError should handle network-related fetch errors","status":"passed","title":"should handle network-related fetch errors","duration":0.11333600000000388,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","WorktreeError"],"fullName":"CustomErrors WorktreeError should create worktree error with default operation","status":"passed","title":"should create worktree error with default operation","duration":0.19808599999998933,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","WorktreeError"],"fullName":"CustomErrors WorktreeError should create worktree error with custom operation","status":"passed","title":"should create worktree error with custom operation","duration":0.12081599999999071,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","WorktreeError"],"fullName":"CustomErrors WorktreeError should handle different worktree operations","status":"passed","title":"should handle different worktree operations","duration":1.3060870000000477,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error inheritance chain"],"fullName":"CustomErrors Error inheritance chain should maintain proper inheritance for all error types","status":"passed","title":"should maintain proper inheritance for all error types","duration":2.1676009999999906,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error inheritance chain"],"fullName":"CustomErrors Error inheritance chain should allow catching specific error types","status":"passed","title":"should allow catching specific error types","duration":0.28219000000001415,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error inheritance chain"],"fullName":"CustomErrors Error inheritance chain should allow type checking in catch blocks","status":"passed","title":"should allow type checking in catch blocks","duration":0.12582500000007713,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error serialization"],"fullName":"CustomErrors Error serialization should serialize custom error properties correctly","status":"passed","title":"should serialize custom error properties correctly","duration":0.13841199999990295,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error serialization"],"fullName":"CustomErrors Error serialization should handle complex error properties","status":"passed","title":"should handle complex error properties","duration":0.099933999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error serialization"],"fullName":"CustomErrors Error serialization should preserve error message in the error object","status":"passed","title":"should preserve error message in the error object","duration":0.09183700000005501,"failureMessages":[],"meta":{}}],"startTime":1751925093346,"endTime":1751925093359.0999,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/errors/CustomErrors.test.ts"},{"assertionResults":[{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect empty directory","status":"passed","title":"should detect empty directory","duration":2.4968920000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should create directory if it does not exist","status":"passed","title":"should create directory if it does not exist","duration":2.3103660000000446,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect non-git directory","status":"passed","title":"should detect non-git directory","duration":0.9733820000000151,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect git worktree","status":"passed","title":"should detect git worktree","duration":0.9803629999998975,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect regular git repository","status":"passed","title":"should detect regular git repository","duration":0.6826489999999694,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect claude-gwt-parent setup","status":"passed","title":"should detect claude-gwt-parent setup","duration":0.3306010000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should handle errors gracefully","status":"passed","title":"should handle errors gracefully","duration":1.327278999999976,"failureMessages":[],"meta":{}}],"startTime":1751925094216,"endTime":1751925094225.3274,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/git/GitDetector.test.ts"},{"assertionResults":[{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return true for a regular git repository","status":"passed","title":"should return true for a regular git repository","duration":26.107432000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return false if no .git directory exists","status":"passed","title":"should return false if no .git directory exists","duration":2.3875289999999723,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return false if already a worktree","status":"passed","title":"should return false if already a worktree","duration":3.8891780000000153,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return false if repository has uncommitted changes","status":"passed","title":"should return false if repository has uncommitted changes","duration":1.7397070000000099,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return false if repository has submodules","status":"passed","title":"should return false if repository has submodules","duration":3.1237689999999816,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","convertToWorktreeSetup"],"fullName":"GitRepository convertToWorktreeSetup should throw error if repository has uncommitted changes","status":"passed","title":"should throw error if repository has uncommitted changes","duration":2.5389990000000466,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","convertToWorktreeSetup"],"fullName":"GitRepository convertToWorktreeSetup should throw error if .git is not a directory","status":"passed","title":"should throw error if .git is not a directory","duration":3.564749000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","convertToWorktreeSetup"],"fullName":"GitRepository convertToWorktreeSetup should successfully convert a regular repository","status":"passed","title":"should successfully convert a regular repository","duration":10.738878,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","convertToWorktreeSetup"],"fullName":"GitRepository convertToWorktreeSetup should handle errors during conversion","status":"passed","title":"should handle errors during conversion","duration":8.22978599999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","getCurrentBranch"],"fullName":"GitRepository getCurrentBranch should return the current branch name","status":"passed","title":"should return the current branch name","duration":2.089933999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","getCurrentBranch"],"fullName":"GitRepository getCurrentBranch should return \"main\" if status fails","status":"passed","title":"should return \"main\" if status fails","duration":1.4881029999999669,"failureMessages":[],"meta":{}}],"startTime":1751925093809,"endTime":1751925093875.488,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/git/GitRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["WorktreeManager - Existing Branches","getBranchesWithoutWorktrees"],"fullName":"WorktreeManager - Existing Branches getBranchesWithoutWorktrees should return branches that do not have worktrees","status":"passed","title":"should return branches that do not have worktrees","duration":5.297396000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager - Existing Branches","getBranchesWithoutWorktrees"],"fullName":"WorktreeManager - Existing Branches getBranchesWithoutWorktrees should handle branches with refs/heads/ prefix","status":"passed","title":"should handle branches with refs/heads/ prefix","duration":0.9842649999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager - Existing Branches","getBranchesWithoutWorktrees"],"fullName":"WorktreeManager - Existing Branches getBranchesWithoutWorktrees should return empty array when all branches have worktrees","status":"passed","title":"should return empty array when all branches have worktrees","duration":0.920426999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager - Existing Branches","getBranchesWithoutWorktrees"],"fullName":"WorktreeManager - Existing Branches getBranchesWithoutWorktrees should handle empty branch list","status":"passed","title":"should handle empty branch list","duration":0.5244339999999852,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager - Existing Branches","getBranchesWithoutWorktrees"],"fullName":"WorktreeManager - Existing Branches getBranchesWithoutWorktrees should throw GitOperationError when branch listing fails","status":"passed","title":"should throw GitOperationError when branch listing fails","duration":2.7289390000000253,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager - Existing Branches","getBranchesWithoutWorktrees"],"fullName":"WorktreeManager - Existing Branches getBranchesWithoutWorktrees should throw GitOperationError when worktree listing fails","status":"passed","title":"should throw GitOperationError when worktree listing fails","duration":0.9446189999999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager - Existing Branches","getBranchesWithoutWorktrees"],"fullName":"WorktreeManager - Existing Branches getBranchesWithoutWorktrees should filter out worktrees without branch names","status":"passed","title":"should filter out worktrees without branch names","duration":0.6119679999999903,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager - Existing Branches","addWorktree for existing branch"],"fullName":"WorktreeManager - Existing Branches addWorktree for existing branch should create worktree for existing branch","status":"passed","title":"should create worktree for existing branch","duration":0.9615479999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager - Existing Branches","addWorktree for existing branch"],"fullName":"WorktreeManager - Existing Branches addWorktree for existing branch should handle branch names with slashes","status":"passed","title":"should handle branch names with slashes","duration":0.6549569999999676,"failureMessages":[],"meta":{}}],"startTime":1751925094061,"endTime":1751925094074.655,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/git/WorktreeManager-existing-branches.test.ts"},{"assertionResults":[{"ancestorTitles":["WorktreeManager","constructor"],"fullName":"WorktreeManager constructor should use .bare directory when it exists","status":"passed","title":"should use .bare directory when it exists","duration":4.034529999999904,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","constructor"],"fullName":"WorktreeManager constructor should use base path when .bare directory does not exist","status":"passed","title":"should use base path when .bare directory does not exist","duration":1.862412000000063,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should parse and filter worktree list correctly","status":"passed","title":"should parse and filter worktree list correctly","duration":1.4159179999999196,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle worktrees with refs/heads/ prefix","status":"passed","title":"should handle worktrees with refs/heads/ prefix","duration":0.34411999999997533,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle locked and prunable worktrees","status":"passed","title":"should handle locked and prunable worktrees","duration":1.407466999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle empty worktree output","status":"passed","title":"should handle empty worktree output","duration":0.2962440000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle incomplete worktree data","status":"passed","title":"should handle incomplete worktree data","duration":0.23164599999995517,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should throw GitOperationError on git command failure","status":"passed","title":"should throw GitOperationError on git command failure","duration":2.3260310000000572,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle non-Error rejection","status":"passed","title":"should handle non-Error rejection","duration":0.8354249999999865,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should add worktree with base branch","status":"passed","title":"should add worktree with base branch","duration":0.8974150000000236,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should add worktree for existing local branch","status":"passed","title":"should add worktree for existing local branch","duration":0.7593830000000708,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should add worktree for existing remote branch","status":"passed","title":"should add worktree for existing remote branch","duration":0.536783000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should create new branch when it does not exist","status":"passed","title":"should create new branch when it does not exist","duration":0.6662579999999707,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should throw GitOperationError on git command failure","status":"passed","title":"should throw GitOperationError on git command failure","duration":3.6724510000000237,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should handle non-Error rejection in addWorktree","status":"passed","title":"should handle non-Error rejection in addWorktree","duration":1.059707000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should remove worktree by branch name","status":"passed","title":"should remove worktree by branch name","duration":1.086449000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should remove worktree by full path","status":"passed","title":"should remove worktree by full path","duration":0.6687269999999899,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should remove worktree with force flag","status":"passed","title":"should remove worktree with force flag","duration":0.37780899999995654,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should throw GitOperationError on git command failure","status":"passed","title":"should throw GitOperationError on git command failure","duration":0.6614540000000488,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should handle non-Error rejection in removeWorktree","status":"passed","title":"should handle non-Error rejection in removeWorktree","duration":0.39287899999999354,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","pruneWorktrees"],"fullName":"WorktreeManager pruneWorktrees should prune worktrees successfully","status":"passed","title":"should prune worktrees successfully","duration":0.29234199999996235,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","pruneWorktrees"],"fullName":"WorktreeManager pruneWorktrees should throw GitOperationError on git command failure","status":"passed","title":"should throw GitOperationError on git command failure","duration":0.4369890000000396,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","pruneWorktrees"],"fullName":"WorktreeManager pruneWorktrees should handle non-Error rejection in pruneWorktrees","status":"passed","title":"should handle non-Error rejection in pruneWorktrees","duration":0.45490399999994224,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","parseWorktreeList edge cases"],"fullName":"WorktreeManager parseWorktreeList edge cases should handle unknown line types gracefully","status":"passed","title":"should handle unknown line types gracefully","duration":0.26385100000004513,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","parseWorktreeList edge cases"],"fullName":"WorktreeManager parseWorktreeList edge cases should handle multiple worktrees with different states","status":"passed","title":"should handle multiple worktrees with different states","duration":0.46305999999992764,"failureMessages":[],"meta":{}}],"startTime":1751925093439,"endTime":1751925093466.4631,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/git/WorktreeManager.test.ts"},{"assertionResults":[{"ancestorTitles":["ErrorBoundary","async error handling"],"fullName":"ErrorBoundary async error handling should handle successful async operations","status":"passed","title":"should handle successful async operations","duration":3.992861000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","async error handling"],"fullName":"ErrorBoundary async error handling should handle async operation errors","status":"passed","title":"should handle async operation errors","duration":4.679211000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","async error handling"],"fullName":"ErrorBoundary async error handling should handle non-Error objects in async operations","status":"passed","title":"should handle non-Error objects in async operations","duration":1.6474619999999618,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","async error handling"],"fullName":"ErrorBoundary async error handling should handle async operations without context","status":"passed","title":"should handle async operations without context","duration":0.9226429999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","sync error handling"],"fullName":"ErrorBoundary sync error handling should handle successful sync operations","status":"passed","title":"should handle successful sync operations","duration":1.2600800000000163,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","sync error handling"],"fullName":"ErrorBoundary sync error handling should handle sync operation errors","status":"passed","title":"should handle sync operation errors","duration":0.7830720000000042,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","function wrapping"],"fullName":"ErrorBoundary function wrapping should wrap async functions with error boundary","status":"passed","title":"should wrap async functions with error boundary","duration":4.060627000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","function wrapping"],"fullName":"ErrorBoundary function wrapping should wrap sync functions with error boundary","status":"passed","title":"should wrap sync functions with error boundary","duration":0.510360999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","function wrapping"],"fullName":"ErrorBoundary function wrapping should handle errors in wrapped async functions","status":"passed","title":"should handle errors in wrapped async functions","duration":0.7910689999999931,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","function wrapping"],"fullName":"ErrorBoundary function wrapping should handle errors in wrapped sync functions","status":"passed","title":"should handle errors in wrapped sync functions","duration":2.2462679999999864,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","context-specific error boundaries"],"fullName":"ErrorBoundary context-specific error boundaries should create context-specific error boundary","status":"passed","title":"should create context-specific error boundary","duration":0.6151719999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","context-specific error boundaries"],"fullName":"ErrorBoundary context-specific error boundaries should use context in context-specific error boundary","status":"passed","title":"should use context in context-specific error boundary","duration":0.7349489999999719,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","context-specific error boundaries"],"fullName":"ErrorBoundary context-specific error boundaries should handle sync operations in context-specific boundary","status":"passed","title":"should handle sync operations in context-specific boundary","duration":0.49039099999998825,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","error message extraction"],"fullName":"ErrorBoundary error message extraction should extract message from Error objects","status":"passed","title":"should extract message from Error objects","duration":0.7375260000000026,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","error message extraction"],"fullName":"ErrorBoundary error message extraction should extract message from string errors","status":"passed","title":"should extract message from string errors","duration":0.5559800000000337,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","error message extraction"],"fullName":"ErrorBoundary error message extraction should extract message from objects with message property","status":"passed","title":"should extract message from objects with message property","duration":0.9291170000000193,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","error message extraction"],"fullName":"ErrorBoundary error message extraction should handle unknown error types","status":"passed","title":"should handle unknown error types","duration":0.46150900000003503,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","edge cases"],"fullName":"ErrorBoundary edge cases should handle operations that return undefined","status":"passed","title":"should handle operations that return undefined","duration":0.32954699999999093,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","edge cases"],"fullName":"ErrorBoundary edge cases should handle operations that return null","status":"passed","title":"should handle operations that return null","duration":0.26296100000001843,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","edge cases"],"fullName":"ErrorBoundary edge cases should handle operations with multiple arguments","status":"passed","title":"should handle operations with multiple arguments","duration":0.39570900000001075,"failureMessages":[],"meta":{}}],"startTime":1751925093784,"endTime":1751925093814.3958,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/services/ErrorBoundary.test.ts"},{"assertionResults":[{"ancestorTitles":["Service Adapters","GitServiceAdapter","GitRepository methods"],"fullName":"Service Adapters GitServiceAdapter GitRepository methods should delegate getCurrentBranch with error boundary","status":"passed","title":"should delegate getCurrentBranch with error boundary","duration":6.749274000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","GitRepository methods"],"fullName":"Service Adapters GitServiceAdapter GitRepository methods should delegate initializeBareRepository with logging","status":"passed","title":"should delegate initializeBareRepository with logging","duration":2.1704600000000482,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","GitRepository methods"],"fullName":"Service Adapters GitServiceAdapter GitRepository methods should delegate fetch with logging","status":"passed","title":"should delegate fetch with logging","duration":1.454661000000101,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","WorktreeManager methods"],"fullName":"Service Adapters GitServiceAdapter WorktreeManager methods should delegate listWorktrees with error boundary","status":"passed","title":"should delegate listWorktrees with error boundary","duration":1.0548769999999195,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","WorktreeManager methods"],"fullName":"Service Adapters GitServiceAdapter WorktreeManager methods should delegate addWorktree with logging","status":"passed","title":"should delegate addWorktree with logging","duration":1.1638359999999466,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","WorktreeManager methods"],"fullName":"Service Adapters GitServiceAdapter WorktreeManager methods should delegate removeWorktree with logging","status":"passed","title":"should delegate removeWorktree with logging","duration":0.8802680000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","TmuxServiceAdapter"],"fullName":"Service Adapters TmuxServiceAdapter should delegate isTmuxAvailable with error boundary","status":"passed","title":"should delegate isTmuxAvailable with error boundary","duration":0.8993560000000116,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","TmuxServiceAdapter"],"fullName":"Service Adapters TmuxServiceAdapter should delegate isInsideTmux with sync error boundary","status":"passed","title":"should delegate isInsideTmux with sync error boundary","duration":1.0174180000000206,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","TmuxServiceAdapter"],"fullName":"Service Adapters TmuxServiceAdapter should delegate launchSession with logging and error boundary","status":"passed","title":"should delegate launchSession with logging and error boundary","duration":1.1898660000000518,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","TmuxServiceAdapter"],"fullName":"Service Adapters TmuxServiceAdapter should delegate listSessions","status":"passed","title":"should delegate listSessions","duration":0.6990749999999935,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should cache method results","status":"passed","title":"should cache method results","duration":0.7531710000000658,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should respect TTL and refresh cache","status":"passed","title":"should respect TTL and refresh cache","duration":21.45685800000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should use custom cache key function","status":"passed","title":"should use custom cache key function","duration":1.1230849999999464,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should clear cache","status":"passed","title":"should clear cache","duration":0.46038899999996374,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should get underlying service","status":"passed","title":"should get underlying service","duration":0.21192000000007738,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should succeed on first try","status":"passed","title":"should succeed on first try","duration":0.43106299999999464,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should retry on failure and eventually succeed","status":"passed","title":"should retry on failure and eventually succeed","duration":33.51062400000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should fail after max retries","status":"passed","title":"should fail after max retries","duration":33.63000299999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should respect shouldRetry function","status":"passed","title":"should respect shouldRetry function","duration":0.9771509999999353,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should retry with exponential backoff","status":"passed","title":"should retry with exponential backoff","duration":32.25523499999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should get underlying service","status":"passed","title":"should get underlying service","duration":0.4290650000000369,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","Adapter composition"],"fullName":"Service Adapters Adapter composition should compose caching and retry adapters","status":"passed","title":"should compose caching and retry adapters","duration":12.332712000000015,"failureMessages":[],"meta":{}}],"startTime":1751925093423,"endTime":1751925093580.3328,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/services/adapters.test.ts"},{"assertionResults":[{"ancestorTitles":["Service Factories","GitServiceFactory"],"fullName":"Service Factories GitServiceFactory should create GitRepository service","status":"passed","title":"should create GitRepository service","duration":2.3588379999999916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","GitServiceFactory"],"fullName":"Service Factories GitServiceFactory should create WorktreeManager service","status":"passed","title":"should create WorktreeManager service","duration":0.7560529999999517,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","GitServiceFactory"],"fullName":"Service Factories GitServiceFactory should create GitDetector service","status":"passed","title":"should create GitDetector service","duration":0.5713869999999588,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","GitServiceFactory"],"fullName":"Service Factories GitServiceFactory should throw error for unknown service type","status":"passed","title":"should throw error for unknown service type","duration":0.9517240000000129,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","TmuxServiceFactory"],"fullName":"Service Factories TmuxServiceFactory should create TmuxManager service","status":"passed","title":"should create TmuxManager service","duration":0.5282379999999876,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","ApplicationContextFactory"],"fullName":"Service Factories ApplicationContextFactory should create application context with all options","status":"passed","title":"should create application context with all options","duration":0.7703179999999747,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","ApplicationContextFactory"],"fullName":"Service Factories ApplicationContextFactory should create application context with minimal options","status":"passed","title":"should create application context with minimal options","duration":0.22122999999999138,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should create session config with all parameters","status":"passed","title":"should create session config with all parameters","duration":0.7037259999999605,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should create session config with default role","status":"passed","title":"should create session config with default role","duration":0.23872099999994134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should sanitize repository and branch names","status":"passed","title":"should sanitize repository and branch names","duration":0.28491300000007413,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should handle special characters in names","status":"passed","title":"should handle special characters in names","duration":0.14459999999996853,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should handle edge cases in name sanitization","status":"passed","title":"should handle edge cases in name sanitization","duration":0.15479800000002797,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should register and retrieve factories","status":"passed","title":"should register and retrieve factories","duration":0.4385429999999815,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should create services using registered factories","status":"passed","title":"should create services using registered factories","duration":1.3410219999999526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should check if factory is registered","status":"passed","title":"should check if factory is registered","duration":0.32470899999998437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should throw error for unregistered factory","status":"passed","title":"should throw error for unregistered factory","duration":0.47303500000009535,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should throw error when creating with unregistered factory","status":"passed","title":"should throw error when creating with unregistered factory","duration":0.28375599999992573,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should get list of registered factory names","status":"passed","title":"should get list of registered factory names","duration":0.9155120000000352,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should support method chaining for registration","status":"passed","title":"should support method chaining for registration","duration":0.2742190000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default GitServiceFactory instance","status":"passed","title":"should provide default GitServiceFactory instance","duration":0.348871000000031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default TmuxServiceFactory instance","status":"passed","title":"should provide default TmuxServiceFactory instance","duration":0.13966100000004644,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default ApplicationContextFactory instance","status":"passed","title":"should provide default ApplicationContextFactory instance","duration":0.17906700000003184,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default SessionConfigFactory instance","status":"passed","title":"should provide default SessionConfigFactory instance","duration":0.12112099999990278,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default FactoryRegistry with registered factories","status":"passed","title":"should provide default FactoryRegistry with registered factories","duration":0.20240199999989272,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should create services through default registry","status":"passed","title":"should create services through default registry","duration":0.692421999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Edge cases and error handling"],"fullName":"Service Factories Edge cases and error handling should handle empty strings in session config","status":"passed","title":"should handle empty strings in session config","duration":0.1406130000000303,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Edge cases and error handling"],"fullName":"Service Factories Edge cases and error handling should handle undefined gitRepo in session config","status":"passed","title":"should handle undefined gitRepo in session config","duration":0.13750699999991411,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Edge cases and error handling"],"fullName":"Service Factories Edge cases and error handling should handle complex repository names","status":"passed","title":"should handle complex repository names","duration":0.19981300000006286,"failureMessages":[],"meta":{}}],"startTime":1751925093516,"endTime":1751925093531.1997,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/services/factories.test.ts"},{"assertionResults":[{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should execute simple commands","status":"passed","title":"should execute simple commands","duration":17.64091000000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should handle command failures","status":"passed","title":"should handle command failures","duration":12.907042999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should respect timeout","status":"passed","title":"should respect timeout","duration":106.17927099999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should pass environment variables","status":"passed","title":"should pass environment variables","duration":5.469132999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should handle working directory","status":"passed","title":"should handle working directory","duration":5.9374780000000555,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommandSafe"],"fullName":"Async Utilities execCommandSafe should execute commands with arguments safely","status":"passed","title":"should execute commands with arguments safely","duration":7.8427879999999845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommandSafe"],"fullName":"Async Utilities execCommandSafe should prevent shell injection","status":"passed","title":"should prevent shell injection","duration":17.37770899999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommandSafe"],"fullName":"Async Utilities execCommandSafe should handle command not found","status":"passed","title":"should handle command not found","duration":10.437468999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommandSafe"],"fullName":"Async Utilities execCommandSafe should respect timeout","status":"passed","title":"should respect timeout","duration":110.161699,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","withTimeout"],"fullName":"Async Utilities withTimeout should complete fast operations","status":"passed","title":"should complete fast operations","duration":0.6554079999999658,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","withTimeout"],"fullName":"Async Utilities withTimeout should timeout slow operations","status":"passed","title":"should timeout slow operations","duration":51.083406999999966,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","withTimeout"],"fullName":"Async Utilities withTimeout should use custom timeout message","status":"passed","title":"should use custom timeout message","duration":55.94214099999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","parallelWithTimeout"],"fullName":"Async Utilities parallelWithTimeout should execute tasks in parallel","status":"passed","title":"should execute tasks in parallel","duration":102.04686500000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","parallelWithTimeout"],"fullName":"Async Utilities parallelWithTimeout should handle individual timeouts","status":"passed","title":"should handle individual timeouts","duration":50.75897999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","retryWithBackoff"],"fullName":"Async Utilities retryWithBackoff should succeed on first try","status":"passed","title":"should succeed on first try","duration":0.6215779999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","retryWithBackoff"],"fullName":"Async Utilities retryWithBackoff should retry on failure","status":"passed","title":"should retry on failure","duration":33.01391699999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","retryWithBackoff"],"fullName":"Async Utilities retryWithBackoff should fail after max retries","status":"passed","title":"should fail after max retries","duration":34.66960299999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","retryWithBackoff"],"fullName":"Async Utilities retryWithBackoff should use exponential backoff","status":"passed","title":"should use exponential backoff","duration":304.624916,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","debounceAsync"],"fullName":"Async Utilities debounceAsync should debounce multiple calls","status":"passed","title":"should debounce multiple calls","duration":1.6573860000000877,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","debounceAsync"],"fullName":"Async Utilities debounceAsync should handle different arguments","status":"passed","title":"should handle different arguments","duration":1.0180310000000645,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","debounceAsync"],"fullName":"Async Utilities debounceAsync should cancel pending calls","status":"passed","title":"should cancel pending calls","duration":0.38033900000004905,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","debounceAsync"],"fullName":"Async Utilities debounceAsync should handle errors","status":"passed","title":"should handle errors","duration":0.35715399999980946,"failureMessages":[],"meta":{}}],"startTime":1751925093787,"endTime":1751925094719.3804,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/utils/async.test.ts"},{"assertionResults":[{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with default options","status":"passed","title":"should create logger with default options","duration":3.525478000000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with custom name","status":"passed","title":"should create logger with custom name","duration":1.3171279999999115,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with custom level","status":"passed","title":"should create logger with custom level","duration":1.5548199999999497,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with development mode","status":"passed","title":"should create logger with development mode","duration":1.169823000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with initial context","status":"passed","title":"should create logger with initial context","duration":1.2307459999999537,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should use silent level in test environment","status":"passed","title":"should use silent level in test environment","duration":0.8460390000000189,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","gitignore management"],"fullName":"StructuredLogger (Pino) gitignore management should handle non-existent gitignore file","status":"passed","title":"should handle non-existent gitignore file","duration":1.682230000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","gitignore management"],"fullName":"StructuredLogger (Pino) gitignore management should add log file to existing gitignore","status":"passed","title":"should add log file to existing gitignore","duration":0.9671789999999874,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","gitignore management"],"fullName":"StructuredLogger (Pino) gitignore management should not duplicate log file entry in gitignore","status":"passed","title":"should not duplicate log file entry in gitignore","duration":0.7038579999999683,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","gitignore management"],"fullName":"StructuredLogger (Pino) gitignore management should handle gitignore errors gracefully","status":"passed","title":"should handle gitignore errors gracefully","duration":0.5413979999999583,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","context binding"],"fullName":"StructuredLogger (Pino) context binding should bind new context","status":"passed","title":"should bind new context","duration":1.1513289999999188,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","context binding"],"fullName":"StructuredLogger (Pino) context binding should create merged context when binding","status":"passed","title":"should create merged context when binding","duration":0.835301999999956,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","child logger"],"fullName":"StructuredLogger (Pino) child logger should create child logger","status":"passed","title":"should create child logger","duration":0.6615289999999732,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log info messages without error","status":"passed","title":"should log info messages without error","duration":0.4586649999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log info messages with fields without error","status":"passed","title":"should log info messages with fields without error","duration":0.33549299999992854,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log error messages without error","status":"passed","title":"should log error messages without error","duration":0.3389750000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log error messages with Error objects without error","status":"passed","title":"should log error messages with Error objects without error","duration":0.4931409999999232,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log error messages with non-Error objects without error","status":"passed","title":"should log error messages with non-Error objects without error","duration":0.4252290000000585,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log debug messages without error","status":"passed","title":"should log debug messages without error","duration":0.40435699999989083,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log warn messages without error","status":"passed","title":"should log warn messages without error","duration":0.3273020000000315,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log fatal messages without error","status":"passed","title":"should log fatal messages without error","duration":0.30071299999997336,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log trace messages without error","status":"passed","title":"should log trace messages without error","duration":0.3252279999999246,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","enhanced logging methods"],"fullName":"StructuredLogger (Pino) enhanced logging methods should log success messages with emoji without error","status":"passed","title":"should log success messages with emoji without error","duration":0.4677880000000414,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","enhanced logging methods"],"fullName":"StructuredLogger (Pino) enhanced logging methods should log failure messages with emoji without error","status":"passed","title":"should log failure messages with emoji without error","duration":0.35841599999992013,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","enhanced logging methods"],"fullName":"StructuredLogger (Pino) enhanced logging methods should log progress messages with emoji without error","status":"passed","title":"should log progress messages with emoji without error","duration":0.26942800000006173,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","enhanced logging methods"],"fullName":"StructuredLogger (Pino) enhanced logging methods should log milestone messages with emoji without error","status":"passed","title":"should log milestone messages with emoji without error","duration":2.137697000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","timing operations"],"fullName":"StructuredLogger (Pino) timing operations should measure operation time","status":"passed","title":"should measure operation time","duration":0.3793749999999818,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","context helpers"],"fullName":"StructuredLogger (Pino) context helpers should create git operation context","status":"passed","title":"should create git operation context","duration":0.381842000000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","context helpers"],"fullName":"StructuredLogger (Pino) context helpers should create network operation context","status":"passed","title":"should create network operation context","duration":0.41136100000005626,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","level checking"],"fullName":"StructuredLogger (Pino) level checking should report all levels as disabled in silent mode","status":"passed","title":"should report all levels as disabled in silent mode","duration":0.25545499999998356,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","flush operations"],"fullName":"StructuredLogger (Pino) flush operations should call flush without error","status":"passed","title":"should call flush without error","duration":0.631373999999937,"failureMessages":[],"meta":{}},{"ancestorTitles":["Legacy console logger implementation","logger singleton"],"fullName":"Legacy console logger implementation logger singleton should export a global logger instance","status":"passed","title":"should export a global logger instance","duration":0.39444799999989755,"failureMessages":[],"meta":{}},{"ancestorTitles":["Legacy console logger implementation","createLogger factory"],"fullName":"Legacy console logger implementation createLogger factory should create a new logger instance","status":"passed","title":"should create a new logger instance","duration":1.6657480000000078,"failureMessages":[],"meta":{}},{"ancestorTitles":["Legacy console logger implementation","createLogger factory"],"fullName":"Legacy console logger implementation createLogger factory should create logger with custom options","status":"passed","title":"should create logger with custom options","duration":0.19556999999997515,"failureMessages":[],"meta":{}},{"ancestorTitles":["Legacy console logger implementation","Logger export"],"fullName":"Legacy console logger implementation Logger export should export Logger as type alias for StructuredLogger","status":"passed","title":"should export Logger as type alias for StructuredLogger","duration":0.1224889999999732,"failureMessages":[],"meta":{}},{"ancestorTitles":["verbose logging"],"fullName":"verbose logging should have verbose method","status":"passed","title":"should have verbose method","duration":0.13965199999995548,"failureMessages":[],"meta":{}},{"ancestorTitles":["verbose logging"],"fullName":"verbose logging should log verbose messages without error","status":"passed","title":"should log verbose messages without error","duration":0.2681359999999131,"failureMessages":[],"meta":{}},{"ancestorTitles":["verbose logging"],"fullName":"verbose logging should log verbose messages with fields without error","status":"passed","title":"should log verbose messages with fields without error","duration":0.21026999999992313,"failureMessages":[],"meta":{}}],"startTime":1751925093404,"endTime":1751925093434.268,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/utils/logger.test.ts"},{"assertionResults":[{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should handle empty strings","status":"passed","title":"should handle empty strings","duration":1.1827499999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should wrap simple strings in single quotes","status":"passed","title":"should wrap simple strings in single quotes","duration":0.18321700000001329,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should escape single quotes","status":"passed","title":"should escape single quotes","duration":0.17428799999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should handle strings with multiple single quotes","status":"passed","title":"should handle strings with multiple single quotes","duration":0.12160199999999577,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should handle special shell characters","status":"passed","title":"should handle special shell characters","duration":0.26639299999999366,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should handle newlines and special characters","status":"passed","title":"should handle newlines and special characters","duration":0.1078579999999647,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should normalize simple paths","status":"passed","title":"should normalize simple paths","duration":0.21326199999998607,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should reject paths with .. traversal","status":"passed","title":"should reject paths with .. traversal","duration":0.6803939999999784,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should handle paths with . correctly","status":"passed","title":"should handle paths with . correctly","duration":0.1609390000000417,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should enforce base path restrictions","status":"passed","title":"should enforce base path restrictions","duration":0.17667899999997871,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should handle absolute paths with base path","status":"passed","title":"should handle absolute paths with base path","duration":0.13146000000000413,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should validate HTTPS URLs","status":"passed","title":"should validate HTTPS URLs","duration":0.3487910000000056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should validate SSH URLs","status":"passed","title":"should validate SSH URLs","duration":0.4404440000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should validate git protocol URLs","status":"passed","title":"should validate git protocol URLs","duration":0.184504000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should validate local paths","status":"passed","title":"should validate local paths","duration":0.1884640000000104,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should reject invalid URLs","status":"passed","title":"should reject invalid URLs","duration":0.16215899999997418,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidBranchName"],"fullName":"Security Utilities isValidBranchName should accept valid branch names","status":"passed","title":"should accept valid branch names","duration":0.21730399999995598,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidBranchName"],"fullName":"Security Utilities isValidBranchName should reject invalid branch names","status":"passed","title":"should reject invalid branch names","duration":0.2496200000000499,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizeSessionName"],"fullName":"Security Utilities sanitizeSessionName should sanitize tmux session names","status":"passed","title":"should sanitize tmux session names","duration":0.21529399999997167,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizeSessionName"],"fullName":"Security Utilities sanitizeSessionName should remove invalid characters","status":"passed","title":"should remove invalid characters","duration":0.11608499999999822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizeSessionName"],"fullName":"Security Utilities sanitizeSessionName should limit length","status":"passed","title":"should limit length","duration":0.5341679999999656,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizeSessionName"],"fullName":"Security Utilities sanitizeSessionName should handle empty strings","status":"passed","title":"should handle empty strings","duration":0.07549899999997933,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidDirectoryName"],"fullName":"Security Utilities isValidDirectoryName should accept valid directory names","status":"passed","title":"should accept valid directory names","duration":0.17214100000001054,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidDirectoryName"],"fullName":"Security Utilities isValidDirectoryName should reject invalid directory names","status":"passed","title":"should reject invalid directory names","duration":0.2553179999999884,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeTmuxArg"],"fullName":"Security Utilities escapeTmuxArg should escape tmux arguments","status":"passed","title":"should escape tmux arguments","duration":0.11632600000001503,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeTmuxArg"],"fullName":"Security Utilities escapeTmuxArg should handle backslashes","status":"passed","title":"should handle backslashes","duration":0.06674800000001824,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeTmuxArg"],"fullName":"Security Utilities escapeTmuxArg should handle single quotes","status":"passed","title":"should handle single quotes","duration":0.05838499999998703,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isSafeForShell"],"fullName":"Security Utilities isSafeForShell should accept safe strings","status":"passed","title":"should accept safe strings","duration":1.5765079999999898,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isSafeForShell"],"fullName":"Security Utilities isSafeForShell should reject strings with shell metacharacters","status":"passed","title":"should reject strings with shell metacharacters","duration":0.23131899999998495,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","safeEnvValue"],"fullName":"Security Utilities safeEnvValue should handle normal values","status":"passed","title":"should handle normal values","duration":0.1472660000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","safeEnvValue"],"fullName":"Security Utilities safeEnvValue should remove null bytes","status":"passed","title":"should remove null bytes","duration":0.05587800000000698,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","safeEnvValue"],"fullName":"Security Utilities safeEnvValue should escape shell special characters","status":"passed","title":"should escape shell special characters","duration":0.05010800000002291,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","safeEnvValue"],"fullName":"Security Utilities safeEnvValue should handle empty strings","status":"passed","title":"should handle empty strings","duration":0.04656300000004876,"failureMessages":[],"meta":{}}],"startTime":1751925093344,"endTime":1751925093353.2312,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/utils/security.test.ts"},{"assertionResults":[{"ancestorTitles":["Type Guards","isDirectoryState"],"fullName":"Type Guards isDirectoryState should return true for valid DirectoryState objects","status":"passed","title":"should return true for valid DirectoryState objects","duration":1.1344689999999673,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isDirectoryState"],"fullName":"Type Guards isDirectoryState should return false for invalid objects","status":"passed","title":"should return false for invalid objects","duration":0.33031599999998207,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isSessionInfo"],"fullName":"Type Guards isSessionInfo should return true for valid SessionInfo objects","status":"passed","title":"should return true for valid SessionInfo objects","duration":0.24947099999997135,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isSessionInfo"],"fullName":"Type Guards isSessionInfo should return false for invalid objects","status":"passed","title":"should return false for invalid objects","duration":0.17466400000000704,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isGitWorktreeInfo"],"fullName":"Type Guards isGitWorktreeInfo should return true for valid GitWorktreeInfo objects","status":"passed","title":"should return true for valid GitWorktreeInfo objects","duration":0.1665079999999648,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isGitWorktreeInfo"],"fullName":"Type Guards isGitWorktreeInfo should return false for invalid objects","status":"passed","title":"should return false for invalid objects","duration":0.20938400000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrorLike"],"fullName":"Type Guards isErrorLike should return true for Error instances","status":"passed","title":"should return true for Error instances","duration":0.16996299999999565,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrorLike"],"fullName":"Type Guards isErrorLike should return true for Error-like objects","status":"passed","title":"should return true for Error-like objects","duration":0.09006599999997889,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrorLike"],"fullName":"Type Guards isErrorLike should return false for non-error objects","status":"passed","title":"should return false for non-error objects","duration":0.18356099999999742,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrnoException"],"fullName":"Type Guards isErrnoException should return true for NodeJS.ErrnoException","status":"passed","title":"should return true for NodeJS.ErrnoException","duration":0.20929000000000997,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrnoException"],"fullName":"Type Guards isErrnoException should return false for regular errors","status":"passed","title":"should return false for regular errors","duration":0.13881500000002234,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isStringArray"],"fullName":"Type Guards isStringArray should return true for arrays of strings","status":"passed","title":"should return true for arrays of strings","duration":0.14722799999998415,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isStringArray"],"fullName":"Type Guards isStringArray should return false for non-string arrays","status":"passed","title":"should return false for non-string arrays","duration":0.3145289999999932,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isNonEmptyString"],"fullName":"Type Guards isNonEmptyString should return true for non-empty strings","status":"passed","title":"should return true for non-empty strings","duration":0.17937200000000075,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isNonEmptyString"],"fullName":"Type Guards isNonEmptyString should return false for empty strings and non-strings","status":"passed","title":"should return false for empty strings and non-strings","duration":0.14197999999998956,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isPositiveNumber"],"fullName":"Type Guards isPositiveNumber should return true for positive numbers","status":"passed","title":"should return true for positive numbers","duration":0.1123929999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isPositiveNumber"],"fullName":"Type Guards isPositiveNumber should return false for non-positive numbers","status":"passed","title":"should return false for non-positive numbers","duration":0.15888599999999542,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","safeJsonParse"],"fullName":"Type Guards safeJsonParse should parse valid JSON with type guard","status":"passed","title":"should parse valid JSON with type guard","duration":0.4895429999999692,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","safeJsonParse"],"fullName":"Type Guards safeJsonParse should return null for invalid JSON","status":"passed","title":"should return null for invalid JSON","duration":0.19798100000002705,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","assert"],"fullName":"Type Guards assert should not throw for truthy conditions","status":"passed","title":"should not throw for truthy conditions","duration":0.7670510000000377,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","assert"],"fullName":"Type Guards assert should throw for falsy conditions","status":"passed","title":"should throw for falsy conditions","duration":0.5674389999999789,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","assert"],"fullName":"Type Guards assert should use custom message","status":"passed","title":"should use custom message","duration":0.1655810000000315,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isDefined"],"fullName":"Type Guards isDefined should return true for defined values","status":"passed","title":"should return true for defined values","duration":2.6009860000000344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isDefined"],"fullName":"Type Guards isDefined should return false for null and undefined","status":"passed","title":"should return false for null and undefined","duration":0.16089799999997467,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isDefined"],"fullName":"Type Guards isDefined should narrow types correctly","status":"passed","title":"should narrow types correctly","duration":0.08300999999994474,"failureMessages":[],"meta":{}}],"startTime":1751925093348,"endTime":1751925093358.161,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/utils/type-guards.test.ts"}]}