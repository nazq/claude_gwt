{"numTotalTestSuites":300,"numPassedTestSuites":300,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":676,"numPassedTests":676,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"snapshot":{"added":0,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0,"didUpdate":false},"startTime":1751896754771,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["cgwt command integration tests","cgwt list functionality"],"fullName":"cgwt command integration tests cgwt list functionality should show \"Not in a Claude GWT managed repository\" for non-git directories","status":"passed","title":"should show \"Not in a Claude GWT managed repository\" for non-git directories","duration":141.01662300000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt list functionality"],"fullName":"cgwt command integration tests cgwt list functionality should list sessions with proper formatting","status":"passed","title":"should list sessions with proper formatting","duration":212.105776,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt switch functionality"],"fullName":"cgwt command integration tests cgwt switch functionality should accept index 0 for supervisor","status":"passed","title":"should accept index 0 for supervisor","duration":555.660083,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt switch functionality"],"fullName":"cgwt command integration tests cgwt switch functionality should show correct range for invalid indices","status":"passed","title":"should show correct range for invalid indices","duration":513.990722,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt switch functionality"],"fullName":"cgwt command integration tests cgwt switch functionality should switch by branch name without refs/heads prefix","status":"passed","title":"should switch by branch name without refs/heads prefix","duration":525.7652749999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt switch functionality"],"fullName":"cgwt command integration tests cgwt switch functionality should handle branch names correctly","status":"passed","title":"should handle branch names correctly","duration":497.9930250000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt error handling"],"fullName":"cgwt command integration tests cgwt error handling should handle missing arguments gracefully","status":"passed","title":"should handle missing arguments gracefully","duration":90.75206100000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt command integration tests","cgwt error handling"],"fullName":"cgwt command integration tests cgwt error handling should handle invalid branch names","status":"passed","title":"should handle invalid branch names","duration":540.2327289999998,"failureMessages":[],"meta":{}}],"startTime":1751896755316,"endTime":1751896758394.2327,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/cgwt-command-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["CLI Integration Workflow","CLI basic operations"],"fullName":"CLI Integration Workflow CLI basic operations should show help","status":"passed","title":"should show help","duration":191.34682399999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","CLI basic operations"],"fullName":"CLI Integration Workflow CLI basic operations should show version","status":"passed","title":"should show version","duration":128.54366599999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Empty directory workflow"],"fullName":"CLI Integration Workflow Empty directory workflow should initialize empty directory in non-interactive mode","status":"passed","title":"should initialize empty directory in non-interactive mode","duration":197.20789200000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Repository initialization with URL"],"fullName":"CLI Integration Workflow Repository initialization with URL should handle local repository initialization","status":"passed","title":"should handle local repository initialization","duration":214.60413199999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Non-git directory handling"],"fullName":"CLI Integration Workflow Non-git directory handling should detect non-git directory with files","status":"passed","title":"should detect non-git directory with files","duration":151.60542299999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Integration Workflow","Complete workflow simulation"],"fullName":"CLI Integration Workflow Complete workflow simulation should handle a complete developer workflow","status":"passed","title":"should handle a complete developer workflow","duration":344.10260300000004,"failureMessages":[],"meta":{}}],"startTime":1751896755507,"endTime":1751896756735.1025,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/cli-workflow-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["Git Operations Integration","GitDetector"],"fullName":"Git Operations Integration GitDetector should detect empty directory","status":"passed","title":"should detect empty directory","duration":4.329563000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","GitDetector"],"fullName":"Git Operations Integration GitDetector should detect non-git directory with files","status":"passed","title":"should detect non-git directory with files","duration":8.529579999999953,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","GitDetector"],"fullName":"Git Operations Integration GitDetector should detect regular git repository","status":"passed","title":"should detect regular git repository","duration":153.514792,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","GitRepository"],"fullName":"Git Operations Integration GitRepository should initialize bare repository","status":"passed","title":"should initialize bare repository","duration":69.44830699999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","GitRepository"],"fullName":"Git Operations Integration GitRepository should get default branch","status":"passed","title":"should get default branch","duration":119.93717300000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","WorktreeManager"],"fullName":"Git Operations Integration WorktreeManager should list worktrees","status":"passed","title":"should list worktrees","duration":68.56803200000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","WorktreeManager"],"fullName":"Git Operations Integration WorktreeManager should add new worktree","status":"passed","title":"should add new worktree","duration":74.22335799999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","WorktreeManager"],"fullName":"Git Operations Integration WorktreeManager should remove worktree","status":"passed","title":"should remove worktree","duration":135.42775900000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Git Operations Integration","Full workflow"],"fullName":"Git Operations Integration Full workflow should handle complete worktree setup","status":"passed","title":"should handle complete worktree setup","duration":84.20979499999999,"failureMessages":[],"meta":{}}],"startTime":1751896755576,"endTime":1751896756294.2097,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/git-operations.test.ts"},{"assertionResults":[{"ancestorTitles":["Real-World Workflow Integration","Complete workflow with multiple branches"],"fullName":"Real-World Workflow Integration Complete workflow with multiple branches should handle a complete development workflow","status":"passed","title":"should handle a complete development workflow","duration":185.587449,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Complete workflow with multiple branches"],"fullName":"Real-World Workflow Integration Complete workflow with multiple branches should support concurrent operations on different branches","status":"passed","title":"should support concurrent operations on different branches","duration":80.49723100000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Task assignment and tracking"],"fullName":"Real-World Workflow Integration Task assignment and tracking should handle task files in each branch","status":"passed","title":"should handle task files in each branch","duration":68.62918400000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Phoenix/Tmux integration"],"fullName":"Real-World Workflow Integration Phoenix/Tmux integration should generate correct session names","status":"passed","title":"should generate correct session names","duration":0.8891890000001013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Phoenix/Tmux integration"],"fullName":"Real-World Workflow Integration Phoenix/Tmux integration should detect tmux availability","status":"passed","title":"should detect tmux availability","duration":2.5138379999999643,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Phoenix/Tmux integration"],"fullName":"Real-World Workflow Integration Phoenix/Tmux integration should have proper session configuration","status":"passed","title":"should have proper session configuration","duration":0.34308499999997366,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Repository cloning workflow"],"fullName":"Real-World Workflow Integration Repository cloning workflow should handle cloning from a URL","status":"passed","title":"should handle cloning from a URL","duration":62.87350700000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Real-World Workflow Integration","Branch removal workflow"],"fullName":"Real-World Workflow Integration Branch removal workflow should safely remove worktrees","status":"passed","title":"should safely remove worktrees","duration":125.95617500000003,"failureMessages":[],"meta":{}}],"startTime":1751896755576,"endTime":1751896756103.956,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/real-world-workflow.test.ts"},{"assertionResults":[{"ancestorTitles":["Session Management Integration","Real Tmux Session Operations"],"fullName":"Session Management Integration Real Tmux Session Operations should detect tmux availability correctly","status":"passed","title":"should detect tmux availability correctly","duration":160.89840300000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Real Tmux Session Operations"],"fullName":"Session Management Integration Real Tmux Session Operations should create real tmux sessions","status":"passed","title":"should create real tmux sessions","duration":304.67023100000006,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Real Tmux Session Operations"],"fullName":"Session Management Integration Real Tmux Session Operations should handle session restart when Claude is not running","status":"passed","title":"should handle session restart when Claude is not running","duration":126.45714800000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Multi-Session Management"],"fullName":"Session Management Integration Multi-Session Management should manage multiple concurrent sessions","status":"passed","title":"should manage multiple concurrent sessions","duration":589.879617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Multi-Session Management"],"fullName":"Session Management Integration Multi-Session Management should handle session groups","status":"passed","title":"should handle session groups","duration":121.26202599999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Session Features"],"fullName":"Session Management Integration Session Features should get correct session names","status":"passed","title":"should get correct session names","duration":73.1054680000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Session Features"],"fullName":"Session Management Integration Session Features should handle tmux inside tmux detection","status":"passed","title":"should handle tmux inside tmux detection","duration":82.650261,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Session Features"],"fullName":"Session Management Integration Session Features should provide predefined layouts","status":"passed","title":"should provide predefined layouts","duration":73.05664699999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Error Handling"],"fullName":"Session Management Integration Error Handling should handle session creation errors gracefully","status":"passed","title":"should handle session creation errors gracefully","duration":76.03041399999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Error Handling"],"fullName":"Session Management Integration Error Handling should handle non-existent session queries","status":"passed","title":"should handle non-existent session queries","duration":74.56537399999979,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Error Handling"],"fullName":"Session Management Integration Error Handling should handle killing non-existent sessions","status":"passed","title":"should handle killing non-existent sessions","duration":75.92991400000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Performance Tests"],"fullName":"Session Management Integration Performance Tests should handle rapid session creation and deletion","status":"passed","title":"should handle rapid session creation and deletion","duration":554.5284770000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Session Management Integration","Performance Tests"],"fullName":"Session Management Integration Performance Tests should list many sessions efficiently","status":"passed","title":"should list many sessions efficiently","duration":293.98488199999974,"failureMessages":[],"meta":{}}],"startTime":1751896755370,"endTime":1751896757977.9849,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/integ/session-management-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle regular git mode with switch branch action","status":"passed","title":"should handle regular git mode with switch branch action","duration":7.3020029999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle regular git mode with create branch action","status":"passed","title":"should handle regular git mode with create branch action","duration":3.1193849999999657,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle regular git mode with supervisor action","status":"passed","title":"should handle regular git mode with supervisor action","duration":4.164645000000064,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle regular git mode with convert action","status":"passed","title":"should handle regular git mode with convert action","duration":2.9325229999999465,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle branch switch error","status":"passed","title":"should handle branch switch error","duration":3.280565000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle create branch error","status":"passed","title":"should handle create branch error","duration":5.095351000000051,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle empty branch name in create action","status":"passed","title":"should handle empty branch name in create action","duration":3.078192000000058,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","handleRegularGitMode"],"fullName":"ClaudeGWTApp - Regular Git Mode handleRegularGitMode should handle cancel in branch switch","status":"passed","title":"should handle cancel in branch switch","duration":2.6727809999999863,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","error handling"],"fullName":"ClaudeGWTApp - Regular Git Mode error handling should handle launchTmuxSession error","status":"passed","title":"should handle launchTmuxSession error","duration":3.7107770000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp - Regular Git Mode","shutdownAllSessions error handling"],"fullName":"ClaudeGWTApp - Regular Git Mode shutdownAllSessions error handling should handle shutdown error gracefully","status":"passed","title":"should handle shutdown error gracefully","duration":3.0894020000000637,"failureMessages":[],"meta":{}}],"startTime":1751896755501,"endTime":1751896755540.0894,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ClaudeGWTApp-regular-mode.test.ts"},{"assertionResults":[{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle empty directory and prompt for URL","status":"passed","title":"should handle empty directory and prompt for URL","duration":5.4874810000000025,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle empty directory with local init","status":"passed","title":"should handle empty directory with local init","duration":1.4413729999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle existing git worktree","status":"passed","title":"should handle existing git worktree","duration":0.8958390000000236,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle non-empty non-git directory with subdirectory creation","status":"passed","title":"should handle non-empty non-git directory with subdirectory creation","duration":0.96712500000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle non-empty non-git directory without subdirectory","status":"passed","title":"should handle non-empty non-git directory without subdirectory","duration":1.9414839999999458,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle regular git repository","status":"passed","title":"should handle regular git repository","duration":1.3826380000000427,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should respect quiet mode","status":"passed","title":"should respect quiet mode","duration":0.6119760000000269,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","startup scenarios"],"fullName":"ClaudeGWTApp startup scenarios should handle errors gracefully","status":"passed","title":"should handle errors gracefully","duration":0.814094999999952,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","main branch auto-creation"],"fullName":"ClaudeGWTApp main branch auto-creation should automatically create main branch worktree after cloning","status":"passed","title":"should automatically create main branch worktree after cloning","duration":1.3001789999999573,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","URL validation"],"fullName":"ClaudeGWTApp URL validation should accept various Git URL formats","status":"passed","title":"should accept various Git URL formats","duration":6.159804000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","error handling scenarios"],"fullName":"ClaudeGWTApp error handling scenarios should handle worktree creation failure in empty directory","status":"passed","title":"should handle worktree creation failure in empty directory","duration":17.150134999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","error handling scenarios"],"fullName":"ClaudeGWTApp error handling scenarios should handle fetch failure during initialization","status":"passed","title":"should handle fetch failure during initialization","duration":2.166409999999928,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle git repository that cannot be converted","status":"passed","title":"should handle git repository that cannot be converted","duration":1.8268209999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle git repository conversion with user proceeding in limited mode","status":"passed","title":"should handle git repository conversion with user proceeding in limited mode","duration":1.6999299999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle successful git repository conversion","status":"passed","title":"should handle successful git repository conversion","duration":4.365047000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle git repository conversion failure","status":"passed","title":"should handle git repository conversion failure","duration":1.6352679999999964,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","git repository handling"],"fullName":"ClaudeGWTApp git repository handling should handle user declining conversion and entering limited mode","status":"passed","title":"should handle user declining conversion and entering limited mode","duration":1.5259810000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","non-git directory handling"],"fullName":"ClaudeGWTApp non-git directory handling should handle subdirectory creation flow","status":"passed","title":"should handle subdirectory creation flow","duration":0.8998520000000099,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","non-git directory handling"],"fullName":"ClaudeGWTApp non-git directory handling should handle subdirectory already exists error","status":"passed","title":"should handle subdirectory already exists error","duration":0.5714260000000877,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","non-git directory handling"],"fullName":"ClaudeGWTApp non-git directory handling should handle empty repo URL in subdirectory flow","status":"passed","title":"should handle empty repo URL in subdirectory flow","duration":0.6794470000000956,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","worktree scenarios"],"fullName":"ClaudeGWTApp worktree scenarios should handle empty worktree list and create first branch","status":"passed","title":"should handle empty worktree list and create first branch","duration":5.742224999999962,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","worktree scenarios"],"fullName":"ClaudeGWTApp worktree scenarios should handle worktree creation failure for first branch","status":"passed","title":"should handle worktree creation failure for first branch","duration":2.1476430000000164,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","claude-gwt-parent directory type"],"fullName":"ClaudeGWTApp claude-gwt-parent directory type should handle claude-gwt-parent same as git-worktree","status":"passed","title":"should handle claude-gwt-parent same as git-worktree","duration":1.3775570000000243,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","extractRepoNameFromUrl"],"fullName":"ClaudeGWTApp extractRepoNameFromUrl should extract repo names from various URL formats","status":"passed","title":"should extract repo names from various URL formats","duration":0.6351280000000088,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle listBranches action","status":"passed","title":"should handle listBranches action","duration":0.9387409999999363,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle createNewWorktree action","status":"passed","title":"should handle createNewWorktree action","duration":1.221320999999989,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle createNewWorktree action with failure","status":"passed","title":"should handle createNewWorktree action with failure","duration":1.0709100000000262,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle removeWorktree action","status":"passed","title":"should handle removeWorktree action","duration":0.9073829999999816,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle removeWorktree action with user declining","status":"passed","title":"should handle removeWorktree action with user declining","duration":0.8146300000000792,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle removeWorktree action with failure","status":"passed","title":"should handle removeWorktree action with failure","duration":1.0013079999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle supervisor mode action","status":"passed","title":"should handle supervisor mode action","duration":1.200839999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","interactive worktree menu"],"fullName":"ClaudeGWTApp interactive worktree menu should handle shutdown action","status":"passed","title":"should handle shutdown action","duration":0.7576080000000047,"failureMessages":[],"meta":{}},{"ancestorTitles":["ClaudeGWTApp","listBranches with empty worktrees"],"fullName":"ClaudeGWTApp listBranches with empty worktrees should handle empty worktree list in listBranches","status":"passed","title":"should handle empty worktree list in listBranches","duration":0.7094969999999421,"failureMessages":[],"meta":{}}],"startTime":1751896755500,"endTime":1751896755573.7095,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ClaudeGWTApp.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt utility functions","parseWorktreeOutput"],"fullName":"cgwt utility functions parseWorktreeOutput should parse worktree output correctly","status":"passed","title":"should parse worktree output correctly","duration":1.3924729999999954,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","parseWorktreeOutput"],"fullName":"cgwt utility functions parseWorktreeOutput should handle worktrees without branches","status":"passed","title":"should handle worktrees without branches","duration":0.20566099999996368,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","parseWorktreeOutput"],"fullName":"cgwt utility functions parseWorktreeOutput should handle empty output","status":"passed","title":"should handle empty output","duration":0.15470599999997603,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","parseWorktreeOutput"],"fullName":"cgwt utility functions parseWorktreeOutput should handle output with trailing entries","status":"passed","title":"should handle output with trailing entries","duration":0.15251899999998386,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","isSessionActive"],"fullName":"cgwt utility functions isSessionActive should return true for current directory","status":"passed","title":"should return true for current directory","duration":0.17041799999998375,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","isSessionActive"],"fullName":"cgwt utility functions isSessionActive should return false for different directory","status":"passed","title":"should return false for different directory","duration":0.10315300000002026,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt utility functions","isSessionActive"],"fullName":"cgwt utility functions isSessionActive should handle errors gracefully","status":"passed","title":"should handle errors gracefully","duration":0.08902799999998479,"failureMessages":[],"meta":{}}],"startTime":1751896755615,"endTime":1751896755617.1704,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-functions.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt-program","createProgram"],"fullName":"cgwt-program createProgram should create a command program with correct configuration","status":"passed","title":"should create a command program with correct configuration","duration":2.010749999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","createProgram"],"fullName":"cgwt-program createProgram should have list command","status":"passed","title":"should have list command","duration":0.6963519999999903,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","createProgram"],"fullName":"cgwt-program createProgram should have switch command","status":"passed","title":"should have switch command","duration":0.2966000000000122,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput"],"fullName":"cgwt-program parseWorktreeOutput should parse worktree output correctly","status":"passed","title":"should parse worktree output correctly","duration":1.458823999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput"],"fullName":"cgwt-program parseWorktreeOutput should handle empty output","status":"passed","title":"should handle empty output","duration":0.22065599999996266,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput"],"fullName":"cgwt-program parseWorktreeOutput should filter out sessions without branches","status":"passed","title":"should filter out sessions without branches","duration":0.29122499999994034,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","isSessionActive"],"fullName":"cgwt-program isSessionActive should return true for current directory","status":"passed","title":"should return true for current directory","duration":0.3922589999999673,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","isSessionActive"],"fullName":"cgwt-program isSessionActive should return false for different directory","status":"passed","title":"should return false for different directory","duration":0.34179200000005494,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","isSessionActive"],"fullName":"cgwt-program isSessionActive should handle errors gracefully","status":"passed","title":"should handle errors gracefully","duration":0.5002819999999701,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listSessions"],"fullName":"cgwt-program listSessions should handle empty worktree list","status":"passed","title":"should handle empty worktree list","duration":3.472817999999961,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listSessions"],"fullName":"cgwt-program listSessions should handle git errors","status":"passed","title":"should handle git errors","duration":1.8031230000000278,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should switch to session by index","status":"passed","title":"should switch to session by index","duration":1.1716820000000325,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should switch to session by branch name","status":"passed","title":"should switch to session by branch name","duration":0.5971210000000156,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should handle index out of range","status":"passed","title":"should handle index out of range","duration":0.657197999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should handle branch not found","status":"passed","title":"should handle branch not found","duration":0.5889479999999594,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should handle no sessions","status":"passed","title":"should handle no sessions","duration":0.5495090000000573,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession"],"fullName":"cgwt-program switchSession should accept zero-based index 0 for first session","status":"passed","title":"should accept zero-based index 0 for first session","duration":0.28047400000002654,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","getSessionsQuietly"],"fullName":"cgwt-program getSessionsQuietly should return sessions without logging","status":"passed","title":"should return sessions without logging","duration":0.41615699999999833,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","getSessionsQuietly"],"fullName":"cgwt-program getSessionsQuietly should return empty array on error","status":"passed","title":"should return empty array on error","duration":0.2447180000000344,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listTmuxSessions"],"fullName":"cgwt-program listTmuxSessions should handle no tmux sessions","status":"passed","title":"should handle no tmux sessions","duration":0.32981200000006083,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listTmuxSessions"],"fullName":"cgwt-program listTmuxSessions should handle empty tmux output","status":"passed","title":"should handle empty tmux output","duration":0.266255000000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","listTmuxSessions"],"fullName":"cgwt-program listTmuxSessions should filter only cgwt sessions","status":"passed","title":"should filter only cgwt sessions","duration":0.2255440000000135,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle not a git repository error","status":"passed","title":"should handle not a git repository error","duration":0.5465930000000299,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle worktree error","status":"passed","title":"should handle worktree error","duration":0.35987199999999575,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle generic git error","status":"passed","title":"should handle generic git error","duration":0.35869400000001406,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle non-Error objects","status":"passed","title":"should handle non-Error objects","duration":0.843475999999896,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","handleGitError"],"fullName":"cgwt-program handleGitError should handle null error","status":"passed","title":"should handle null error","duration":3.5915019999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command integration"],"fullName":"cgwt-program command integration should handle invalid command gracefully","status":"passed","title":"should handle invalid command gracefully","duration":2.3243720000000394,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should execute listSessions when l command is called","status":"passed","title":"should execute listSessions when l command is called","duration":1.4065980000000309,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should execute switchSession when s command is called","status":"passed","title":"should execute switchSession when s command is called","duration":1.032809000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should show help when no arguments provided","status":"passed","title":"should show help when no arguments provided","duration":0.5781780000000936,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should handle numeric index in default action","status":"passed","title":"should handle numeric index in default action","duration":0.5518160000000307,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","command actions"],"fullName":"cgwt-program command actions should handle invalid argument in default action","status":"passed","title":"should handle invalid argument in default action","duration":0.7937709999999925,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput edge cases"],"fullName":"cgwt-program parseWorktreeOutput edge cases should handle multiple worktrees with partial data","status":"passed","title":"should handle multiple worktrees with partial data","duration":0.6026070000000345,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","parseWorktreeOutput edge cases"],"fullName":"cgwt-program parseWorktreeOutput edge cases should handle parsing with existing current session","status":"passed","title":"should handle parsing with existing current session","duration":0.6343429999999444,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession additional coverage"],"fullName":"cgwt-program switchSession additional coverage should handle index at range boundary (index 1)","status":"passed","title":"should handle index at range boundary (index 1)","duration":0.6298140000000103,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt-program","switchSession additional coverage"],"fullName":"cgwt-program switchSession additional coverage should handle branch search by exact branch match","status":"passed","title":"should handle branch search by exact branch match","duration":0.6135639999999967,"failureMessages":[],"meta":{}}],"startTime":1751896755298,"endTime":1751896755334.6135,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-program.test.ts"},{"assertionResults":[{"ancestorTitles":["cgwt CLI script"],"fullName":"cgwt CLI script should be a valid CLI script","status":"passed","title":"should be a valid CLI script","duration":3.436126999999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt CLI script"],"fullName":"cgwt CLI script should be a minimal entry point","status":"passed","title":"should be a minimal entry point","duration":0.3793239999999969,"failureMessages":[],"meta":{}},{"ancestorTitles":["cgwt CLI script"],"fullName":"cgwt CLI script should have corresponding program module","status":"passed","title":"should have corresponding program module","duration":0.2741900000000044,"failureMessages":[],"meta":{}}],"startTime":1751896755576,"endTime":1751896755580.3794,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/cgwt-simple.test.ts"},{"assertionResults":[{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should extract repo name from GitHub HTTPS URLs","status":"passed","title":"should extract repo name from GitHub HTTPS URLs","duration":1.4862940000000435,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should extract repo name from GitHub SSH URLs","status":"passed","title":"should extract repo name from GitHub SSH URLs","duration":0.24270000000001346,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should extract repo name from GitLab URLs","status":"passed","title":"should extract repo name from GitLab URLs","duration":0.13495799999998326,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should extract repo name from custom Git servers","status":"passed","title":"should extract repo name from custom Git servers","duration":0.16438700000003337,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should handle edge cases","status":"passed","title":"should handle edge cases","duration":0.09570300000001453,"failureMessages":[],"meta":{}},{"ancestorTitles":["extractRepoNameFromUrl"],"fullName":"extractRepoNameFromUrl should clean special characters","status":"passed","title":"should clean special characters","duration":0.11862200000001621,"failureMessages":[],"meta":{}}],"startTime":1751896755655,"endTime":1751896755657.2427,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/extractRepoName.test.ts"},{"assertionResults":[{"ancestorTitles":["CLI Version"],"fullName":"CLI Version should match package.json version","status":"passed","title":"should match package.json version","duration":178.400145,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Version"],"fullName":"CLI Version should display version with --version flag","status":"passed","title":"should display version with --version flag","duration":136.221858,"failureMessages":[],"meta":{}},{"ancestorTitles":["CLI Version"],"fullName":"CLI Version should display version with -V flag","status":"passed","title":"should display version with -V flag","duration":122.23695099999998,"failureMessages":[],"meta":{}}],"startTime":1751896755582,"endTime":1751896756019.237,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/version.test.ts"},{"assertionResults":[{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should create config directory if it does not exist","status":"passed","title":"should create config directory if it does not exist","duration":7.315690000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should use XDG_CONFIG_HOME when available","status":"passed","title":"should use XDG_CONFIG_HOME when available","duration":1.5995149999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should use home directory when XDG_CONFIG_HOME is not set","status":"passed","title":"should use home directory when XDG_CONFIG_HOME is not set","duration":1.1705919999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should create default config if file does not exist","status":"passed","title":"should create default config if file does not exist","duration":1.2959419999999682,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should load existing config file","status":"passed","title":"should load existing config file","duration":0.7755799999999908,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","initialization"],"fullName":"ConfigManager initialization should handle invalid JSON in config file","status":"passed","title":"should handle invalid JSON in config file","duration":0.587947999999983,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should return global context","status":"passed","title":"should return global context","duration":0.6796060000000352,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should return role-specific context","status":"passed","title":"should return role-specific context","duration":0.4928539999999657,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should return project-specific context","status":"passed","title":"should return project-specific context","duration":0.5307090000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should return branch-specific context","status":"passed","title":"should return branch-specific context","duration":0.629257999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should merge contexts from multiple sources","status":"passed","title":"should merge contexts from multiple sources","duration":0.6226019999999721,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should load project context from file if exists","status":"passed","title":"should load project context from file if exists","duration":0.7477719999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getContext"],"fullName":"ConfigManager getContext should load branch context from file for child role","status":"passed","title":"should load branch context from file for child role","duration":0.5143809999999576,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getTemplate"],"fullName":"ConfigManager getTemplate should return template by name","status":"passed","title":"should return template by name","duration":0.4851260000000366,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getTemplate"],"fullName":"ConfigManager getTemplate should return null for non-existent template","status":"passed","title":"should return null for non-existent template","duration":0.476778999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","listTemplates"],"fullName":"ConfigManager listTemplates should return all templates","status":"passed","title":"should return all templates","duration":1.002828999999963,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","listTemplates"],"fullName":"ConfigManager listTemplates should return empty array when no templates exist","status":"passed","title":"should return empty array when no templates exist","duration":0.5097549999999842,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","get/set"],"fullName":"ConfigManager get/set should get configuration values","status":"passed","title":"should get configuration values","duration":0.44867800000002944,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","get/set"],"fullName":"ConfigManager get/set should set configuration values","status":"passed","title":"should set configuration values","duration":0.6242639999999824,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getConfigDir/getContextDir"],"fullName":"ConfigManager getConfigDir/getContextDir should return config directory path","status":"passed","title":"should return config directory path","duration":0.3796630000000505,"failureMessages":[],"meta":{}},{"ancestorTitles":["ConfigManager","getConfigDir/getContextDir"],"fullName":"ConfigManager getConfigDir/getContextDir should return context directory path","status":"passed","title":"should return context directory path","duration":0.3623499999999922,"failureMessages":[],"meta":{}}],"startTime":1751896755271,"endTime":1751896755293.3623,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/ConfigManager.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxCommandParser","parse set commands"],"fullName":"TmuxCommandParser parse set commands should parse basic set command","status":"passed","title":"should parse basic set command","duration":1.1525030000000243,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse set commands"],"fullName":"TmuxCommandParser parse set commands should parse global set command","status":"passed","title":"should parse global set command","duration":0.1547469999999862,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse set commands"],"fullName":"TmuxCommandParser parse set commands should parse set command with multi-word value","status":"passed","title":"should parse set command with multi-word value","duration":0.13555600000000823,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse set commands"],"fullName":"TmuxCommandParser parse set commands should parse set command with complex value","status":"passed","title":"should parse set command with complex value","duration":0.10296700000003511,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse setw commands"],"fullName":"TmuxCommandParser parse setw commands should parse basic setw command","status":"passed","title":"should parse basic setw command","duration":0.11089400000003025,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse setw commands"],"fullName":"TmuxCommandParser parse setw commands should parse setw with complex value","status":"passed","title":"should parse setw with complex value","duration":0.11152000000004136,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse basic bind-key","status":"passed","title":"should parse basic bind-key","duration":0.12373500000001059,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with table","status":"passed","title":"should parse bind-key with table","duration":0.07915599999995493,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with -n flag","status":"passed","title":"should parse bind-key with -n flag","duration":0.20535699999999224,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with -r flag","status":"passed","title":"should parse bind-key with -r flag","duration":0.09915300000000116,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with multiple flags","status":"passed","title":"should parse bind-key with multiple flags","duration":4.369320000000016,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse bind-key commands"],"fullName":"TmuxCommandParser parse bind-key commands should parse bind-key with complex command","status":"passed","title":"should parse bind-key with complex command","duration":0.1843499999999949,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse unbind-key commands"],"fullName":"TmuxCommandParser parse unbind-key commands should parse basic unbind-key","status":"passed","title":"should parse basic unbind-key","duration":0.1293450000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse unbind-key commands"],"fullName":"TmuxCommandParser parse unbind-key commands should parse unbind-key with table","status":"passed","title":"should parse unbind-key with table","duration":0.08543000000003076,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","parse unbind-key commands"],"fullName":"TmuxCommandParser parse unbind-key commands should parse unbind-key with -n flag","status":"passed","title":"should parse unbind-key with -n flag","duration":0.067450000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle empty string","status":"passed","title":"should handle empty string","duration":0.0767280000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle whitespace only","status":"passed","title":"should handle whitespace only","duration":0.05839700000001358,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle unknown command","status":"passed","title":"should handle unknown command","duration":0.06036399999999276,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle malformed set command","status":"passed","title":"should handle malformed set command","duration":0.06402800000000752,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","edge cases"],"fullName":"TmuxCommandParser edge cases should handle malformed bind-key","status":"passed","title":"should handle malformed bind-key","duration":0.09081700000001547,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","real-world examples"],"fullName":"TmuxCommandParser real-world examples should parse vi-mode copy binding","status":"passed","title":"should parse vi-mode copy binding","duration":0.14245799999997644,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","real-world examples"],"fullName":"TmuxCommandParser real-world examples should parse mouse wheel binding","status":"passed","title":"should parse mouse wheel binding","duration":0.07781499999998687,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxCommandParser","real-world examples"],"fullName":"TmuxCommandParser real-world examples should parse status bar with variables","status":"passed","title":"should parse status bar with variables","duration":0.06774300000000721,"failureMessages":[],"meta":{}}],"startTime":1751896755254,"endTime":1751896755262.1426,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxCommandParser.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxDriver","isAvailable"],"fullName":"TmuxDriver isAvailable should return true when tmux is available","status":"passed","title":"should return true when tmux is available","duration":2.685711999999967,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isAvailable"],"fullName":"TmuxDriver isAvailable should return false when tmux is not available","status":"passed","title":"should return false when tmux is not available","duration":0.32465700000000197,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isInsideTmux"],"fullName":"TmuxDriver isInsideTmux should return true when TMUX env var is set","status":"passed","title":"should return true when TMUX env var is set","duration":0.2764940000000706,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isInsideTmux"],"fullName":"TmuxDriver isInsideTmux should return false when TMUX env var is not set","status":"passed","title":"should return false when TMUX env var is not set","duration":0.15287799999998697,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","listSessions"],"fullName":"TmuxDriver listSessions should parse session list correctly","status":"passed","title":"should parse session list correctly","duration":0.9764870000000201,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","listSessions"],"fullName":"TmuxDriver listSessions should return empty array on error","status":"passed","title":"should return empty array on error","duration":0.353430000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","getSession"],"fullName":"TmuxDriver getSession should return session info when found","status":"passed","title":"should return session info when found","duration":0.39929899999992813,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","getSession"],"fullName":"TmuxDriver getSession should return null when not found","status":"passed","title":"should return null when not found","duration":0.2131769999999733,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","createSession"],"fullName":"TmuxDriver createSession should create detached session with all options","status":"passed","title":"should create detached session with all options","duration":0.7512300000000778,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","createSession"],"fullName":"TmuxDriver createSession should create attached session when detached is false","status":"passed","title":"should create attached session when detached is false","duration":0.3908040000000028,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","killSession"],"fullName":"TmuxDriver killSession should kill session with sanitized name","status":"passed","title":"should kill session with sanitized name","duration":0.2925030000000106,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","createWindow"],"fullName":"TmuxDriver createWindow should create window with all options","status":"passed","title":"should create window with all options","duration":0.2917569999999614,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","listWindows"],"fullName":"TmuxDriver listWindows should parse window list correctly","status":"passed","title":"should parse window list correctly","duration":0.35253800000009505,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","listPanes"],"fullName":"TmuxDriver listPanes should parse pane list correctly","status":"passed","title":"should parse pane list correctly","duration":0.5467449999999872,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","sendKeys"],"fullName":"TmuxDriver sendKeys should send keys with Enter","status":"passed","title":"should send keys with Enter","duration":0.35917799999992894,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","sendKeys"],"fullName":"TmuxDriver sendKeys should send keys without Enter when specified","status":"passed","title":"should send keys without Enter when specified","duration":0.2158799999999701,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","setOption"],"fullName":"TmuxDriver setOption should set global option","status":"passed","title":"should set global option","duration":0.2962999999999738,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","setOption"],"fullName":"TmuxDriver setOption should set session option","status":"passed","title":"should set session option","duration":0.19102399999997033,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isPaneRunningCommand"],"fullName":"TmuxDriver isPaneRunningCommand should return true when command is found","status":"passed","title":"should return true when command is found","duration":0.2096519999998918,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","isPaneRunningCommand"],"fullName":"TmuxDriver isPaneRunningCommand should return false when command is not found","status":"passed","title":"should return false when command is not found","duration":0.12662699999998495,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","bindKey"],"fullName":"TmuxDriver bindKey should bind key with all options","status":"passed","title":"should bind key with all options","duration":0.26891599999999016,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane horizontally with percentage","status":"passed","title":"should split pane horizontally with percentage","duration":0.23139200000002802,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane vertically without horizontal flag","status":"passed","title":"should split pane vertically without horizontal flag","duration":0.14630699999997887,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane without percentage","status":"passed","title":"should split pane without percentage","duration":0.125362999999993,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane without working directory","status":"passed","title":"should split pane without working directory","duration":0.13057600000001912,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","splitPane"],"fullName":"TmuxDriver splitPane should split pane without command","status":"passed","title":"should split pane without command","duration":0.13231199999995624,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listSessions error","status":"passed","title":"should handle listSessions error","duration":2.0610659999999825,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listSessions non-zero exit code","status":"passed","title":"should handle listSessions non-zero exit code","duration":0.15982499999995525,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listWindows error","status":"passed","title":"should handle listWindows error","duration":0.3267449999999599,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listWindows non-zero exit code","status":"passed","title":"should handle listWindows non-zero exit code","duration":0.14434499999993022,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listPanes error","status":"passed","title":"should handle listPanes error","duration":0.16592400000001817,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","error handling"],"fullName":"TmuxDriver error handling should handle listPanes non-zero exit code","status":"passed","title":"should handle listPanes non-zero exit code","duration":0.11137600000006387,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","setPaneBorderStatus"],"fullName":"TmuxDriver utility methods setPaneBorderStatus should set pane border status to top","status":"passed","title":"should set pane border status to top","duration":0.2933900000000449,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","setPaneBorderStatus"],"fullName":"TmuxDriver utility methods setPaneBorderStatus should set pane border status to bottom","status":"passed","title":"should set pane border status to bottom","duration":0.14751400000000103,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","setPaneBorderStatus"],"fullName":"TmuxDriver utility methods setPaneBorderStatus should set pane border status to off","status":"passed","title":"should set pane border status to off","duration":0.1420659999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","refreshClient"],"fullName":"TmuxDriver utility methods refreshClient should refresh client without target","status":"passed","title":"should refresh client without target","duration":0.25734399999998914,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","refreshClient"],"fullName":"TmuxDriver utility methods refreshClient should refresh client with target","status":"passed","title":"should refresh client with target","duration":0.13924099999996997,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle attachSession","status":"passed","title":"should handle attachSession","duration":0.1533520000000408,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle switchClient","status":"passed","title":"should handle switchClient","duration":0.1975289999999177,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle unbindKey","status":"passed","title":"should handle unbindKey","duration":0.16556700000001,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle unbindKey with table","status":"passed","title":"should handle unbindKey with table","duration":0.14312599999993836,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle setWindowOption","status":"passed","title":"should handle setWindowOption","duration":0.19835699999998724,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle getOption","status":"passed","title":"should handle getOption","duration":0.2886799999999994,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle getOption error","status":"passed","title":"should handle getOption error","duration":0.30865800000003674,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle killPane","status":"passed","title":"should handle killPane","duration":0.20762300000001233,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle killPane with killAll flag","status":"passed","title":"should handle killPane with killAll flag","duration":0.12216799999998784,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle setPaneTitle","status":"passed","title":"should handle setPaneTitle","duration":0.12435600000003433,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle setHook","status":"passed","title":"should handle setHook","duration":0.12332299999991392,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle displayMessage without target","status":"passed","title":"should handle displayMessage without target","duration":0.12675799999999526,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle displayMessage with target","status":"passed","title":"should handle displayMessage with target","duration":0.11194699999998647,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle synchronizePanes enabled","status":"passed","title":"should handle synchronizePanes enabled","duration":0.1419509999999491,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle synchronizePanes disabled","status":"passed","title":"should handle synchronizePanes disabled","duration":0.11819100000002436,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle setPaneBorderStatus","status":"passed","title":"should handle setPaneBorderStatus","duration":0.14193299999999454,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle refreshClient without target","status":"passed","title":"should handle refreshClient without target","duration":0.2860200000000077,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","Additional uncovered methods"],"fullName":"TmuxDriver utility methods Additional uncovered methods should handle refreshClient with target","status":"passed","title":"should handle refreshClient with target","duration":0.1400499999999738,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure status bar","status":"passed","title":"should configure status bar","duration":0.5958050000000412,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure status bar with partial config","status":"passed","title":"should configure status bar with partial config","duration":0.2103620000000319,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure key bindings","status":"passed","title":"should configure key bindings","duration":0.20956700000010642,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure pane borders","status":"passed","title":"should configure pane borders","duration":0.318787000000043,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should enable vi copy mode","status":"passed","title":"should enable vi copy mode","duration":2.600274000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should configure monitoring","status":"passed","title":"should configure monitoring","duration":0.40800000000001546,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should apply layout","status":"passed","title":"should apply layout","duration":0.18160100000000057,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should create multi-pane window","status":"passed","title":"should create multi-pane window","duration":0.3117170000000442,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","SDK methods"],"fullName":"TmuxDriver utility methods SDK methods should create layout builder","status":"passed","title":"should create layout builder","duration":0.20687999999995554,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should create colors from numbers","status":"passed","title":"should create colors from numbers","duration":0.1884619999999586,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should throw error for invalid color numbers","status":"passed","title":"should throw error for invalid color numbers","duration":1.0702470000001085,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should work with decimal numbers by truncating","status":"passed","title":"should work with decimal numbers by truncating","duration":0.1704499999999598,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should have standard color constants","status":"passed","title":"should have standard color constants","duration":0.224550000000022,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxColor"],"fullName":"TmuxDriver utility methods TmuxColor should create colors from strings","status":"passed","title":"should create colors from strings","duration":0.1404929999999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxLayoutBuilder"],"fullName":"TmuxDriver utility methods TmuxLayoutBuilder should build layout with multiple panes","status":"passed","title":"should build layout with multiple panes","duration":0.8555029999999988,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxLayoutBuilder"],"fullName":"TmuxDriver utility methods TmuxLayoutBuilder should handle empty builder","status":"passed","title":"should handle empty builder","duration":0.9166710000000649,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxDriver","utility methods","TmuxLayoutBuilder"],"fullName":"TmuxDriver utility methods TmuxLayoutBuilder should handle single pane","status":"passed","title":"should handle single pane","duration":0.3611079999999447,"failureMessages":[],"meta":{}}],"startTime":1751896755296,"endTime":1751896755325.9167,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxDriver.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxEnhancer","configureSession"],"fullName":"TmuxEnhancer configureSession should return success when all operations succeed","status":"passed","title":"should return success when all operations succeed","duration":3.6042720000000372,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSession"],"fullName":"TmuxEnhancer configureSession should return partial success when some operations fail","status":"passed","title":"should return partial success when some operations fail","duration":0.7666380000000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSession"],"fullName":"TmuxEnhancer configureSession should handle complete failure gracefully","status":"passed","title":"should handle complete failure gracefully","duration":0.3614599999999655,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureCopyMode"],"fullName":"TmuxEnhancer configureCopyMode should configure all copy mode settings","status":"passed","title":"should configure all copy mode settings","duration":1.2708519999999908,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureCopyMode"],"fullName":"TmuxEnhancer configureCopyMode should handle partial failures","status":"passed","title":"should handle partial failures","duration":0.46023999999999887,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureCopyMode"],"fullName":"TmuxEnhancer configureCopyMode should handle non-Error objects","status":"passed","title":"should handle non-Error objects","duration":0.25065399999999727,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureStatusBar"],"fullName":"TmuxEnhancer configureStatusBar should configure status bar for child role","status":"passed","title":"should configure status bar for child role","duration":1.816428999999971,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureStatusBar"],"fullName":"TmuxEnhancer configureStatusBar should configure status bar for supervisor role","status":"passed","title":"should configure status bar for supervisor role","duration":1.334559000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureStatusBar"],"fullName":"TmuxEnhancer configureStatusBar should handle session names with different formats","status":"passed","title":"should handle session names with different formats","duration":0.5160430000000247,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureStatusBar"],"fullName":"TmuxEnhancer configureStatusBar should include monitoring result","status":"passed","title":"should include monitoring result","duration":0.5110779999999977,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","setupAdvancedStatusMonitoring"],"fullName":"TmuxEnhancer setupAdvancedStatusMonitoring should set up basic hooks for child role","status":"passed","title":"should set up basic hooks for child role","duration":0.2639080000000149,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","setupAdvancedStatusMonitoring"],"fullName":"TmuxEnhancer setupAdvancedStatusMonitoring should set up additional hooks for supervisor role","status":"passed","title":"should set up additional hooks for supervisor role","duration":0.28586899999999105,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","setupAdvancedStatusMonitoring"],"fullName":"TmuxEnhancer setupAdvancedStatusMonitoring should handle hook failures","status":"passed","title":"should handle hook failures","duration":0.28356399999995574,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureKeyBindings"],"fullName":"TmuxEnhancer configureKeyBindings should configure all key bindings","status":"passed","title":"should configure all key bindings","duration":0.4928600000000074,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureKeyBindings"],"fullName":"TmuxEnhancer configureKeyBindings should handle binding failures","status":"passed","title":"should handle binding failures","duration":0.21764400000000705,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSessionGroups"],"fullName":"TmuxEnhancer configureSessionGroups should configure session group for properly named session","status":"passed","title":"should configure session group for properly named session","duration":0.22191399999996975,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSessionGroups"],"fullName":"TmuxEnhancer configureSessionGroups should skip grouping for simple session names","status":"passed","title":"should skip grouping for simple session names","duration":0.23363599999998996,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxEnhancer","configureSessionGroups"],"fullName":"TmuxEnhancer configureSessionGroups should handle grouping failures gracefully","status":"passed","title":"should handle grouping failures gracefully","duration":0.2005560000000628,"failureMessages":[],"meta":{}}],"startTime":1751896755305,"endTime":1751896755319.2004,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxEnhancer.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxHookParser","parse valid hooks"],"fullName":"TmuxHookParser parse valid hooks should parse hook with target","status":"passed","title":"should parse hook with target","duration":1.4919909999999845,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse valid hooks"],"fullName":"TmuxHookParser parse valid hooks should parse hook without target","status":"passed","title":"should parse hook without target","duration":0.22951600000001804,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse valid hooks"],"fullName":"TmuxHookParser parse valid hooks should parse hook with complex command","status":"passed","title":"should parse hook with complex command","duration":0.11527999999998428,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse valid hooks"],"fullName":"TmuxHookParser parse valid hooks should parse hook with special characters in command","status":"passed","title":"should parse hook with special characters in command","duration":0.14638899999999921,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle empty string","status":"passed","title":"should handle empty string","duration":0.09641899999999737,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle whitespace only","status":"passed","title":"should handle whitespace only","duration":0.1047930000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle malformed hook without quotes","status":"passed","title":"should handle malformed hook without quotes","duration":0.08688000000000784,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle hook missing -g flag","status":"passed","title":"should handle hook missing -g flag","duration":0.07263600000001702,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle hook without command","status":"passed","title":"should handle hook without command","duration":0.2530840000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","parse invalid hooks"],"fullName":"TmuxHookParser parse invalid hooks should handle non-hook commands","status":"passed","title":"should handle non-hook commands","duration":0.11128000000002203,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","edge cases"],"fullName":"TmuxHookParser edge cases should handle hook with empty command","status":"passed","title":"should handle hook with empty command","duration":0.08191299999998591,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxHookParser","edge cases"],"fullName":"TmuxHookParser edge cases should handle hook with spaces in target","status":"passed","title":"should handle hook with spaces in target","duration":0.06458299999999895,"failureMessages":[],"meta":{}}],"startTime":1751896755579,"endTime":1751896755582.1113,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxHookParser.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxManager","getSessionName"],"fullName":"TmuxManager getSessionName should generate valid tmux session names","status":"passed","title":"should generate valid tmux session names","duration":1.8858319999999367,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionName"],"fullName":"TmuxManager getSessionName should handle special characters correctly","status":"passed","title":"should handle special characters correctly","duration":0.573711000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","isTmuxAvailable"],"fullName":"TmuxManager isTmuxAvailable should return true when tmux is available","status":"passed","title":"should return true when tmux is available","duration":0.5762500000000728,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","isTmuxAvailable"],"fullName":"TmuxManager isTmuxAvailable should return false when tmux is not available","status":"passed","title":"should return false when tmux is not available","duration":0.24629200000003948,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","isInsideTmux"],"fullName":"TmuxManager isInsideTmux should return true when inside tmux","status":"passed","title":"should return true when inside tmux","duration":0.22658100000001014,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","isInsideTmux"],"fullName":"TmuxManager isInsideTmux should return false when not inside tmux","status":"passed","title":"should return false when not inside tmux","duration":0.1940829999999778,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionInfo"],"fullName":"TmuxManager getSessionInfo should return session info when session exists","status":"passed","title":"should return session info when session exists","duration":2.1946380000000545,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionInfo"],"fullName":"TmuxManager getSessionInfo should return null when session does not exist","status":"passed","title":"should return null when session does not exist","duration":0.3529359999999997,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionInfo"],"fullName":"TmuxManager getSessionInfo should handle sessions without Claude running","status":"passed","title":"should handle sessions without Claude running","duration":0.6292100000000573,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionInfo"],"fullName":"TmuxManager getSessionInfo should handle errors when checking for Claude","status":"passed","title":"should handle errors when checking for Claude","duration":0.49109499999997297,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should check tmux availability","status":"passed","title":"should check tmux availability","duration":1.2084059999999681,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should create context file","status":"passed","title":"should create context file","duration":2.067839000000049,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should create new session when it does not exist","status":"passed","title":"should create new session when it does not exist","duration":0.759270000000015,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should restart Claude in existing session without Claude","status":"passed","title":"should restart Claude in existing session without Claude","duration":1.0650159999999005,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should attach to existing session with Claude running","status":"passed","title":"should attach to existing session with Claude running","duration":0.7117990000000418,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","launchSession"],"fullName":"TmuxManager launchSession should handle being inside tmux differently","status":"passed","title":"should handle being inside tmux differently","duration":0.441962999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","createDetachedSession"],"fullName":"TmuxManager createDetachedSession should create a detached session","status":"passed","title":"should create a detached session","duration":0.7554000000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","attachToSession"],"fullName":"TmuxManager attachToSession should use switch-client when inside tmux","status":"passed","title":"should use switch-client when inside tmux","duration":0.24381900000003043,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","attachToSession"],"fullName":"TmuxManager attachToSession should use attach-session when outside tmux","status":"passed","title":"should use attach-session when outside tmux","duration":0.4007209999999759,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","killSession"],"fullName":"TmuxManager killSession should kill the specified session","status":"passed","title":"should kill the specified session","duration":0.2560110000000577,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","listSessions"],"fullName":"TmuxManager listSessions should return list of cgwt sessions","status":"passed","title":"should return list of cgwt sessions","duration":0.6436339999999063,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","listSessions"],"fullName":"TmuxManager listSessions should return empty array when no sessions exist","status":"passed","title":"should return empty array when no sessions exist","duration":0.26109900000005837,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","shutdownAll"],"fullName":"TmuxManager shutdownAll should kill all cgwt sessions","status":"passed","title":"should kill all cgwt sessions","duration":0.5302310000000716,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","createComparisonLayout"],"fullName":"TmuxManager createComparisonLayout should create comparison layout for two branches","status":"passed","title":"should create comparison layout for two branches","duration":0.222067999999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","toggleSynchronizedPanes"],"fullName":"TmuxManager toggleSynchronizedPanes should toggle pane synchronization","status":"passed","title":"should toggle pane synchronization","duration":4.405428000000029,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getPredefinedLayouts"],"fullName":"TmuxManager getPredefinedLayouts should return predefined layouts from TmuxEnhancer","status":"passed","title":"should return predefined layouts from TmuxEnhancer","duration":0.9303929999999809,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionGroup"],"fullName":"TmuxManager getSessionGroup should return session group name","status":"passed","title":"should return session group name","duration":0.4130890000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionGroup"],"fullName":"TmuxManager getSessionGroup should return null when session has no group","status":"passed","title":"should return null when session has no group","duration":0.27633000000002994,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxManager","getSessionsInGroup"],"fullName":"TmuxManager getSessionsInGroup should return sessions in the specified group","status":"passed","title":"should return sessions in the specified group","duration":0.5238349999999627,"failureMessages":[],"meta":{}}],"startTime":1751896755311,"endTime":1751896755336.524,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxManager.test.ts"},{"assertionResults":[{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should parse valid session output","status":"passed","title":"should parse valid session output","duration":1.4185530000000313,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should handle empty output","status":"passed","title":"should handle empty output","duration":0.1362479999999664,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should handle malformed lines","status":"passed","title":"should handle malformed lines","duration":0.2995390000000384,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should handle missing fields gracefully","status":"passed","title":"should handle missing fields gracefully","duration":0.5465820000000008,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseSessions"],"fullName":"TmuxParser parseSessions should trim group names","status":"passed","title":"should trim group names","duration":0.10475099999996473,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseWindows"],"fullName":"TmuxParser parseWindows should parse valid window output","status":"passed","title":"should parse valid window output","duration":0.22336899999999105,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseWindows"],"fullName":"TmuxParser parseWindows should handle empty window output","status":"passed","title":"should handle empty window output","duration":0.07083699999998316,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseWindows"],"fullName":"TmuxParser parseWindows should handle malformed window data","status":"passed","title":"should handle malformed window data","duration":0.08421600000002627,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parsePanes"],"fullName":"TmuxParser parsePanes should parse valid pane output","status":"passed","title":"should parse valid pane output","duration":0.3285329999999931,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parsePanes"],"fullName":"TmuxParser parsePanes should handle panes without titles","status":"passed","title":"should handle panes without titles","duration":0.10501300000004221,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parsePanes"],"fullName":"TmuxParser parsePanes should trim pane titles","status":"passed","title":"should trim pane titles","duration":0.07087699999999586,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parsePanes"],"fullName":"TmuxParser parsePanes should handle empty pane output","status":"passed","title":"should handle empty pane output","duration":0.0671909999999798,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","isValidSessionName"],"fullName":"TmuxParser isValidSessionName should accept valid session names","status":"passed","title":"should accept valid session names","duration":0.1118720000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","isValidSessionName"],"fullName":"TmuxParser isValidSessionName should reject invalid session names","status":"passed","title":"should reject invalid session names","duration":0.10460899999998219,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","isValidSessionName"],"fullName":"TmuxParser isValidSessionName should handle null and undefined","status":"passed","title":"should handle null and undefined","duration":0.07854399999996531,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","sanitizeSessionName"],"fullName":"TmuxParser sanitizeSessionName should clean invalid characters","status":"passed","title":"should clean invalid characters","duration":0.1536029999999755,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","sanitizeSessionName"],"fullName":"TmuxParser sanitizeSessionName should handle empty input","status":"passed","title":"should handle empty input","duration":0.08449799999999641,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","sanitizeSessionName"],"fullName":"TmuxParser sanitizeSessionName should convert to lowercase","status":"passed","title":"should convert to lowercase","duration":0.04818599999998696,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","sanitizeSessionName"],"fullName":"TmuxParser sanitizeSessionName should collapse multiple spaces","status":"passed","title":"should collapse multiple spaces","duration":0.04722199999997656,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseBoolean"],"fullName":"TmuxParser parseBoolean should parse boolean values correctly","status":"passed","title":"should parse boolean values correctly","duration":0.08052199999997356,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseBoolean"],"fullName":"TmuxParser parseBoolean should use custom true value","status":"passed","title":"should use custom true value","duration":0.06760100000002467,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseBoolean"],"fullName":"TmuxParser parseBoolean should handle empty and invalid input","status":"passed","title":"should handle empty and invalid input","duration":0.06827099999998154,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseNumber"],"fullName":"TmuxParser parseNumber should parse valid numbers","status":"passed","title":"should parse valid numbers","duration":0.08826800000002777,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseNumber"],"fullName":"TmuxParser parseNumber should use default value for invalid input","status":"passed","title":"should use default value for invalid input","duration":0.08541000000002441,"failureMessages":[],"meta":{}},{"ancestorTitles":["TmuxParser","parseNumber"],"fullName":"TmuxParser parseNumber should handle floating point input","status":"passed","title":"should handle floating point input","duration":0.05638400000003685,"failureMessages":[],"meta":{}}],"startTime":1751896755226,"endTime":1751896755231.0884,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/TmuxParser.test.ts"},{"assertionResults":[{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should not generate empty bind-key commands","status":"passed","title":"should not generate empty bind-key commands","duration":2.2701659999999606,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should validate all bind-key commands have proper arguments","status":"passed","title":"should validate all bind-key commands have proper arguments","duration":0.3782340000000204,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should count total bind-key commands","status":"passed","title":"should count total bind-key commands","duration":1.0255050000000097,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should check for exactly 4 bind-key errors pattern","status":"passed","title":"should check for exactly 4 bind-key errors pattern","duration":0.17465299999997796,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should validate complex bind-key commands with shell pipes","status":"passed","title":"should validate complex bind-key commands with shell pipes","duration":0.1610430000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Tmux bind-key command validation"],"fullName":"Tmux bind-key command validation should properly escape special characters in bind-key commands","status":"passed","title":"should properly escape special characters in bind-key commands","duration":0.15569999999996753,"failureMessages":[],"meta":{}}],"startTime":1751896755305,"endTime":1751896755310.1611,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/sessions/tmux-bind-key.test.ts"},{"assertionResults":[{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should display a formatted banner with figlet text and boxen styling","status":"passed","title":"should display a formatted banner with figlet text and boxen styling","duration":3.6889429999999948,"failureMessages":[],"meta":{}},{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should handle different figlet outputs","status":"passed","title":"should handle different figlet outputs","duration":0.5275169999999889,"failureMessages":[],"meta":{}},{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should use correct subtitle and version","status":"passed","title":"should use correct subtitle and version","duration":0.2321590000000242,"failureMessages":[],"meta":{}},{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should apply correct boxen styling options","status":"passed","title":"should apply correct boxen styling options","duration":0.2385969999999702,"failureMessages":[],"meta":{}},{"ancestorTitles":["banner","showBanner"],"fullName":"banner showBanner should call console.log exactly once","status":"passed","title":"should call console.log exactly once","duration":0.2259400000000369,"failureMessages":[],"meta":{}}],"startTime":1751896755614,"endTime":1751896755619.2258,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ui/banner.test.ts"},{"assertionResults":[{"ancestorTitles":["prompts","promptForRepoUrl"],"fullName":"prompts promptForRepoUrl should prompt for repository URL and return it","status":"passed","title":"should prompt for repository URL and return it","duration":17.10906799999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForRepoUrl"],"fullName":"prompts promptForRepoUrl should validate URL format","status":"passed","title":"should validate URL format","duration":0.8940000000000055,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForFolderName"],"fullName":"prompts promptForFolderName should prompt for folder name with default value","status":"passed","title":"should prompt for folder name with default value","duration":0.7564600000000041,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForFolderName"],"fullName":"prompts promptForFolderName should validate folder name","status":"passed","title":"should validate folder name","duration":0.4464720000000284,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectWorktree"],"fullName":"prompts selectWorktree should show worktree selection prompt","status":"passed","title":"should show worktree selection prompt","duration":1.0825490000000286,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectWorktree"],"fullName":"prompts selectWorktree should mark current worktree in the list","status":"passed","title":"should mark current worktree in the list","duration":0.31041999999996506,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName"],"fullName":"prompts promptForBranchName should prompt for branch name","status":"passed","title":"should prompt for branch name","duration":0.4209690000000137,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName"],"fullName":"prompts promptForBranchName should validate branch name","status":"passed","title":"should validate branch name","duration":0.29318600000004835,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","confirmAction"],"fullName":"prompts confirmAction should prompt for confirmation with default true","status":"passed","title":"should prompt for confirmation with default true","duration":0.4499020000000087,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","confirmAction"],"fullName":"prompts confirmAction should use custom default value","status":"passed","title":"should use custom default value","duration":0.2935600000000136,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","showMainMenu"],"fullName":"prompts showMainMenu should show main menu and return selected action","status":"passed","title":"should show main menu and return selected action","duration":0.37376900000003843,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","showEmptyDirectoryMenu"],"fullName":"prompts showEmptyDirectoryMenu should show empty directory menu","status":"passed","title":"should show empty directory menu","duration":0.36549099999996315,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","showNonEmptyDirectoryMenu"],"fullName":"prompts showNonEmptyDirectoryMenu should show non-empty directory menu","status":"passed","title":"should show non-empty directory menu","duration":0.40918299999998453,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","showRegularRepoMenu"],"fullName":"prompts showRegularRepoMenu should show regular repo menu","status":"passed","title":"should show regular repo menu","duration":0.29364200000003393,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForWorktreeAction"],"fullName":"prompts promptForWorktreeAction should show all options when multiple worktrees exist and has sessions","status":"passed","title":"should show all options when multiple worktrees exist and has sessions","duration":1.6975799999999595,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForWorktreeAction"],"fullName":"prompts promptForWorktreeAction should hide remove option with single worktree","status":"passed","title":"should hide remove option with single worktree","duration":0.25712399999997615,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForWorktreeAction"],"fullName":"prompts promptForWorktreeAction should return supervisor action","status":"passed","title":"should return supervisor action","duration":0.10489999999998645,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForWorktreeAction"],"fullName":"prompts promptForWorktreeAction should return shutdown action when sessions exist","status":"passed","title":"should return shutdown action when sessions exist","duration":0.09486699999996517,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForSubdirectoryName"],"fullName":"prompts promptForSubdirectoryName should prompt for subdirectory name with default","status":"passed","title":"should prompt for subdirectory name with default","duration":0.27018700000002127,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForSubdirectoryName"],"fullName":"prompts promptForSubdirectoryName should validate subdirectory name","status":"passed","title":"should validate subdirectory name","duration":0.3055830000000128,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectAction"],"fullName":"prompts selectAction should show action selection prompt","status":"passed","title":"should show action selection prompt","duration":0.38477000000000317,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectAction"],"fullName":"prompts selectAction should handle empty choices array","status":"passed","title":"should handle empty choices array","duration":0.18444099999999253,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectBranch"],"fullName":"prompts selectBranch should show branch selection with cancel option","status":"passed","title":"should show branch selection with cancel option","duration":0.24004600000000664,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectBranch"],"fullName":"prompts selectBranch should handle cancel selection","status":"passed","title":"should handle cancel selection","duration":0.09704300000004196,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectBranch"],"fullName":"prompts selectBranch should handle empty branches array","status":"passed","title":"should handle empty branches array","duration":0.12321800000000849,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForRepoUrl edge cases"],"fullName":"prompts promptForRepoUrl edge cases should allow empty input","status":"passed","title":"should allow empty input","duration":0.10181999999997515,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForRepoUrl edge cases"],"fullName":"prompts promptForRepoUrl edge cases should validate various Git URL formats","status":"passed","title":"should validate various Git URL formats","duration":0.2865889999999922,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName edge cases"],"fullName":"prompts promptForBranchName edge cases should use default branch name","status":"passed","title":"should use default branch name","duration":0.19610000000000127,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName edge cases"],"fullName":"prompts promptForBranchName edge cases should reject empty branch name","status":"passed","title":"should reject empty branch name","duration":0.1084030000000098,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForBranchName edge cases"],"fullName":"prompts promptForBranchName edge cases should allow various valid branch name formats","status":"passed","title":"should allow various valid branch name formats","duration":0.5193679999999858,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","promptForFolderName edge cases"],"fullName":"prompts promptForFolderName edge cases should reject empty folder name","status":"passed","title":"should reject empty folder name","duration":0.12628100000000586,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectWorktree edge cases"],"fullName":"prompts selectWorktree edge cases should use custom message","status":"passed","title":"should use custom message","duration":0.18845300000003817,"failureMessages":[],"meta":{}},{"ancestorTitles":["prompts","selectWorktree edge cases"],"fullName":"prompts selectWorktree edge cases should handle main branch that is not current","status":"passed","title":"should handle main branch that is not current","duration":0.13691800000003695,"failureMessages":[],"meta":{}}],"startTime":1751896755257,"endTime":1751896755287.1885,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ui/prompts.test.ts"},{"assertionResults":[{"ancestorTitles":["Spinner","constructor"],"fullName":"Spinner constructor should create spinner with initial text","status":"passed","title":"should create spinner with initial text","duration":3.173012,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","start"],"fullName":"Spinner start should start the spinner","status":"passed","title":"should start the spinner","duration":0.43387500000000045,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","start"],"fullName":"Spinner start should start the spinner with new text","status":"passed","title":"should start the spinner with new text","duration":0.3357409999999845,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","start"],"fullName":"Spinner start should start without changing text when no text provided","status":"passed","title":"should start without changing text when no text provided","duration":0.1861329999999839,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","succeed"],"fullName":"Spinner succeed should call succeed without text","status":"passed","title":"should call succeed without text","duration":0.39605000000000246,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","succeed"],"fullName":"Spinner succeed should call succeed with themed text","status":"passed","title":"should call succeed with themed text","duration":1.1715969999999913,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","fail"],"fullName":"Spinner fail should call fail without text","status":"passed","title":"should call fail without text","duration":0.3040839999999889,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","fail"],"fullName":"Spinner fail should call fail with themed text","status":"passed","title":"should call fail with themed text","duration":0.2644469999999899,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","warn"],"fullName":"Spinner warn should call warn without text","status":"passed","title":"should call warn without text","duration":0.27238700000000904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","warn"],"fullName":"Spinner warn should call warn with themed text","status":"passed","title":"should call warn with themed text","duration":0.2997079999999812,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","info"],"fullName":"Spinner info should call info without text","status":"passed","title":"should call info without text","duration":0.28115499999998406,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","info"],"fullName":"Spinner info should call info with themed text","status":"passed","title":"should call info with themed text","duration":0.23750400000000127,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","stop"],"fullName":"Spinner stop should stop the spinner","status":"passed","title":"should stop the spinner","duration":0.13372799999999074,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","setText"],"fullName":"Spinner setText should set the spinner text","status":"passed","title":"should set the spinner text","duration":0.11952200000001767,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","integration"],"fullName":"Spinner integration should handle complete lifecycle","status":"passed","title":"should handle complete lifecycle","duration":0.19489999999998986,"failureMessages":[],"meta":{}},{"ancestorTitles":["Spinner","integration"],"fullName":"Spinner integration should handle failure lifecycle","status":"passed","title":"should handle failure lifecycle","duration":0.22345099999998297,"failureMessages":[],"meta":{}}],"startTime":1751896755533,"endTime":1751896755542.2234,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/cli/ui/spinner.test.ts"},{"assertionResults":[{"ancestorTitles":["Container","service registration"],"fullName":"Container service registration should register and resolve a simple service","status":"passed","title":"should register and resolve a simple service","duration":1.3347260000000176,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service registration"],"fullName":"Container service registration should register transient services","status":"passed","title":"should register transient services","duration":1.015796999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service registration"],"fullName":"Container service registration should register singleton services","status":"passed","title":"should register singleton services","duration":0.22664799999995466,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service registration"],"fullName":"Container service registration should register class constructors","status":"passed","title":"should register class constructors","duration":0.28966000000002623,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","dependency injection"],"fullName":"Container dependency injection should inject dependencies","status":"passed","title":"should inject dependencies","duration":0.24919099999999617,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","dependency injection"],"fullName":"Container dependency injection should inject nested dependencies","status":"passed","title":"should inject nested dependencies","duration":0.26918000000000575,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","dependency injection"],"fullName":"Container dependency injection should detect circular dependencies","status":"passed","title":"should detect circular dependencies","duration":0.8138930000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","error handling"],"fullName":"Container error handling should throw error for unregistered service","status":"passed","title":"should throw error for unregistered service","duration":0.220546000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","error handling"],"fullName":"Container error handling should handle factory errors","status":"passed","title":"should handle factory errors","duration":0.28603700000002164,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","container management"],"fullName":"Container container management should check if service is registered","status":"passed","title":"should check if service is registered","duration":0.16039099999994733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","container management"],"fullName":"Container container management should clear all registrations","status":"passed","title":"should clear all registrations","duration":0.12265200000001641,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","container management"],"fullName":"Container container management should create child containers","status":"passed","title":"should create child containers","duration":0.19288199999999733,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","container management"],"fullName":"Container container management should get registered service identifiers","status":"passed","title":"should get registered service identifiers","duration":0.8417459999999437,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service symbols"],"fullName":"Container service symbols should provide predefined service symbols","status":"passed","title":"should provide predefined service symbols","duration":0.15492599999998902,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","service symbols"],"fullName":"Container service symbols should use symbols as service identifiers","status":"passed","title":"should use symbols as service identifiers","duration":0.11465299999997569,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","complex scenarios"],"fullName":"Container complex scenarios should handle multiple service types","status":"passed","title":"should handle multiple service types","duration":0.19473099999999022,"failureMessages":[],"meta":{}},{"ancestorTitles":["Container","complex scenarios"],"fullName":"Container complex scenarios should handle optional dependencies gracefully","status":"passed","title":"should handle optional dependencies gracefully","duration":0.09770700000001398,"failureMessages":[],"meta":{}}],"startTime":1751896755492,"endTime":1751896755500.1948,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/di/Container.test.ts"},{"assertionResults":[{"ancestorTitles":["CustomErrors","ClaudeGWTError"],"fullName":"CustomErrors ClaudeGWTError should create error with message and code","status":"passed","title":"should create error with message and code","duration":0.8251000000000204,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","ClaudeGWTError"],"fullName":"CustomErrors ClaudeGWTError should capture stack trace","status":"passed","title":"should capture stack trace","duration":2.064756999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","ClaudeGWTError"],"fullName":"CustomErrors ClaudeGWTError should be throwable and catchable","status":"passed","title":"should be throwable and catchable","duration":0.45467199999995955,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitOperationError"],"fullName":"CustomErrors GitOperationError should create git operation error with operation details","status":"passed","title":"should create git operation error with operation details","duration":0.19759899999996833,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitOperationError"],"fullName":"CustomErrors GitOperationError should inherit from ClaudeGWTError","status":"passed","title":"should inherit from ClaudeGWTError","duration":0.09848099999999249,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","ClaudeInstanceError"],"fullName":"CustomErrors ClaudeInstanceError should create Claude instance error with instance ID","status":"passed","title":"should create Claude instance error with instance ID","duration":0.15726499999999533,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","ClaudeInstanceError"],"fullName":"CustomErrors ClaudeInstanceError should handle empty instance ID","status":"passed","title":"should handle empty instance ID","duration":0.07575300000002017,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","DirectoryStateError"],"fullName":"CustomErrors DirectoryStateError should create directory state error with directory type","status":"passed","title":"should create directory state error with directory type","duration":0.15687500000001364,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","DirectoryStateError"],"fullName":"CustomErrors DirectoryStateError should handle various directory types","status":"passed","title":"should handle various directory types","duration":0.21728400000000647,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","MessageRoutingError"],"fullName":"CustomErrors MessageRoutingError should create message routing error with message ID","status":"passed","title":"should create message routing error with message ID","duration":0.14386899999999514,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","MessageRoutingError"],"fullName":"CustomErrors MessageRoutingError should handle UUID-style message IDs","status":"passed","title":"should handle UUID-style message IDs","duration":0.07212700000002314,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitCloneError"],"fullName":"CustomErrors GitCloneError should create git clone error","status":"passed","title":"should create git clone error","duration":0.12703099999998813,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitCloneError"],"fullName":"CustomErrors GitCloneError should inherit git operation error properties","status":"passed","title":"should inherit git operation error properties","duration":0.08684799999997495,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitInitError"],"fullName":"CustomErrors GitInitError should create git init error","status":"passed","title":"should create git init error","duration":0.1154549999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitFetchError"],"fullName":"CustomErrors GitFetchError should create git fetch error","status":"passed","title":"should create git fetch error","duration":0.11027999999998883,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","GitFetchError"],"fullName":"CustomErrors GitFetchError should handle network-related fetch errors","status":"passed","title":"should handle network-related fetch errors","duration":0.06213900000000194,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","WorktreeError"],"fullName":"CustomErrors WorktreeError should create worktree error with default operation","status":"passed","title":"should create worktree error with default operation","duration":0.10736200000002327,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","WorktreeError"],"fullName":"CustomErrors WorktreeError should create worktree error with custom operation","status":"passed","title":"should create worktree error with custom operation","duration":0.7209839999999872,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","WorktreeError"],"fullName":"CustomErrors WorktreeError should handle different worktree operations","status":"passed","title":"should handle different worktree operations","duration":0.21515999999996893,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error inheritance chain"],"fullName":"CustomErrors Error inheritance chain should maintain proper inheritance for all error types","status":"passed","title":"should maintain proper inheritance for all error types","duration":1.1979570000000308,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error inheritance chain"],"fullName":"CustomErrors Error inheritance chain should allow catching specific error types","status":"passed","title":"should allow catching specific error types","duration":0.16647699999998622,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error inheritance chain"],"fullName":"CustomErrors Error inheritance chain should allow type checking in catch blocks","status":"passed","title":"should allow type checking in catch blocks","duration":0.0764880000000403,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error serialization"],"fullName":"CustomErrors Error serialization should serialize custom error properties correctly","status":"passed","title":"should serialize custom error properties correctly","duration":0.09564799999998286,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error serialization"],"fullName":"CustomErrors Error serialization should handle complex error properties","status":"passed","title":"should handle complex error properties","duration":0.07479699999998957,"failureMessages":[],"meta":{}},{"ancestorTitles":["CustomErrors","Error serialization"],"fullName":"CustomErrors Error serialization should preserve error message in the error object","status":"passed","title":"should preserve error message in the error object","duration":0.10326400000002423,"failureMessages":[],"meta":{}}],"startTime":1751896755199,"endTime":1751896755207.1665,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/errors/CustomErrors.test.ts"},{"assertionResults":[{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect empty directory","status":"passed","title":"should detect empty directory","duration":1.2845659999999839,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should create directory if it does not exist","status":"passed","title":"should create directory if it does not exist","duration":0.991862999999995,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect non-git directory","status":"passed","title":"should detect non-git directory","duration":0.3138309999999933,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect git worktree","status":"passed","title":"should detect git worktree","duration":0.39763200000001575,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect regular git repository","status":"passed","title":"should detect regular git repository","duration":0.20865999999998053,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should detect claude-gwt-parent setup","status":"passed","title":"should detect claude-gwt-parent setup","duration":0.20172399999998447,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitDetector","detectState"],"fullName":"GitDetector detectState should handle errors gracefully","status":"passed","title":"should handle errors gracefully","duration":0.7617779999999925,"failureMessages":[],"meta":{}}],"startTime":1751896755573,"endTime":1751896755577.7617,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/git/GitDetector.test.ts"},{"assertionResults":[{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return true for a regular git repository","status":"passed","title":"should return true for a regular git repository","duration":11.855852000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return false if no .git directory exists","status":"passed","title":"should return false if no .git directory exists","duration":2.6686939999999595,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return false if already a worktree","status":"passed","title":"should return false if already a worktree","duration":2.323032000000012,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return false if repository has uncommitted changes","status":"passed","title":"should return false if repository has uncommitted changes","duration":1.349964,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","canConvertToWorktree"],"fullName":"GitRepository canConvertToWorktree should return false if repository has submodules","status":"passed","title":"should return false if repository has submodules","duration":1.3654060000000072,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","convertToWorktreeSetup"],"fullName":"GitRepository convertToWorktreeSetup should throw error if repository has uncommitted changes","status":"passed","title":"should throw error if repository has uncommitted changes","duration":1.6667410000000018,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","convertToWorktreeSetup"],"fullName":"GitRepository convertToWorktreeSetup should throw error if .git is not a directory","status":"passed","title":"should throw error if .git is not a directory","duration":1.2625979999999686,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","convertToWorktreeSetup"],"fullName":"GitRepository convertToWorktreeSetup should successfully convert a regular repository","status":"passed","title":"should successfully convert a regular repository","duration":12.550272000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","convertToWorktreeSetup"],"fullName":"GitRepository convertToWorktreeSetup should handle errors during conversion","status":"passed","title":"should handle errors during conversion","duration":9.704020000000014,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","getCurrentBranch"],"fullName":"GitRepository getCurrentBranch should return the current branch name","status":"passed","title":"should return the current branch name","duration":2.1006640000000516,"failureMessages":[],"meta":{}},{"ancestorTitles":["GitRepository","getCurrentBranch"],"fullName":"GitRepository getCurrentBranch should return \"main\" if status fails","status":"passed","title":"should return \"main\" if status fails","duration":1.4281080000000657,"failureMessages":[],"meta":{}}],"startTime":1751896755305,"endTime":1751896755353.4282,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/git/GitRepository.test.ts"},{"assertionResults":[{"ancestorTitles":["WorktreeManager","constructor"],"fullName":"WorktreeManager constructor should use .bare directory when it exists","status":"passed","title":"should use .bare directory when it exists","duration":4.009516000000019,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","constructor"],"fullName":"WorktreeManager constructor should use base path when .bare directory does not exist","status":"passed","title":"should use base path when .bare directory does not exist","duration":1.1122629999999845,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should parse and filter worktree list correctly","status":"passed","title":"should parse and filter worktree list correctly","duration":0.774187999999981,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle worktrees with refs/heads/ prefix","status":"passed","title":"should handle worktrees with refs/heads/ prefix","duration":0.25592499999999063,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle locked and prunable worktrees","status":"passed","title":"should handle locked and prunable worktrees","duration":1.2085440000000176,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle empty worktree output","status":"passed","title":"should handle empty worktree output","duration":0.3249490000000037,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle incomplete worktree data","status":"passed","title":"should handle incomplete worktree data","duration":0.2009610000000066,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should throw GitOperationError on git command failure","status":"passed","title":"should throw GitOperationError on git command failure","duration":0.946060999999986,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","listWorktrees"],"fullName":"WorktreeManager listWorktrees should handle non-Error rejection","status":"passed","title":"should handle non-Error rejection","duration":0.3287359999999353,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should add worktree with base branch","status":"passed","title":"should add worktree with base branch","duration":0.8638620000000401,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should add worktree for existing local branch","status":"passed","title":"should add worktree for existing local branch","duration":0.3494519999999284,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should add worktree for existing remote branch","status":"passed","title":"should add worktree for existing remote branch","duration":0.20910200000002988,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should create new branch when it does not exist","status":"passed","title":"should create new branch when it does not exist","duration":0.24443600000006427,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should throw GitOperationError on git command failure","status":"passed","title":"should throw GitOperationError on git command failure","duration":0.33364899999992303,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","addWorktree"],"fullName":"WorktreeManager addWorktree should handle non-Error rejection in addWorktree","status":"passed","title":"should handle non-Error rejection in addWorktree","duration":1.925424000000021,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should remove worktree by branch name","status":"passed","title":"should remove worktree by branch name","duration":0.41220399999997426,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should remove worktree by full path","status":"passed","title":"should remove worktree by full path","duration":0.14779299999997875,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should remove worktree with force flag","status":"passed","title":"should remove worktree with force flag","duration":2.6610030000000506,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should throw GitOperationError on git command failure","status":"passed","title":"should throw GitOperationError on git command failure","duration":0.8496999999999844,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","removeWorktree"],"fullName":"WorktreeManager removeWorktree should handle non-Error rejection in removeWorktree","status":"passed","title":"should handle non-Error rejection in removeWorktree","duration":0.5195229999999356,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","pruneWorktrees"],"fullName":"WorktreeManager pruneWorktrees should prune worktrees successfully","status":"passed","title":"should prune worktrees successfully","duration":0.2884679999999662,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","pruneWorktrees"],"fullName":"WorktreeManager pruneWorktrees should throw GitOperationError on git command failure","status":"passed","title":"should throw GitOperationError on git command failure","duration":0.35205899999994017,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","pruneWorktrees"],"fullName":"WorktreeManager pruneWorktrees should handle non-Error rejection in pruneWorktrees","status":"passed","title":"should handle non-Error rejection in pruneWorktrees","duration":0.3537390000000187,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","parseWorktreeList edge cases"],"fullName":"WorktreeManager parseWorktreeList edge cases should handle unknown line types gracefully","status":"passed","title":"should handle unknown line types gracefully","duration":0.436341000000084,"failureMessages":[],"meta":{}},{"ancestorTitles":["WorktreeManager","parseWorktreeList edge cases"],"fullName":"WorktreeManager parseWorktreeList edge cases should handle multiple worktrees with different states","status":"passed","title":"should handle multiple worktrees with different states","duration":0.644525999999928,"failureMessages":[],"meta":{}}],"startTime":1751896755297,"endTime":1751896755317.6445,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/git/WorktreeManager.test.ts"},{"assertionResults":[{"ancestorTitles":["ErrorBoundary","async error handling"],"fullName":"ErrorBoundary async error handling should handle successful async operations","status":"passed","title":"should handle successful async operations","duration":1.6210029999999733,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","async error handling"],"fullName":"ErrorBoundary async error handling should handle async operation errors","status":"passed","title":"should handle async operation errors","duration":7.9931909999999675,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","async error handling"],"fullName":"ErrorBoundary async error handling should handle non-Error objects in async operations","status":"passed","title":"should handle non-Error objects in async operations","duration":0.7095830000000092,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","async error handling"],"fullName":"ErrorBoundary async error handling should handle async operations without context","status":"passed","title":"should handle async operations without context","duration":0.6089119999999753,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","sync error handling"],"fullName":"ErrorBoundary sync error handling should handle successful sync operations","status":"passed","title":"should handle successful sync operations","duration":0.3832760000000235,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","sync error handling"],"fullName":"ErrorBoundary sync error handling should handle sync operation errors","status":"passed","title":"should handle sync operation errors","duration":0.48843699999997625,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","function wrapping"],"fullName":"ErrorBoundary function wrapping should wrap async functions with error boundary","status":"passed","title":"should wrap async functions with error boundary","duration":0.4762349999999742,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","function wrapping"],"fullName":"ErrorBoundary function wrapping should wrap sync functions with error boundary","status":"passed","title":"should wrap sync functions with error boundary","duration":1.7318920000000162,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","function wrapping"],"fullName":"ErrorBoundary function wrapping should handle errors in wrapped async functions","status":"passed","title":"should handle errors in wrapped async functions","duration":0.5860069999999951,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","function wrapping"],"fullName":"ErrorBoundary function wrapping should handle errors in wrapped sync functions","status":"passed","title":"should handle errors in wrapped sync functions","duration":0.3920620000000099,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","context-specific error boundaries"],"fullName":"ErrorBoundary context-specific error boundaries should create context-specific error boundary","status":"passed","title":"should create context-specific error boundary","duration":0.2849799999999618,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","context-specific error boundaries"],"fullName":"ErrorBoundary context-specific error boundaries should use context in context-specific error boundary","status":"passed","title":"should use context in context-specific error boundary","duration":0.4704039999999736,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","context-specific error boundaries"],"fullName":"ErrorBoundary context-specific error boundaries should handle sync operations in context-specific boundary","status":"passed","title":"should handle sync operations in context-specific boundary","duration":0.2509719999999902,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","error message extraction"],"fullName":"ErrorBoundary error message extraction should extract message from Error objects","status":"passed","title":"should extract message from Error objects","duration":0.6336880000000065,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","error message extraction"],"fullName":"ErrorBoundary error message extraction should extract message from string errors","status":"passed","title":"should extract message from string errors","duration":0.3115619999999808,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","error message extraction"],"fullName":"ErrorBoundary error message extraction should extract message from objects with message property","status":"passed","title":"should extract message from objects with message property","duration":0.6161810000000401,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","error message extraction"],"fullName":"ErrorBoundary error message extraction should handle unknown error types","status":"passed","title":"should handle unknown error types","duration":0.5808910000000083,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","edge cases"],"fullName":"ErrorBoundary edge cases should handle operations that return undefined","status":"passed","title":"should handle operations that return undefined","duration":0.2814840000000345,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","edge cases"],"fullName":"ErrorBoundary edge cases should handle operations that return null","status":"passed","title":"should handle operations that return null","duration":0.239721999999972,"failureMessages":[],"meta":{}},{"ancestorTitles":["ErrorBoundary","edge cases"],"fullName":"ErrorBoundary edge cases should handle operations with multiple arguments","status":"passed","title":"should handle operations with multiple arguments","duration":0.3061119999999846,"failureMessages":[],"meta":{}}],"startTime":1751896755270,"endTime":1751896755289.3062,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/services/ErrorBoundary.test.ts"},{"assertionResults":[{"ancestorTitles":["Service Adapters","GitServiceAdapter","GitRepository methods"],"fullName":"Service Adapters GitServiceAdapter GitRepository methods should delegate getCurrentBranch with error boundary","status":"passed","title":"should delegate getCurrentBranch with error boundary","duration":4.080925000000036,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","GitRepository methods"],"fullName":"Service Adapters GitServiceAdapter GitRepository methods should delegate initializeBareRepository with logging","status":"passed","title":"should delegate initializeBareRepository with logging","duration":4.107605999999976,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","GitRepository methods"],"fullName":"Service Adapters GitServiceAdapter GitRepository methods should delegate fetch with logging","status":"passed","title":"should delegate fetch with logging","duration":0.6299400000000333,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","WorktreeManager methods"],"fullName":"Service Adapters GitServiceAdapter WorktreeManager methods should delegate listWorktrees with error boundary","status":"passed","title":"should delegate listWorktrees with error boundary","duration":4.38991900000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","WorktreeManager methods"],"fullName":"Service Adapters GitServiceAdapter WorktreeManager methods should delegate addWorktree with logging","status":"passed","title":"should delegate addWorktree with logging","duration":0.5599249999999643,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","GitServiceAdapter","WorktreeManager methods"],"fullName":"Service Adapters GitServiceAdapter WorktreeManager methods should delegate removeWorktree with logging","status":"passed","title":"should delegate removeWorktree with logging","duration":0.36059700000004113,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","TmuxServiceAdapter"],"fullName":"Service Adapters TmuxServiceAdapter should delegate isTmuxAvailable with error boundary","status":"passed","title":"should delegate isTmuxAvailable with error boundary","duration":0.41846600000002354,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","TmuxServiceAdapter"],"fullName":"Service Adapters TmuxServiceAdapter should delegate isInsideTmux with sync error boundary","status":"passed","title":"should delegate isInsideTmux with sync error boundary","duration":0.3704759999999965,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","TmuxServiceAdapter"],"fullName":"Service Adapters TmuxServiceAdapter should delegate launchSession with logging and error boundary","status":"passed","title":"should delegate launchSession with logging and error boundary","duration":0.4049320000000307,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","TmuxServiceAdapter"],"fullName":"Service Adapters TmuxServiceAdapter should delegate listSessions","status":"passed","title":"should delegate listSessions","duration":0.2536969999999883,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should cache method results","status":"passed","title":"should cache method results","duration":0.32526999999998907,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should respect TTL and refresh cache","status":"passed","title":"should respect TTL and refresh cache","duration":22.32601699999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should use custom cache key function","status":"passed","title":"should use custom cache key function","duration":0.6844640000000481,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should clear cache","status":"passed","title":"should clear cache","duration":0.22454199999992852,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","CachingAdapter"],"fullName":"Service Adapters CachingAdapter should get underlying service","status":"passed","title":"should get underlying service","duration":0.13284599999997226,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should succeed on first try","status":"passed","title":"should succeed on first try","duration":0.5274469999999383,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should retry on failure and eventually succeed","status":"passed","title":"should retry on failure and eventually succeed","duration":32.25434100000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should fail after max retries","status":"passed","title":"should fail after max retries","duration":33.082545000000096,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should respect shouldRetry function","status":"passed","title":"should respect shouldRetry function","duration":1.5095440000000053,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should retry with exponential backoff","status":"passed","title":"should retry with exponential backoff","duration":33.519383999999945,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","RetryAdapter"],"fullName":"Service Adapters RetryAdapter should get underlying service","status":"passed","title":"should get underlying service","duration":0.3258089999999356,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Adapters","Adapter composition"],"fullName":"Service Adapters Adapter composition should compose caching and retry adapters","status":"passed","title":"should compose caching and retry adapters","duration":11.833386000000019,"failureMessages":[],"meta":{}}],"startTime":1751896755271,"endTime":1751896755424.8335,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/services/adapters.test.ts"},{"assertionResults":[{"ancestorTitles":["Service Factories","GitServiceFactory"],"fullName":"Service Factories GitServiceFactory should create GitRepository service","status":"passed","title":"should create GitRepository service","duration":4.705146000000013,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","GitServiceFactory"],"fullName":"Service Factories GitServiceFactory should create WorktreeManager service","status":"passed","title":"should create WorktreeManager service","duration":0.46917199999995773,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","GitServiceFactory"],"fullName":"Service Factories GitServiceFactory should create GitDetector service","status":"passed","title":"should create GitDetector service","duration":0.2273769999999331,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","GitServiceFactory"],"fullName":"Service Factories GitServiceFactory should throw error for unknown service type","status":"passed","title":"should throw error for unknown service type","duration":0.626845000000003,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","TmuxServiceFactory"],"fullName":"Service Factories TmuxServiceFactory should create TmuxManager service","status":"passed","title":"should create TmuxManager service","duration":0.12870399999997062,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","ApplicationContextFactory"],"fullName":"Service Factories ApplicationContextFactory should create application context with all options","status":"passed","title":"should create application context with all options","duration":0.43657200000006924,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","ApplicationContextFactory"],"fullName":"Service Factories ApplicationContextFactory should create application context with minimal options","status":"passed","title":"should create application context with minimal options","duration":0.11939899999993031,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should create session config with all parameters","status":"passed","title":"should create session config with all parameters","duration":0.34336500000006254,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should create session config with default role","status":"passed","title":"should create session config with default role","duration":0.1836240000000089,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should sanitize repository and branch names","status":"passed","title":"should sanitize repository and branch names","duration":0.1649449999999888,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should handle special characters in names","status":"passed","title":"should handle special characters in names","duration":0.08045400000003156,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","SessionConfigFactory"],"fullName":"Service Factories SessionConfigFactory should handle edge cases in name sanitization","status":"passed","title":"should handle edge cases in name sanitization","duration":0.08708500000000186,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should register and retrieve factories","status":"passed","title":"should register and retrieve factories","duration":0.18447900000001027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should create services using registered factories","status":"passed","title":"should create services using registered factories","duration":0.5879630000000589,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should check if factory is registered","status":"passed","title":"should check if factory is registered","duration":0.15533000000004904,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should throw error for unregistered factory","status":"passed","title":"should throw error for unregistered factory","duration":0.20392800000001898,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should throw error when creating with unregistered factory","status":"passed","title":"should throw error when creating with unregistered factory","duration":0.10857499999997344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should get list of registered factory names","status":"passed","title":"should get list of registered factory names","duration":2.0908959999999297,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","FactoryRegistry"],"fullName":"Service Factories FactoryRegistry should support method chaining for registration","status":"passed","title":"should support method chaining for registration","duration":0.570842999999968,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default GitServiceFactory instance","status":"passed","title":"should provide default GitServiceFactory instance","duration":0.17562999999995554,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default TmuxServiceFactory instance","status":"passed","title":"should provide default TmuxServiceFactory instance","duration":0.0859650000001011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default ApplicationContextFactory instance","status":"passed","title":"should provide default ApplicationContextFactory instance","duration":0.08390699999995377,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default SessionConfigFactory instance","status":"passed","title":"should provide default SessionConfigFactory instance","duration":0.0987480000000005,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should provide default FactoryRegistry with registered factories","status":"passed","title":"should provide default FactoryRegistry with registered factories","duration":0.1668450000000803,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Default factory instances"],"fullName":"Service Factories Default factory instances should create services through default registry","status":"passed","title":"should create services through default registry","duration":0.4828660000000582,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Edge cases and error handling"],"fullName":"Service Factories Edge cases and error handling should handle empty strings in session config","status":"passed","title":"should handle empty strings in session config","duration":0.11589300000002822,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Edge cases and error handling"],"fullName":"Service Factories Edge cases and error handling should handle undefined gitRepo in session config","status":"passed","title":"should handle undefined gitRepo in session config","duration":0.11426699999992707,"failureMessages":[],"meta":{}},{"ancestorTitles":["Service Factories","Edge cases and error handling"],"fullName":"Service Factories Edge cases and error handling should handle complex repository names","status":"passed","title":"should handle complex repository names","duration":0.0982930000000124,"failureMessages":[],"meta":{}}],"startTime":1751896755387,"endTime":1751896755400.483,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/services/factories.test.ts"},{"assertionResults":[{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should execute simple commands","status":"passed","title":"should execute simple commands","duration":6.417894999999987,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should handle command failures","status":"passed","title":"should handle command failures","duration":3.726846000000023,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should respect timeout","status":"passed","title":"should respect timeout","duration":104.742999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should pass environment variables","status":"passed","title":"should pass environment variables","duration":6.256304999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommand"],"fullName":"Async Utilities execCommand should handle working directory","status":"passed","title":"should handle working directory","duration":4.675342999999998,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommandSafe"],"fullName":"Async Utilities execCommandSafe should execute commands with arguments safely","status":"passed","title":"should execute commands with arguments safely","duration":5.209727999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommandSafe"],"fullName":"Async Utilities execCommandSafe should prevent shell injection","status":"passed","title":"should prevent shell injection","duration":3.9479820000000245,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommandSafe"],"fullName":"Async Utilities execCommandSafe should handle command not found","status":"passed","title":"should handle command not found","duration":6.294579999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","execCommandSafe"],"fullName":"Async Utilities execCommandSafe should respect timeout","status":"passed","title":"should respect timeout","duration":106.93533200000002,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","withTimeout"],"fullName":"Async Utilities withTimeout should complete fast operations","status":"passed","title":"should complete fast operations","duration":0.6659819999999854,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","withTimeout"],"fullName":"Async Utilities withTimeout should timeout slow operations","status":"passed","title":"should timeout slow operations","duration":51.20909700000004,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","withTimeout"],"fullName":"Async Utilities withTimeout should use custom timeout message","status":"passed","title":"should use custom timeout message","duration":50.340418,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","parallelWithTimeout"],"fullName":"Async Utilities parallelWithTimeout should execute tasks in parallel","status":"passed","title":"should execute tasks in parallel","duration":101.17332999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","parallelWithTimeout"],"fullName":"Async Utilities parallelWithTimeout should handle individual timeouts","status":"passed","title":"should handle individual timeouts","duration":50.438335999999936,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","retryWithBackoff"],"fullName":"Async Utilities retryWithBackoff should succeed on first try","status":"passed","title":"should succeed on first try","duration":0.5145979999999781,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","retryWithBackoff"],"fullName":"Async Utilities retryWithBackoff should retry on failure","status":"passed","title":"should retry on failure","duration":31.807793999999944,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","retryWithBackoff"],"fullName":"Async Utilities retryWithBackoff should fail after max retries","status":"passed","title":"should fail after max retries","duration":30.329105000000027,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","retryWithBackoff"],"fullName":"Async Utilities retryWithBackoff should use exponential backoff","status":"passed","title":"should use exponential backoff","duration":300.9628869999999,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","debounceAsync"],"fullName":"Async Utilities debounceAsync should debounce multiple calls","status":"passed","title":"should debounce multiple calls","duration":1.1515430000001743,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","debounceAsync"],"fullName":"Async Utilities debounceAsync should handle different arguments","status":"passed","title":"should handle different arguments","duration":0.6451059999999416,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","debounceAsync"],"fullName":"Async Utilities debounceAsync should cancel pending calls","status":"passed","title":"should cancel pending calls","duration":0.24579599999992752,"failureMessages":[],"meta":{}},{"ancestorTitles":["Async Utilities","debounceAsync"],"fullName":"Async Utilities debounceAsync should handle errors","status":"passed","title":"should handle errors","duration":0.26021700000001147,"failureMessages":[],"meta":{}}],"startTime":1751896755230,"endTime":1751896756099.2603,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/utils/async.test.ts"},{"assertionResults":[{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with default options","status":"passed","title":"should create logger with default options","duration":1.2610710000000154,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with custom name","status":"passed","title":"should create logger with custom name","duration":0.4094830000000229,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with custom level","status":"passed","title":"should create logger with custom level","duration":0.15300300000001243,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with development mode","status":"passed","title":"should create logger with development mode","duration":0.23817999999999984,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should create logger with initial context","status":"passed","title":"should create logger with initial context","duration":0.1988319999999817,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","constructor"],"fullName":"StructuredLogger (Pino) constructor should use silent level in test environment","status":"passed","title":"should use silent level in test environment","duration":0.22653999999999996,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","gitignore management"],"fullName":"StructuredLogger (Pino) gitignore management should handle non-existent gitignore file","status":"passed","title":"should handle non-existent gitignore file","duration":0.5996789999999805,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","gitignore management"],"fullName":"StructuredLogger (Pino) gitignore management should add log file to existing gitignore","status":"passed","title":"should add log file to existing gitignore","duration":0.1470520000000306,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","gitignore management"],"fullName":"StructuredLogger (Pino) gitignore management should not duplicate log file entry in gitignore","status":"passed","title":"should not duplicate log file entry in gitignore","duration":0.29841900000002397,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","gitignore management"],"fullName":"StructuredLogger (Pino) gitignore management should handle gitignore errors gracefully","status":"passed","title":"should handle gitignore errors gracefully","duration":0.22673800000001165,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","context binding"],"fullName":"StructuredLogger (Pino) context binding should bind new context","status":"passed","title":"should bind new context","duration":0.5698810000000094,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","context binding"],"fullName":"StructuredLogger (Pino) context binding should create merged context when binding","status":"passed","title":"should create merged context when binding","duration":0.22163100000000213,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","child logger"],"fullName":"StructuredLogger (Pino) child logger should create child logger","status":"passed","title":"should create child logger","duration":0.2568560000000275,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log info messages without error","status":"passed","title":"should log info messages without error","duration":0.19191200000000208,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log info messages with fields without error","status":"passed","title":"should log info messages with fields without error","duration":0.16154299999999466,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log error messages without error","status":"passed","title":"should log error messages without error","duration":0.1660660000000007,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log error messages with Error objects without error","status":"passed","title":"should log error messages with Error objects without error","duration":0.20257900000001428,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log error messages with non-Error objects without error","status":"passed","title":"should log error messages with non-Error objects without error","duration":0.1459130000000073,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log debug messages without error","status":"passed","title":"should log debug messages without error","duration":0.211516999999958,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log warn messages without error","status":"passed","title":"should log warn messages without error","duration":0.15961700000002566,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log fatal messages without error","status":"passed","title":"should log fatal messages without error","duration":0.12817000000001144,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","logging methods"],"fullName":"StructuredLogger (Pino) logging methods should log trace messages without error","status":"passed","title":"should log trace messages without error","duration":0.12417400000003909,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","enhanced logging methods"],"fullName":"StructuredLogger (Pino) enhanced logging methods should log success messages with emoji without error","status":"passed","title":"should log success messages with emoji without error","duration":0.16647299999999632,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","enhanced logging methods"],"fullName":"StructuredLogger (Pino) enhanced logging methods should log failure messages with emoji without error","status":"passed","title":"should log failure messages with emoji without error","duration":1.5838080000000332,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","enhanced logging methods"],"fullName":"StructuredLogger (Pino) enhanced logging methods should log progress messages with emoji without error","status":"passed","title":"should log progress messages with emoji without error","duration":0.19144299999999248,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","enhanced logging methods"],"fullName":"StructuredLogger (Pino) enhanced logging methods should log milestone messages with emoji without error","status":"passed","title":"should log milestone messages with emoji without error","duration":0.13705800000002455,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","timing operations"],"fullName":"StructuredLogger (Pino) timing operations should measure operation time","status":"passed","title":"should measure operation time","duration":0.16944900000004282,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","context helpers"],"fullName":"StructuredLogger (Pino) context helpers should create git operation context","status":"passed","title":"should create git operation context","duration":0.1867300000000114,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","context helpers"],"fullName":"StructuredLogger (Pino) context helpers should create network operation context","status":"passed","title":"should create network operation context","duration":0.13770099999999275,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","level checking"],"fullName":"StructuredLogger (Pino) level checking should report all levels as disabled in silent mode","status":"passed","title":"should report all levels as disabled in silent mode","duration":0.2021850000000427,"failureMessages":[],"meta":{}},{"ancestorTitles":["StructuredLogger (Pino)","flush operations"],"fullName":"StructuredLogger (Pino) flush operations should call flush without error","status":"passed","title":"should call flush without error","duration":0.417301000000009,"failureMessages":[],"meta":{}},{"ancestorTitles":["Legacy console logger implementation","logger singleton"],"fullName":"Legacy console logger implementation logger singleton should export a global logger instance","status":"passed","title":"should export a global logger instance","duration":0.16074400000002242,"failureMessages":[],"meta":{}},{"ancestorTitles":["Legacy console logger implementation","createLogger factory"],"fullName":"Legacy console logger implementation createLogger factory should create a new logger instance","status":"passed","title":"should create a new logger instance","duration":0.11669899999998279,"failureMessages":[],"meta":{}},{"ancestorTitles":["Legacy console logger implementation","createLogger factory"],"fullName":"Legacy console logger implementation createLogger factory should create logger with custom options","status":"passed","title":"should create logger with custom options","duration":0.06804999999997108,"failureMessages":[],"meta":{}},{"ancestorTitles":["Legacy console logger implementation","Logger export"],"fullName":"Legacy console logger implementation Logger export should export Logger as type alias for StructuredLogger","status":"passed","title":"should export Logger as type alias for StructuredLogger","duration":0.04812599999996792,"failureMessages":[],"meta":{}},{"ancestorTitles":["verbose logging"],"fullName":"verbose logging should have verbose method","status":"passed","title":"should have verbose method","duration":0.0474360000000047,"failureMessages":[],"meta":{}},{"ancestorTitles":["verbose logging"],"fullName":"verbose logging should log verbose messages without error","status":"passed","title":"should log verbose messages without error","duration":0.08766700000001038,"failureMessages":[],"meta":{}},{"ancestorTitles":["verbose logging"],"fullName":"verbose logging should log verbose messages with fields without error","status":"passed","title":"should log verbose messages with fields without error","duration":0.11119800000000168,"failureMessages":[],"meta":{}}],"startTime":1751896755243,"endTime":1751896755254.1606,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/utils/logger.test.ts"},{"assertionResults":[{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should handle empty strings","status":"passed","title":"should handle empty strings","duration":0.5984280000000126,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should wrap simple strings in single quotes","status":"passed","title":"should wrap simple strings in single quotes","duration":0.10758300000003373,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should escape single quotes","status":"passed","title":"should escape single quotes","duration":0.07801000000000613,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should handle strings with multiple single quotes","status":"passed","title":"should handle strings with multiple single quotes","duration":0.07224899999999934,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should handle special shell characters","status":"passed","title":"should handle special shell characters","duration":0.2257060000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeShellArg"],"fullName":"Security Utilities escapeShellArg should handle newlines and special characters","status":"passed","title":"should handle newlines and special characters","duration":0.09001699999998891,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should normalize simple paths","status":"passed","title":"should normalize simple paths","duration":0.09685400000000755,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should reject paths with .. traversal","status":"passed","title":"should reject paths with .. traversal","duration":0.5344599999999673,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should handle paths with . correctly","status":"passed","title":"should handle paths with . correctly","duration":0.16323299999999108,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should enforce base path restrictions","status":"passed","title":"should enforce base path restrictions","duration":0.14038700000003246,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizePath"],"fullName":"Security Utilities sanitizePath should handle absolute paths with base path","status":"passed","title":"should handle absolute paths with base path","duration":0.1043589999999881,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should validate HTTPS URLs","status":"passed","title":"should validate HTTPS URLs","duration":0.21755899999999428,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should validate SSH URLs","status":"passed","title":"should validate SSH URLs","duration":0.1786000000000172,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should validate git protocol URLs","status":"passed","title":"should validate git protocol URLs","duration":0.11881799999997611,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should validate local paths","status":"passed","title":"should validate local paths","duration":0.14448099999998476,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidGitUrl"],"fullName":"Security Utilities isValidGitUrl should reject invalid URLs","status":"passed","title":"should reject invalid URLs","duration":0.12219500000003336,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidBranchName"],"fullName":"Security Utilities isValidBranchName should accept valid branch names","status":"passed","title":"should accept valid branch names","duration":0.13177799999999706,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidBranchName"],"fullName":"Security Utilities isValidBranchName should reject invalid branch names","status":"passed","title":"should reject invalid branch names","duration":0.19795900000002575,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizeSessionName"],"fullName":"Security Utilities sanitizeSessionName should sanitize tmux session names","status":"passed","title":"should sanitize tmux session names","duration":0.13858700000002955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizeSessionName"],"fullName":"Security Utilities sanitizeSessionName should remove invalid characters","status":"passed","title":"should remove invalid characters","duration":0.07441199999999526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizeSessionName"],"fullName":"Security Utilities sanitizeSessionName should limit length","status":"passed","title":"should limit length","duration":0.31306699999998955,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","sanitizeSessionName"],"fullName":"Security Utilities sanitizeSessionName should handle empty strings","status":"passed","title":"should handle empty strings","duration":0.0539229999999975,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidDirectoryName"],"fullName":"Security Utilities isValidDirectoryName should accept valid directory names","status":"passed","title":"should accept valid directory names","duration":0.12799699999999348,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isValidDirectoryName"],"fullName":"Security Utilities isValidDirectoryName should reject invalid directory names","status":"passed","title":"should reject invalid directory names","duration":0.941915999999992,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeTmuxArg"],"fullName":"Security Utilities escapeTmuxArg should escape tmux arguments","status":"passed","title":"should escape tmux arguments","duration":0.10679800000002615,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeTmuxArg"],"fullName":"Security Utilities escapeTmuxArg should handle backslashes","status":"passed","title":"should handle backslashes","duration":0.043707999999980984,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","escapeTmuxArg"],"fullName":"Security Utilities escapeTmuxArg should handle single quotes","status":"passed","title":"should handle single quotes","duration":0.039778000000012526,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isSafeForShell"],"fullName":"Security Utilities isSafeForShell should accept safe strings","status":"passed","title":"should accept safe strings","duration":0.12375500000001693,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","isSafeForShell"],"fullName":"Security Utilities isSafeForShell should reject strings with shell metacharacters","status":"passed","title":"should reject strings with shell metacharacters","duration":0.16480000000001382,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","safeEnvValue"],"fullName":"Security Utilities safeEnvValue should handle normal values","status":"passed","title":"should handle normal values","duration":0.0796100000000024,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","safeEnvValue"],"fullName":"Security Utilities safeEnvValue should remove null bytes","status":"passed","title":"should remove null bytes","duration":0.041651999999999134,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","safeEnvValue"],"fullName":"Security Utilities safeEnvValue should escape shell special characters","status":"passed","title":"should escape shell special characters","duration":0.06713499999995065,"failureMessages":[],"meta":{}},{"ancestorTitles":["Security Utilities","safeEnvValue"],"fullName":"Security Utilities safeEnvValue should handle empty strings","status":"passed","title":"should handle empty strings","duration":0.05625600000001896,"failureMessages":[],"meta":{}}],"startTime":1751896755200,"endTime":1751896755206.1648,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/utils/security.test.ts"},{"assertionResults":[{"ancestorTitles":["Type Guards","isDirectoryState"],"fullName":"Type Guards isDirectoryState should return true for valid DirectoryState objects","status":"passed","title":"should return true for valid DirectoryState objects","duration":0.7706719999999905,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isDirectoryState"],"fullName":"Type Guards isDirectoryState should return false for invalid objects","status":"passed","title":"should return false for invalid objects","duration":0.24124199999999973,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isSessionInfo"],"fullName":"Type Guards isSessionInfo should return true for valid SessionInfo objects","status":"passed","title":"should return true for valid SessionInfo objects","duration":0.09354200000001356,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isSessionInfo"],"fullName":"Type Guards isSessionInfo should return false for invalid objects","status":"passed","title":"should return false for invalid objects","duration":0.130141999999978,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isGitWorktreeInfo"],"fullName":"Type Guards isGitWorktreeInfo should return true for valid GitWorktreeInfo objects","status":"passed","title":"should return true for valid GitWorktreeInfo objects","duration":0.1231459999999629,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isGitWorktreeInfo"],"fullName":"Type Guards isGitWorktreeInfo should return false for invalid objects","status":"passed","title":"should return false for invalid objects","duration":0.147420000000011,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrorLike"],"fullName":"Type Guards isErrorLike should return true for Error instances","status":"passed","title":"should return true for Error instances","duration":0.11913699999996652,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrorLike"],"fullName":"Type Guards isErrorLike should return true for Error-like objects","status":"passed","title":"should return true for Error-like objects","duration":0.07390499999996791,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrorLike"],"fullName":"Type Guards isErrorLike should return false for non-error objects","status":"passed","title":"should return false for non-error objects","duration":0.1690510000000245,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrnoException"],"fullName":"Type Guards isErrnoException should return true for NodeJS.ErrnoException","status":"passed","title":"should return true for NodeJS.ErrnoException","duration":0.1410179999999741,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isErrnoException"],"fullName":"Type Guards isErrnoException should return false for regular errors","status":"passed","title":"should return false for regular errors","duration":0.0725360000000137,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isStringArray"],"fullName":"Type Guards isStringArray should return true for arrays of strings","status":"passed","title":"should return true for arrays of strings","duration":0.08526200000000017,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isStringArray"],"fullName":"Type Guards isStringArray should return false for non-string arrays","status":"passed","title":"should return false for non-string arrays","duration":0.09752499999996189,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isNonEmptyString"],"fullName":"Type Guards isNonEmptyString should return true for non-empty strings","status":"passed","title":"should return true for non-empty strings","duration":0.08041099999996959,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isNonEmptyString"],"fullName":"Type Guards isNonEmptyString should return false for empty strings and non-strings","status":"passed","title":"should return false for empty strings and non-strings","duration":0.0893909999999778,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isPositiveNumber"],"fullName":"Type Guards isPositiveNumber should return true for positive numbers","status":"passed","title":"should return true for positive numbers","duration":0.07987500000001546,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isPositiveNumber"],"fullName":"Type Guards isPositiveNumber should return false for non-positive numbers","status":"passed","title":"should return false for non-positive numbers","duration":0.11545999999998457,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","safeJsonParse"],"fullName":"Type Guards safeJsonParse should parse valid JSON with type guard","status":"passed","title":"should parse valid JSON with type guard","duration":0.31837999999999056,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","safeJsonParse"],"fullName":"Type Guards safeJsonParse should return null for invalid JSON","status":"passed","title":"should return null for invalid JSON","duration":0.11065300000001344,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","assert"],"fullName":"Type Guards assert should not throw for truthy conditions","status":"passed","title":"should not throw for truthy conditions","duration":0.4758789999999635,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","assert"],"fullName":"Type Guards assert should throw for falsy conditions","status":"passed","title":"should throw for falsy conditions","duration":1.1254580000000374,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","assert"],"fullName":"Type Guards assert should use custom message","status":"passed","title":"should use custom message","duration":0.09867599999995491,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isDefined"],"fullName":"Type Guards isDefined should return true for defined values","status":"passed","title":"should return true for defined values","duration":0.08698100000003706,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isDefined"],"fullName":"Type Guards isDefined should return false for null and undefined","status":"passed","title":"should return false for null and undefined","duration":0.04502700000000459,"failureMessages":[],"meta":{}},{"ancestorTitles":["Type Guards","isDefined"],"fullName":"Type Guards isDefined should narrow types correctly","status":"passed","title":"should narrow types correctly","duration":0.039750000000026375,"failureMessages":[],"meta":{}}],"startTime":1751896755199,"endTime":1751896755204.1255,"status":"passed","message":"","name":"/home/nazq/dev/claude_gwt/tests/unit/core/utils/type-guards.test.ts"}]}