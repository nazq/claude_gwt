name: Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'npm tag (e.g., latest, next, beta)'
        required: true
        default: 'latest'
        type: choice
        options:
          - latest
          - next
          - beta
          - alpha

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build package
        run: npm run build:clean

      - name: Configure npm for publishing
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm config set access public

      - name: Publish to npm (Release)
        if: github.event_name == 'release'
        run: |
          # Extract tag from version if it's a prerelease
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            # Try to extract tag from version (e.g., 1.0.0-beta.1 -> beta)
            VERSION="${{ github.event.release.tag_name }}"
            if [[ $VERSION =~ -([a-zA-Z]+) ]]; then
              NPM_TAG="${BASH_REMATCH[1]}"
            else
              NPM_TAG="next"
            fi
          else
            NPM_TAG="latest"
          fi
          
          echo "Publishing with tag: $NPM_TAG"
          npm publish --tag $NPM_TAG
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Publishing with tag: ${{ inputs.tag }}"
          npm publish --tag ${{ inputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create publish summary
        if: success()
        run: |
          echo "## ðŸ“¦ Package Published Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: claude-gwt" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: $(node -p "require('./package.json').version")" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "- **Tag**: $([[ "${{ github.event.release.prerelease }}" == "true" ]] && echo "next" || echo "latest")" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Tag**: ${{ inputs.tag }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Registry**: https://www.npmjs.com/package/claude-gwt" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "npm install -g claude-gwt" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  verify-publication:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Wait for npm propagation
        run: sleep 30

      - name: Verify package on npm
        run: |
          PACKAGE_VERSION=$(npm view claude-gwt version)
          echo "Latest published version: $PACKAGE_VERSION"
          
      - name: Test installation
        run: |
          npm install -g claude-gwt
          claude-gwt --version