name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master, main ]

jobs:
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: TypeScript type checking
      run: npm run typecheck
      
    - name: Check formatting
      run: npm run format:check
      
    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: dist
        key: build-${{ runner.os }}-${{ hashFiles('package*.json', 'tsconfig.json', 'src/**') }}
        restore-keys: |
          build-${{ runner.os }}-
          
    - name: Build project
      run: npm run build
      
    - name: Check build output
      run: |
        ls -la dist/
        test -f dist/src/cli/index.js
        
    - name: CLI health check
      run: |
        chmod +x dist/src/cli/index.js
        node dist/src/cli/index.js --version
        node dist/src/cli/index.js --help
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ runner.os }}
        path: |
          dist/
          package.json
          package-lock.json
        retention-days: 7

  test:
    name: Test on Node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: quick-checks
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [18.x, 20.x, 22.x, 24.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install tmux (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y tmux
      
    - name: Install tmux (macOS only)
      if: matrix.os == 'macos-latest'
      run: brew install tmux
      
    - name: Restore build cache
      uses: actions/cache@v4
      with:
        path: dist
        key: build-${{ runner.os }}-${{ hashFiles('package*.json', 'tsconfig.json', 'src/**') }}
        restore-keys: |
          build-${{ runner.os }}-
          
    - name: Build project
      run: npm run build
      
    - name: Run unit tests
      run: npm run test:ci:unit
      
    - name: Run integration tests
      run: npm run test:ci:integ
      
    - name: Generate coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      run: |
        npm run test:ci
        echo "### Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        npx c8 report --reporter=text-summary | tail -n +2 >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
      
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        slug: nazq/claude_gwt
        fail_ci_if_error: false
        
    - name: Upload coverage artifacts
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage/
          .coverage/
        retention-days: 30
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
        path: |
          test-results/
          *.log
        retention-days: 7
        if-no-files-found: ignore

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: quick-checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Check for known vulnerabilities
      run: npx audit-ci --moderate
      continue-on-error: true

