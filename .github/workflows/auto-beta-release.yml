name: Auto Beta Release

on:
  push:
    branches: [master, main]
    # Don't run on version commits to avoid loops
    paths-ignore:
      - 'package.json'
      - 'package-lock.json'
      - 'CHANGELOG.md'

jobs:
  beta-release:
    name: Automatic Beta Release
    runs-on: ubuntu-latest
    # Only run if not a version commit
    if: |
      !contains(github.event.head_commit.message, 'chore(release):') &&
      !contains(github.event.head_commit.message, '[skip ci]')
    
    permissions:
      contents: write
      packages: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use PAT if available for pushing, otherwise default token
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build:clean
      
      - name: Run tests
        run: npm test
      
      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if already a beta version
          if [[ "$CURRENT_VERSION" == *"-beta."* ]]; then
            echo "is_beta=true" >> $GITHUB_OUTPUT
          else
            echo "is_beta=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Determine next beta version
        id: next_version
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
          
          # If current version is already beta, increment the beta number
          if [[ "$CURRENT_VERSION" == *"-beta."* ]]; then
            # Extract base version and beta number
            BASE_VERSION=$(echo $CURRENT_VERSION | sed -E 's/-beta\.[0-9]+$//')
            BETA_NUM=$(echo $CURRENT_VERSION | sed -E 's/.*-beta\.([0-9]+)$/\1/')
            NEXT_BETA_NUM=$((BETA_NUM + 1))
            NEXT_VERSION="${BASE_VERSION}-beta.${NEXT_BETA_NUM}"
          else
            # If not beta, create first beta of next patch version
            # Parse current version components
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
            # Increment patch version
            NEXT_PATCH=$((PATCH + 1))
            NEXT_VERSION="${MAJOR}.${MINOR}.${NEXT_PATCH}-beta.0"
          fi
          
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "Next beta version: $NEXT_VERSION"
      
      - name: Update version
        run: |
          NEW_VERSION="${{ steps.next_version.outputs.next_version }}"
          
          # Update package.json
          npm version $NEW_VERSION --no-git-tag-version --no-commit-hooks
          
          # Update CLI version
          sed -i "s/\.version('[^']*')/\.version('${NEW_VERSION//\//\\/}')/" src/cli/index.ts
          
          # Rebuild with new version
          npm run build
      
      - name: Commit version changes
        run: |
          git add -A
          git commit -m "chore(release): ${{ steps.next_version.outputs.next_version }}-beta [skip ci]

          - Auto-generated beta release
          - Triggered by: ${{ github.event.head_commit.message }}"
      
      - name: Create git tag
        run: |
          git tag -a "v${{ steps.next_version.outputs.next_version }}" -m "Beta Release v${{ steps.next_version.outputs.next_version }}"
      
      - name: Push changes
        run: |
          git push origin HEAD:master
          git push origin "v${{ steps.next_version.outputs.next_version }}"
      
      - name: Configure npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm config set access public
      
      - name: Publish to npm
        run: |
          npm publish --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the commit message that triggered this workflow
          TRIGGER_MESSAGE="${{ github.event.head_commit.message }}"
          
          # Create release notes
          RELEASE_NOTES="## ðŸš€ Beta Release v${{ steps.next_version.outputs.next_version }}

### What's Changed
- $TRIGGER_MESSAGE

### Installation
\`\`\`bash
npm install -g claude-gwt@beta
\`\`\`

**Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ steps.current_version.outputs.version }}...v${{ steps.next_version.outputs.next_version }}"

          # Create the release
          gh release create "v${{ steps.next_version.outputs.next_version }}" \
            --title "Release ${{ steps.next_version.outputs.next_version }}" \
            --notes "$RELEASE_NOTES" \
            --prerelease \
            --target "${{ github.sha }}"
      
      - name: Create summary
        run: |
          echo "# ðŸš€ Beta Release Published!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ðŸ“¦ Version Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: \`${{ steps.next_version.outputs.next_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **npm Tag**: \`beta\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event.head_commit.message }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ðŸ“¥ Installation" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo "npm install -g claude-gwt@beta" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ðŸ”— Links" >> $GITHUB_STEP_SUMMARY
          echo "- [npm Package](https://www.npmjs.com/package/claude-gwt/v/${{ steps.next_version.outputs.next_version }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Git Tag](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.next_version.outputs.next_version }})" >> $GITHUB_STEP_SUMMARY